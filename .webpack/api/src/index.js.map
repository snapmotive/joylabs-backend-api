{"version":3,"file":"src/index.js","mappings":"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","sources":["webpack://joylabs-backend-api-v3/./src/utils/webCrypto.js","webpack://joylabs-backend-api-v3/external commonjs \"@aws-sdk/client-sts\"","webpack://joylabs-backend-api-v3/external commonjs \"@aws-sdk/client-api-gateway\"","webpack://joylabs-backend-api-v3/./src/routes/auth.js","webpack://joylabs-backend-api-v3/./src/services/square.js","webpack://joylabs-backend-api-v3/external commonjs \"morgan\"","webpack://joylabs-backend-api-v3/./src/routes/products.js","webpack://joylabs-backend-api-v3/./src/routes/merchant.js","webpack://joylabs-backend-api-v3/./src/controllers/aws-diagnostic.js","webpack://joylabs-backend-api-v3/./src/services/catalog.js","webpack://joylabs-backend-api-v3/./src/routes/health.js","webpack://joylabs-backend-api-v3/external commonjs \"express\"","webpack://joylabs-backend-api-v3/./src/utils/apiRateLimiter.js","webpack://joylabs-backend-api-v3/external commonjs \"serverless-http\"","webpack://joylabs-backend-api-v3/./src/utils/errorHandling.js","webpack://joylabs-backend-api-v3/./src/routes/locations.js","webpack://joylabs-backend-api-v3/external commonjs \"@aws-sdk/client-secrets-manager\"","webpack://joylabs-backend-api-v3/./src/middleware/auth.js","webpack://joylabs-backend-api-v3/./src/models/user.js","webpack://joylabs-backend-api-v3/external commonjs \"@aws-sdk/lib-dynamodb\"","webpack://joylabs-backend-api-v3/external commonjs \"@aws-sdk/client-lambda\"","webpack://joylabs-backend-api-v3/external commonjs \"square\"","webpack://joylabs-backend-api-v3/./src/middleware/cors.js","webpack://joylabs-backend-api-v3/external commonjs \"cors\"","webpack://joylabs-backend-api-v3/external commonjs \"connect-dynamodb\"","webpack://joylabs-backend-api-v3/./src/controllers/health.js","webpack://joylabs-backend-api-v3/./src/middleware/validation.js","webpack://joylabs-backend-api-v3/./src/models/CatalogItem.js","webpack://joylabs-backend-api-v3/./src/services/location.js","webpack://joylabs-backend-api-v3/./src/utils/squareApiHelpers.js","webpack://joylabs-backend-api-v3/./src/utils/fetchHelpers.js","webpack://joylabs-backend-api-v3/./src/controllers/categories.js","webpack://joylabs-backend-api-v3/external commonjs \"jsonwebtoken\"","webpack://joylabs-backend-api-v3/./src/routes/catalog.js","webpack://joylabs-backend-api-v3/external commonjs \"cookie-parser\"","webpack://joylabs-backend-api-v3/external commonjs \"uuid\"","webpack://joylabs-backend-api-v3/./src/routes/categories.js","webpack://joylabs-backend-api-v3/external commonjs \"@aws-sdk/client-dynamodb\"","webpack://joylabs-backend-api-v3/external commonjs \"axios\"","webpack://joylabs-backend-api-v3/external commonjs \"express-session\"","webpack://joylabs-backend-api-v3/./src/index.js","webpack://joylabs-backend-api-v3/external node-commonjs \"crypto\"","webpack://joylabs-backend-api-v3/webpack/bootstrap","webpack://joylabs-backend-api-v3/webpack/startup"],"sourcesContent":["/**\n * WebCrypto API utilities for secure cryptographic operations\n * Uses modern Web Crypto API for improved security in Node.js 22\n */\n\n// Import Node.js crypto modules\nconst crypto = require('crypto');\nconst { webcrypto } = crypto;\n\n/**\n * Generate a code verifier for PKCE\n * Must be between 43-128 chars, URL safe base64\n * @returns {string} A random code verifier\n */\nasync function generateCodeVerifier() {\n  // Create a random array of 32 bytes (will result in 43 chars when base64url encoded)\n  const array = new Uint8Array(32);\n  webcrypto.getRandomValues(array);\n  return base64URLEncode(array);\n}\n\n/**\n * Generate a code challenge from a code verifier\n * @param {string} codeVerifier - The code verifier to hash\n * @returns {Promise<string>} The code challenge (base64url encoded SHA-256 hash)\n */\nasync function generateCodeChallenge(codeVerifier) {\n  // Encode the verifier as UTF-8\n  const encoder = new TextEncoder();\n  const data = encoder.encode(codeVerifier);\n\n  // Hash using SHA-256\n  const digest = await webcrypto.subtle.digest('SHA-256', data);\n\n  // Convert to base64url\n  return base64URLEncode(new Uint8Array(digest));\n}\n\n/**\n * Encode a buffer as URL-safe base64\n * @param {Uint8Array} buffer - The buffer to encode\n * @returns {string} URL-safe base64 string\n */\nfunction base64URLEncode(buffer) {\n  // Convert buffer to base64 (Node.js doesn't have btoa)\n  const base64 = Buffer.from(buffer).toString('base64');\n\n  // Make base64 URL-safe\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\n/**\n * Legacy method to generate code verifier using Node.js crypto\n * @returns {string} A random code verifier\n */\nfunction generateCodeVerifierLegacy() {\n  const randomBytes = crypto.randomBytes(32);\n  return base64URLEncodeLegacy(randomBytes);\n}\n\n/**\n * Legacy base64url encoding for Node.js Buffer\n * @param {Buffer} buffer - The buffer to encode\n * @returns {string} URL-safe base64 string\n */\nfunction base64URLEncodeLegacy(buffer) {\n  return buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\n/**\n * Legacy method to generate code challenge\n * @param {string} verifier - The code verifier\n * @returns {string} The code challenge\n */\nfunction generateCodeChallengeLegacy(verifier) {\n  const hash = crypto.createHash('sha256').update(verifier).digest();\n  return base64URLEncodeLegacy(hash);\n}\n\nmodule.exports = {\n  // Modern WebCrypto methods\n  generateCodeVerifier,\n  generateCodeChallenge,\n  base64URLEncode,\n\n  // Legacy compatibility methods\n  generateCodeVerifierLegacy,\n  generateCodeChallengeLegacy,\n  base64URLEncodeLegacy,\n};\n","module.exports = require(\"@aws-sdk/client-sts\");","module.exports = require(\"@aws-sdk/client-api-gateway\");","const express = require('express');\nconst router = express.Router();\nconst authMiddleware = require('../middleware/auth');\nconst squareService = require('../services/square');\nconst {\n  generateOAuthUrl,\n  exchangeCodeForToken,\n  getMerchantInfo,\n  getSquareClient,\n} = require('../services/square');\nconst {\n  generateStateParam,\n  generateCodeVerifier,\n  generateCodeChallenge,\n} = require('../services/square');\nconst { createUser, findUserBySquareMerchantId, updateUser } = require('../models/user');\nconst jwt = require('jsonwebtoken');\nconst crypto = require('crypto');\nconst { DynamoDBClient } = require('@aws-sdk/client-dynamodb');\nconst {\n  DynamoDBDocumentClient,\n  PutCommand,\n  GetCommand,\n  UpdateCommand,\n} = require('@aws-sdk/lib-dynamodb');\nconst { SquareClient } = require('square');\n\n/**\n * IMPORTANT: This is the primary implementation of the Square OAuth flow.\n * The duplicate implementation in oauthHandlers.js is maintained for backward\n * compatibility but will be removed in a future version.\n *\n * All new OAuth functionality should be added here rather than in oauthHandlers.js.\n */\n\n// Create a temporary memory store for code verifiers\n// Note: In production, consider using a database or Redis for persistence across instances\nif (!global.codeVerifierStore) {\n  global.codeVerifierStore = new Map();\n}\n\n// Create a temporary memory store for OAuth states\nif (!global.oauthStates) {\n  global.oauthStates = new Map();\n}\n\n// Initialize DynamoDB client\nconst dynamoDbClient = new DynamoDBClient({\n  maxAttempts: 3,\n  requestTimeout: 3000,\n  ...(process.env.IS_OFFLINE === 'true'\n    ? {\n        region: 'localhost',\n        endpoint: 'http://localhost:8000',\n      }\n    : {}),\n});\nconst docClient = DynamoDBDocumentClient.from(dynamoDbClient);\n\n// Endpoint to store code verifier with request_id\nrouter.post('/store-verifier', async (req, res) => {\n  try {\n    const { request_id, code_verifier } = req.body;\n\n    // Log request details\n    console.log('Store verifier request received:', {\n      hasRequestId: !!request_id,\n      requestIdLength: request_id?.length || 0,\n      hasCodeVerifier: !!code_verifier,\n      codeVerifierLength: code_verifier?.length || 0,\n      codeVerifierFirstChars: code_verifier ? code_verifier.substring(0, 5) : null,\n      codeVerifierLastChars: code_verifier\n        ? code_verifier.substring(code_verifier.length - 5)\n        : null,\n    });\n\n    // Validate required parameters\n    if (!request_id) {\n      console.error('Missing request_id in store-verifier request');\n      return res.status(400).json({ error: 'Missing request_id parameter' });\n    }\n\n    if (!code_verifier) {\n      console.error('Missing code_verifier in store-verifier request');\n      return res.status(400).json({ error: 'Missing code_verifier parameter' });\n    }\n\n    // Validate code_verifier format (43-128 chars, URL-safe base64)\n    if (code_verifier.length < 43 || code_verifier.length > 128) {\n      console.error(\n        `Invalid code_verifier length: ${code_verifier.length} (must be 43-128 characters)`\n      );\n      return res.status(400).json({\n        error: 'Invalid code_verifier format',\n        details: `Length ${code_verifier.length} is outside valid range (43-128)`,\n      });\n    }\n\n    // Check characters are valid for URL-safe base64\n    const validChars = /^[A-Za-z0-9\\-._~]+$/;\n    if (!validChars.test(code_verifier)) {\n      console.error('Code verifier contains invalid characters');\n      return res.status(400).json({\n        error: 'Invalid code_verifier format',\n        details: 'Contains invalid characters (only A-Z, a-z, 0-9, -, ., _, ~ allowed)',\n      });\n    }\n\n    // Store code_verifier with request_id (with TTL of 10 minutes)\n    global.codeVerifierStore.set(request_id, {\n      code_verifier,\n      timestamp: Date.now(),\n      ttl: 10 * 60 * 1000, // 10 minutes in milliseconds\n    });\n\n    console.log(`Code verifier stored successfully for request_id: ${request_id}`);\n\n    // Clean up expired entries every time we add a new one\n    cleanupExpiredCodeVerifiers();\n\n    res.status(200).json({ success: true });\n  } catch (error) {\n    console.error('Error storing code verifier:', error);\n    res.status(500).json({\n      error: 'Failed to store code verifier',\n      details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n    });\n  }\n});\n\n// Helper function to clean up expired code verifiers\nfunction cleanupExpiredCodeVerifiers() {\n  const now = Date.now();\n  let count = 0;\n\n  for (const [request_id, data] of global.codeVerifierStore.entries()) {\n    if (now - data.timestamp > data.ttl) {\n      global.codeVerifierStore.delete(request_id);\n      count++;\n    }\n  }\n\n  if (count > 0) {\n    console.log(`Cleaned up ${count} expired code verifiers`);\n  }\n}\n\n// Square OAuth routes for web\nrouter.get('/square', async (req, res) => {\n  console.log('Starting Square OAuth flow');\n\n  try {\n    // Generate a secure state parameter\n    const state = generateStateParam();\n    console.log('Generated state parameter:', state);\n\n    // Generate code verifier for PKCE flow\n    const codeVerifier = generateCodeVerifier();\n    console.log('Generated code verifier for PKCE flow');\n\n    // Store state in DynamoDB with TTL\n    const ttl = Math.floor(Date.now() / 1000) + 10 * 60; // 10 minutes\n    const params = {\n      TableName: process.env.STATES_TABLE || 'joylabs-backend-api-v3-production-states',\n      Item: {\n        state: state,\n        timestamp: Date.now(),\n        used: false,\n        ttl: ttl,\n        code_verifier: codeVerifier,\n        redirectUrl: 'joylabs://square-callback',\n      },\n    };\n\n    console.log('Storing state in DynamoDB:', {\n      tableName: params.TableName,\n      state: state.substring(0, 5) + '...' + state.substring(state.length - 5),\n      ttl: new Date(ttl * 1000).toISOString(),\n    });\n\n    const result = await docClient.send(new PutCommand(params));\n\n    console.log('DynamoDB PutCommand result:', {\n      statusCode: result.$metadata.httpStatusCode,\n      requestId: result.$metadata.requestId,\n    });\n\n    // Set code verifier in cookie for callback\n    res.cookie('square_oauth_code_verifier', codeVerifier, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 5 * 60 * 1000, // 5 minutes\n      sameSite: 'lax',\n    });\n\n    // Generate OAuth URL with the secure state and code verifier\n    const url = await generateOAuthUrl(state, codeVerifier);\n    console.log('Redirecting to Square OAuth URL');\n\n    // Log details for debugging (with redacted values)\n    console.log('OAuth request details:', {\n      environment: 'production',\n      state: state,\n      code_verifier: codeVerifier.substring(0, 5) + '...',\n      has_cookie: true,\n    });\n\n    res.redirect(url);\n  } catch (error) {\n    console.error('Error generating OAuth URL:', error);\n    res.status(500).json({ error: 'Failed to start OAuth flow' });\n  }\n});\n\n/**\n * Handle Square OAuth callback\n * Receives the callback from Square, exchanges code for token, then redirects to mobile app\n */\nrouter.get('/square/callback', async (req, res) => {\n  try {\n    const { code, state, error, app_callback } = req.query;\n\n    console.log('Square callback received:', {\n      hasCode: !!code,\n      state,\n      hasError: !!error,\n      app_callback,\n      STATES_TABLE: process.env.STATES_TABLE || 'joylabs-backend-api-v3-production-states',\n      headers: req.headers,\n      query: req.query,\n    });\n\n    if (error) {\n      console.error('Error from Square:', error);\n      return res.redirect(`joylabs://square-callback?error=${encodeURIComponent(error)}`);\n    }\n\n    if (!code) {\n      console.error('No code provided in Square callback');\n      return res.redirect('joylabs://square-callback?error=missing_code');\n    }\n\n    if (!state) {\n      console.error('No state provided in Square callback');\n      return res.redirect('joylabs://square-callback?error=missing_state');\n    }\n\n    // Retrieve state data from DynamoDB\n    const getStateParams = {\n      TableName: process.env.STATES_TABLE || 'joylabs-backend-api-v3-production-states',\n      Key: {\n        state: state,\n      },\n    };\n\n    console.log('Retrieving state data from DynamoDB:', {\n      tableName: getStateParams.TableName,\n      state: state,\n    });\n\n    try {\n      const result = await docClient.send(new GetCommand(getStateParams));\n\n      if (!result.Item) {\n        console.error('No state data found in DynamoDB');\n        return res.redirect('joylabs://square-callback?error=invalid_state');\n      }\n\n      console.log('Retrieved state data from DynamoDB');\n\n      const stateData = result.Item;\n\n      // Check if state has already been used\n      if (stateData.used) {\n        console.error('State has already been used');\n        return res.redirect('joylabs://square-callback?error=state_already_used');\n      }\n\n      // Get code verifier from state data\n      const codeVerifier = stateData.code_verifier;\n      const redirectUrl = stateData.redirectUrl || 'joylabs://square-callback';\n\n      if (!codeVerifier) {\n        console.error('No code verifier found for state');\n\n        // Check if we're dealing with a non-PKCE flow (for backward compatibility)\n        if (stateData.code_challenge) {\n          return res.redirect(\n            `${redirectUrl}?error=missing_code_verifier&details=code_challenge_exists`\n          );\n        }\n\n        // Try to proceed without code verifier (may work for non-PKCE flows)\n        try {\n          // Exchange code for tokens without code verifier\n          const tokenResponse = await squareService.exchangeCodeForToken(code);\n          console.log('Successfully exchanged code for tokens without PKCE');\n\n          // Mark state as used\n          const updateParams = {\n            TableName: process.env.STATES_TABLE || 'joylabs-backend-api-v3-production-states',\n            Key: {\n              state: state,\n            },\n            UpdateExpression: 'set used = :used',\n            ExpressionAttributeValues: {\n              ':used': true,\n            },\n          };\n\n          await docClient.send(new UpdateCommand(updateParams));\n          console.log('Marked state as used in DynamoDB');\n\n          // Get merchant info using the access token - try native fetch first for better security\n          let merchantInfo;\n          try {\n            // Use native fetch implementation first (Node.js 22 feature)\n            merchantInfo = await squareService.getMerchantInfoWithFetch(tokenResponse.access_token);\n            console.log('Retrieved merchant info using native fetch API');\n          } catch (fetchError) {\n            // Fall back to SDK implementation if fetch fails\n            console.warn(\n              'Fetch API failed for merchant info, falling back to SDK:',\n              fetchError.message\n            );\n            merchantInfo = await squareService.getMerchantInfo(tokenResponse.access_token);\n            console.log('Retrieved merchant info using Square SDK');\n          }\n\n          console.log('Retrieved merchant info');\n\n          // Build the redirect URL with all necessary parameters - using manual construction for better Safari compatibility\n          const sanitizedBusinessName = encodeURIComponent(merchantInfo.businessName || '');\n          const finalRedirectUrl = `joylabs://square-callback?access_token=${encodeURIComponent(tokenResponse.access_token)}&refresh_token=${encodeURIComponent(tokenResponse.refresh_token)}&merchant_id=${encodeURIComponent(tokenResponse.merchant_id)}&business_name=${sanitizedBusinessName}`;\n\n          // Debug logging for redirect URL\n          console.log('DEBUG - Redirect URL details:', {\n            baseUrl: redirectUrl,\n            finalUrl: finalRedirectUrl,\n            manuallyConstructed: true,\n            params: {\n              access_token: `${tokenResponse.access_token.substring(0, 5)}...${tokenResponse.access_token.substring(tokenResponse.access_token.length - 5)}`,\n              refresh_token: `${tokenResponse.refresh_token.substring(0, 5)}...${tokenResponse.refresh_token.substring(tokenResponse.refresh_token.length - 5)}`,\n              merchant_id: tokenResponse.merchant_id,\n              business_name: merchantInfo.businessName,\n            },\n          });\n\n          console.log('Redirecting to app with tokens:', {\n            redirectUrl: finalRedirectUrl.substring(0, 30) + '...',\n          });\n          return res.redirect(finalRedirectUrl);\n        } catch (error) {\n          console.error('Error in non-PKCE flow:', error);\n          return res.redirect(\n            `${redirectUrl}?error=token_exchange_failed&details=non_pkce_failed&message=${encodeURIComponent(error.message)}`\n          );\n        }\n      }\n\n      try {\n        // Exchange code for tokens\n        const tokenResponse = await squareService.exchangeCodeForToken(code, codeVerifier);\n        console.log('Successfully exchanged code for tokens');\n\n        // Mark state as used\n        const updateParams = {\n          TableName: process.env.STATES_TABLE || 'joylabs-backend-api-v3-production-states',\n          Key: {\n            state: state,\n          },\n          UpdateExpression: 'set used = :used',\n          ExpressionAttributeValues: {\n            ':used': true,\n          },\n        };\n\n        await docClient.send(new UpdateCommand(updateParams));\n        console.log('Marked state as used in DynamoDB');\n\n        // Get merchant info using the access token - try native fetch first for better security\n        let merchantInfo;\n        try {\n          // Use native fetch implementation first (Node.js 22 feature)\n          merchantInfo = await squareService.getMerchantInfoWithFetch(tokenResponse.access_token);\n          console.log('Retrieved merchant info using native fetch API');\n        } catch (fetchError) {\n          // Fall back to SDK implementation if fetch fails\n          console.warn(\n            'Fetch API failed for merchant info, falling back to SDK:',\n            fetchError.message\n          );\n          merchantInfo = await squareService.getMerchantInfo(tokenResponse.access_token);\n          console.log('Retrieved merchant info using Square SDK');\n        }\n\n        console.log('Retrieved merchant info');\n\n        // Build the redirect URL with all necessary parameters - using manual construction for better Safari compatibility\n        const sanitizedBusinessName = encodeURIComponent(merchantInfo.businessName || '');\n        const finalRedirectUrl = `joylabs://square-callback?access_token=${encodeURIComponent(tokenResponse.access_token)}&refresh_token=${encodeURIComponent(tokenResponse.refresh_token)}&merchant_id=${encodeURIComponent(tokenResponse.merchant_id)}&business_name=${sanitizedBusinessName}`;\n\n        // Debug logging for redirect URL\n        console.log('DEBUG - Redirect URL details:', {\n          baseUrl: redirectUrl,\n          finalUrl: finalRedirectUrl,\n          manuallyConstructed: true,\n          params: {\n            access_token: `${tokenResponse.access_token.substring(0, 5)}...${tokenResponse.access_token.substring(tokenResponse.access_token.length - 5)}`,\n            refresh_token: `${tokenResponse.refresh_token.substring(0, 5)}...${tokenResponse.refresh_token.substring(tokenResponse.refresh_token.length - 5)}`,\n            merchant_id: tokenResponse.merchant_id,\n            business_name: merchantInfo.businessName,\n          },\n        });\n\n        console.log('Redirecting to app with tokens:', {\n          redirectUrl: finalRedirectUrl.substring(0, 30) + '...',\n        });\n        return res.redirect(finalRedirectUrl);\n      } catch (error) {\n        console.error('Error exchanging code for token:', error);\n        return res.redirect(\n          `${redirectUrl}?error=token_exchange_failed&message=${encodeURIComponent(error.message)}`\n        );\n      }\n    } catch (dbError) {\n      console.error('Error retrieving state from DynamoDB:', dbError);\n      return res.redirect('joylabs://square-callback?error=database_error');\n    }\n  } catch (error) {\n    console.error('Error in Square callback:', error);\n    return res.redirect('joylabs://square-callback?error=server_error');\n  }\n});\n\n// Square OAuth route for mobile\nrouter.get('/square/mobile-init', async (req, res) => {\n  console.log('Mobile OAuth initialized with Expo AuthSession');\n\n  try {\n    // Get Square credentials\n    const credentials = await squareService.getSquareCredentials();\n\n    if (!credentials || !credentials.applicationId) {\n      throw new Error('Failed to get Square application ID');\n    }\n\n    console.log('Using Square Application ID:', credentials.applicationId);\n\n    // Generate a state parameter\n    const state = generateStateParam();\n    console.log(`Mobile OAuth initialized with state: ${state}`);\n\n    // Store state in DynamoDB\n    const command = new PutCommand({\n      TableName: process.env.DYNAMODB_STATES_TABLE,\n      Item: {\n        state,\n        createdAt: Date.now(),\n        ttl: Math.floor(Date.now() / 1000) + 5 * 60, // 5 minutes TTL\n      },\n    });\n\n    await docClient.send(command);\n\n    // Generate the authorization URL for Square\n    const baseUrl = 'https://connect.squareup.com/oauth2/authorize';\n    const params = new URLSearchParams({\n      client_id: credentials.applicationId,\n      response_type: 'code',\n      scope:\n        'MERCHANT_PROFILE_READ ITEMS_READ ITEMS_WRITE ORDERS_READ ORDERS_WRITE PAYMENTS_READ PAYMENTS_WRITE CUSTOMERS_READ CUSTOMERS_WRITE INVENTORY_READ INVENTORY_WRITE',\n      state: state,\n      redirect_uri:\n        process.env.SQUARE_REDIRECT_URL ||\n        'https://gki8kva7e3.execute-api.us-west-1.amazonaws.com/production/api/auth/square/callback',\n    });\n\n    const authUrl = `${baseUrl}?${params.toString()}`;\n    console.log('Generated auth URL for mobile client');\n\n    // Return the authorization URL and state\n    res.json({\n      url: authUrl,\n      state,\n    });\n  } catch (error) {\n    console.error('Error initiating mobile OAuth:', error);\n    res.status(500).json({\n      error: 'Failed to initiate OAuth process',\n      details: error.message,\n    });\n  }\n});\n\n// Test and diagnostic routes (no longer restricted to non-production)\n// Add a complete test route that allows testing the Square OAuth flow\nrouter.get('/square/test', (req, res) => {\n  // Display a helpful debugging page\n  res.send(`\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>Square OAuth Test Tool</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <style>\n          body { \n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 900px;\n            margin: 0 auto;\n            padding: 20px;\n          }\n          .card {\n            background: #fff;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            padding: 20px;\n            margin: 20px 0;\n          }\n          h1 { color: #4CAF50; }\n          h2 { margin-top: 30px; }\n          pre {\n            background: #f5f5f5;\n            padding: 15px;\n            border-radius: 4px;\n            overflow-x: auto;\n            white-space: pre-wrap;\n          }\n          table {\n            width: 100%;\n            border-collapse: collapse;\n          }\n          table, th, td {\n            border: 1px solid #ddd;\n          }\n          th, td {\n            padding: 10px;\n            text-align: left;\n          }\n          th {\n            background-color: #f2f2f2;\n          }\n          .button {\n            background: #4CAF50;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 4px;\n            cursor: pointer;\n            text-decoration: none;\n            display: inline-block;\n            margin: 5px 0;\n          }\n          .warning { color: #ff9800; }\n          .error { color: #f44336; }\n          .success { color: #4CAF50; }\n          #verifyResult {\n            display: none;\n            margin-top: 15px;\n          }\n          .token-input {\n            width: 100%;\n            padding: 8px;\n            margin: 5px 0;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            font-family: monospace;\n          }\n        </style>\n      </head>\n      <body>\n        <h1>Square OAuth Test Tool</h1>\n        \n        <div class=\"card\">\n          <h2>Environment</h2>\n          <table>\n            <tr>\n              <th>Setting</th>\n              <th>Value</th>\n              <th>Status</th>\n            </tr>\n            <tr>\n              <td>SQUARE_ENVIRONMENT</td>\n              <td>${process.env.SQUARE_ENVIRONMENT || 'Not set'}</td>\n              <td>${\n                process.env.SQUARE_ENVIRONMENT === 'production'\n                  ? '<span class=\"warning\">⚠️ Production mode - test codes won\\'t work</span>'\n                  : '<span class=\"success\">✓ Sandbox mode - good for testing</span>'\n              }</td>\n            </tr>\n            <tr>\n              <td>SQUARE_APPLICATION_ID</td>\n              <td>${process.env.SQUARE_APPLICATION_ID ? '✓ Set' : '✗ Not set'}</td>\n              <td>${\n                process.env.SQUARE_APPLICATION_ID\n                  ? '<span class=\"success\">✓</span>'\n                  : '<span class=\"error\">✗ Missing application ID</span>'\n              }</td>\n            </tr>\n            <tr>\n              <td>SQUARE_APPLICATION_SECRET</td>\n              <td>${process.env.SQUARE_APPLICATION_SECRET ? '✓ Set (hidden)' : '✗ Not set'}</td>\n              <td>${\n                process.env.SQUARE_APPLICATION_SECRET\n                  ? '<span class=\"success\">✓</span>'\n                  : '<span class=\"error\">✗ Missing application secret</span>'\n              }</td>\n            </tr>\n            <tr>\n              <td>SQUARE_REDIRECT_URL</td>\n              <td>${process.env.SQUARE_REDIRECT_URL || 'Not set'}</td>\n              <td>${\n                process.env.SQUARE_REDIRECT_URL\n                  ? process.env.SQUARE_REDIRECT_URL.includes(req.headers.host)\n                    ? '<span class=\"success\">✓ Matches current host</span>'\n                    : `<span class=\"warning\">⚠️ Does not match current host (${req.headers.host})</span>`\n                  : '<span class=\"error\">✗ Missing redirect URL</span>'\n              }</td>\n            </tr>\n            <tr>\n              <td>Current Host</td>\n              <td>${req.headers.host}</td>\n              <td></td>\n            </tr>\n            <tr>\n              <td>Current Protocol</td>\n              <td>${req.protocol}</td>\n              <td>${\n                req.protocol === 'https'\n                  ? '<span class=\"success\">✓ Secure</span>'\n                  : '<span class=\"warning\">⚠️ Not secure - Square may require HTTPS</span>'\n              }</td>\n            </tr>\n          </table>\n        </div>\n        \n        <div class=\"card\">\n          <h2>Test OAuth Flow</h2>\n          <p>Use these links to test different parts of the OAuth flow:</p>\n          \n          <div>\n            <a href=\"/api/auth/square?state=test-state-parameter\" class=\"button\">Start Regular OAuth Flow</a>\n            <a href=\"/api/auth/square/mobile-init\" class=\"button\">Start Mobile OAuth Flow (PKCE)</a>\n          </div>\n          \n          <h3>Test Callback</h3>\n          <p>This simulates a callback with test codes:</p>\n          <div>\n            <a href=\"/api/auth/square/set-test-cookie\" class=\"button\">1. Set Test Cookies</a>\n            <a href=\"/api/auth/square/callback?code=test_authorization_code&state=test-state-parameter\" class=\"button\">2. Test Callback</a>\n          </div>\n        </div>\n\n        <div class=\"card\">\n          <h2>Test Connection Verification</h2>\n          <p>After successful authentication, you can verify the Square connection using your JWT token:</p>\n          \n          <input type=\"text\" id=\"jwtToken\" class=\"token-input\" placeholder=\"Paste your JWT token here\" />\n          <button onclick=\"verifyConnection()\" class=\"button\">Verify Connection</button>\n          \n          <div id=\"verifyResult\">\n            <h3>Verification Result:</h3>\n            <pre id=\"verifyOutput\"></pre>\n          </div>\n\n          <script>\n            async function verifyConnection() {\n              const token = document.getElementById('jwtToken').value;\n              const resultDiv = document.getElementById('verifyResult');\n              const output = document.getElementById('verifyOutput');\n              \n              resultDiv.style.display = 'block';\n              output.innerHTML = 'Testing connection...';\n              \n              try {\n                const response = await fetch('/api/auth/square/verify', {\n                  headers: {\n                    'Authorization': 'Bearer ' + token\n                  }\n                });\n                \n                const data = await response.json();\n                output.innerHTML = JSON.stringify(data, null, 2);\n                \n                if (response.ok) {\n                  output.className = 'success';\n                } else {\n                  output.className = 'error';\n                }\n              } catch (error) {\n                output.innerHTML = 'Error: ' + error.message;\n                output.className = 'error';\n              }\n            }\n          </script>\n        </div>\n      </body>\n    </html>\n  `);\n});\n\n// Test callback route to simulate a successful OAuth flow\nrouter.get('/square/test-callback', async (req, res) => {\n  try {\n    console.log('Test callback invoked');\n\n    // Show Square environment in the response\n    const environment = process.env.SQUARE_ENVIRONMENT || 'sandbox';\n    const clientId = process.env.SQUARE_APPLICATION_ID || 'unknown';\n\n    // Set test cookie for state validation\n    const testState = 'test-state-parameter';\n    res.cookie('square_oauth_state', testState, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'lax',\n      maxAge: 3600000, // 1 hour\n    });\n\n    // Setup session state if we're using sessions\n    if (req.session) {\n      if (!req.session.oauthParams) {\n        req.session.oauthParams = {};\n      }\n\n      req.session.oauthParams[testState] = {\n        codeVerifier: 'test-code-verifier',\n        createdAt: new Date().toISOString(),\n      };\n    }\n\n    // Create a test response page that shows diagnostic information\n    // and also provides a button to simulate the callback\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>OAuth Callback Simulator</title>\n        <style>\n          body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }\n          pre { background: #f5f5f5; padding: 10px; border-radius: 5px; overflow-x: auto; }\n          .debug { background: #fff8dc; padding: 10px; border-radius: 5px; margin: 10px 0; }\n          button { padding: 10px; background: #4CAF50; color: white; border: none; cursor: pointer; }\n          button:hover { background: #45a049; }\n          .card { border: 1px solid #ddd; border-radius: 5px; padding: 15px; margin-bottom: 20px; }\n          .environment { display: inline-block; padding: 5px 10px; border-radius: 3px; margin-left: 10px; }\n          .sandbox { background: #ffd700; color: #333; }\n          .production { background: #32cd32; color: white; }\n          .warning { color: #f44336; }\n          .success { color: #4CAF50; }\n        </style>\n      </head>\n      <body>\n        <h1>Square OAuth Test Tool \n          <span class=\"environment ${environment === 'production' ? 'production' : 'sandbox'}\">\n            ${environment.toUpperCase()}\n          </span>\n        </h1>\n        \n        <div class=\"card\">\n          <h2>Current Configuration</h2>\n          <p><strong>Environment:</strong> ${environment}</p>\n          <p><strong>Application ID:</strong> ${clientId.substring(0, 6)}****${clientId.substring(clientId.length - 4)}</p>\n          <p><strong>API Base URL:</strong> ${process.env.API_BASE_URL || 'Not set'}</p>\n          <p><strong class=\"success\">✓ Test state cookie set: </strong> ${testState}</p>\n        </div>\n        \n        <div class=\"card\">\n          <h2>Important Notes</h2>\n          <p class=\"warning\"><strong>Important:</strong> This tool has set a required cookie in your browser called <code>square_oauth_state</code> with the value <code>${testState}</code>.</p>\n          <p>This cookie is necessary for the callback to work correctly with state validation.</p>\n        </div>\n        \n        <div class=\"card\">\n          <h2>Simulate OAuth Callback</h2>\n          <p>Click the button below to simulate a successful Square OAuth callback:</p>\n          <button onclick=\"simulateCallback()\">Simulate Successful Callback</button>\n        </div>\n        \n        <div class=\"card debug\">\n          <h2>Debug Information</h2>\n          <pre id=\"debug\">Waiting for callback simulation...</pre>\n        </div>\n        \n        <script>\n          function simulateCallback() {\n            const debugElement = document.getElementById('debug');\n            debugElement.innerText = 'Processing callback...';\n            \n            // Directly load the page rather than using fetch which doesn't send cookies\n            window.location.href = '/api/auth/square/callback?code=test_authorization_code&state=test-state-parameter';\n          }\n        </script>\n      </body>\n      </html>\n    `;\n\n    res.send(html);\n  } catch (error) {\n    console.error('Test callback error:', error);\n    res.status(500).send('Error in test callback: ' + error.message);\n  }\n});\n\n// Add a test route that sets up a cookie for easier testing\nrouter.get('/square/set-test-cookie', (req, res) => {\n  console.log('Setting test cookies for OAuth testing');\n\n  // Set test cookies\n  res.cookie('square_oauth_state', 'test-state-parameter', {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === 'production',\n    sameSite: 'lax',\n    maxAge: 3600000, // 1 hour\n  });\n\n  res.cookie('square_oauth_code_verifier', 'test_code_verifier', {\n    httpOnly: true,\n    secure: process.env.NODE_ENV === 'production',\n    sameSite: 'lax',\n    maxAge: 3600000, // 1 hour\n  });\n\n  res.send(`\n    <html>\n      <head>\n        <title>Test Cookies Set</title>\n        <style>\n          body {\n            font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif;\n            line-height: 1.5;\n            margin: 40px auto;\n            max-width: 650px;\n            padding: 0 20px;\n          }\n          .card {\n            background: #fff;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            padding: 20px;\n            margin: 20px 0;\n          }\n          h1 { color: #4CAF50; }\n          .button {\n            background: #4CAF50;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 4px;\n            cursor: pointer;\n            text-decoration: none;\n            display: inline-block;\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"card\">\n          <h1>Test Cookies Set</h1>\n          <p>The following cookies have been set:</p>\n          <ul>\n            <li><strong>square_oauth_state</strong>: test-state-parameter</li>\n            <li><strong>square_oauth_code_verifier</strong>: test_code_verifier</li>\n          </ul>\n          <p>You can now proceed to test the callback:</p>\n          <p><a href=\"/api/auth/square/callback?code=test_authorization_code&state=test-state-parameter\" class=\"button\">Test Callback</a></p>\n        </div>\n      </body>\n    </html>\n  `);\n});\n\n// Token refresh endpoint\nrouter.post('/refresh', authMiddleware.authenticate, (req, res) => {\n  // Implementation of refresh token endpoint\n});\n\n// Authenticated routes\nrouter.post('/logout', authMiddleware.authenticate, (req, res) => {\n  // Implementation of logout endpoint\n});\nrouter.post('/logout/:userId', authMiddleware.authenticate, (req, res) => {\n  // Implementation of logout endpoint\n});\n\n// Add success route handler\nrouter.get('/success', (req, res) => {\n  // Implementation of success route handler\n});\n\n// Add verify endpoint\nrouter.get('/square/verify', authMiddleware.authenticate, async (req, res) => {\n  // Implementation of verify endpoint\n});\n\n// Add a specific endpoint for token exchange that expects code_verifier in the body\nrouter.post('/token-exchange', async (req, res) => {\n  // Implementation of token exchange endpoint\n});\n\n// Add a new endpoint to register tokens obtained directly from Square by the frontend\nrouter.post('/register-token', async (req, res) => {\n  // Implementation of register token endpoint\n});\n\n// Register state endpoint for OAuth flow\nrouter.post('/register-state', async (req, res) => {\n  console.log('Received state registration request:', {\n    body: req.body,\n    headers: req.headers,\n  });\n\n  try {\n    const { state, redirectUrl, code_verifier, code_challenge } = req.body;\n\n    if (!state) {\n      console.error('Missing state parameter in request body');\n      return res.status(400).json({ error: 'Missing state parameter' });\n    }\n\n    // Store state in DynamoDB with TTL\n    const ttl = Math.floor(Date.now() / 1000) + 10 * 60; // 10 minutes\n    const params = {\n      TableName: process.env.STATES_TABLE || 'joylabs-backend-api-v3-production-states',\n      Item: {\n        state: state,\n        timestamp: Date.now(),\n        used: false,\n        ttl: ttl,\n        redirectUrl: redirectUrl || 'joylabs://square-callback',\n      },\n    };\n\n    // Add code_verifier if provided\n    if (code_verifier) {\n      params.Item.code_verifier = code_verifier;\n      console.log('Code verifier included in state registration');\n    } else if (code_challenge) {\n      // If we have a code challenge but no verifier, we're using separate PKCE steps\n      params.Item.code_challenge = code_challenge;\n      console.log('Code challenge included in state registration');\n    } else {\n      console.warn('No code_verifier or code_challenge provided for PKCE flow');\n    }\n\n    console.log('Storing state in DynamoDB:', {\n      tableName: params.TableName,\n      state: state.substring(0, 5) + '...' + state.substring(state.length - 5),\n      ttl: new Date(ttl * 1000).toISOString(),\n      hasCodeVerifier: !!code_verifier,\n      hasCodeChallenge: !!code_challenge,\n    });\n\n    const result = await docClient.send(new PutCommand(params));\n\n    console.log('DynamoDB PutCommand result:', {\n      statusCode: result.$metadata.httpStatusCode,\n      requestId: result.$metadata.requestId,\n    });\n\n    console.log(`State ${state} registered successfully`);\n    res.status(200).json({ success: true });\n  } catch (error) {\n    console.error('Error registering state:', error);\n    res.status(500).json({\n      error: 'Failed to register state',\n      details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n    });\n  }\n});\n\n// Generate Square OAuth URL endpoint\nrouter.get('/connect/url', async (req, res) => {\n  console.log('Received OAuth URL request:', {\n    query: req.query,\n    headers: req.headers,\n  });\n\n  try {\n    const { state, code_challenge, code_verifier, redirect_uri } = req.query;\n\n    // Validate required parameters\n    if (!state || !code_challenge || !redirect_uri) {\n      console.error('Missing required parameters:', { state, code_challenge, redirect_uri });\n      return res.status(400).json({\n        error: 'Missing required parameters',\n        details: 'state, code_challenge, and redirect_uri are required',\n      });\n    }\n\n    // Validate redirect_uri format for deep linking\n    if (!redirect_uri.startsWith('joylabs://')) {\n      console.error('Invalid redirect_uri format:', redirect_uri);\n      return res.status(400).json({\n        error: 'Invalid redirect_uri',\n        details: 'redirect_uri must start with joylabs://',\n      });\n    }\n\n    // Store state in DynamoDB with TTL\n    const ttl = Math.floor(Date.now() / 1000) + 10 * 60; // 10 minutes\n    const params = {\n      TableName: process.env.STATES_TABLE || 'joylabs-backend-api-v3-production-states',\n      Item: {\n        state: state,\n        timestamp: Date.now(),\n        used: false,\n        ttl: ttl,\n        code_challenge: code_challenge,\n        redirect_uri: redirect_uri,\n      },\n    };\n\n    // Store code_verifier if provided (for PKCE)\n    if (code_verifier) {\n      params.Item.code_verifier = code_verifier;\n      console.log('Added code_verifier to state storage');\n    }\n\n    console.log('Storing state in DynamoDB:', {\n      tableName: params.TableName,\n      state: state.substring(0, 5) + '...' + state.substring(state.length - 5),\n      ttl: new Date(ttl * 1000).toISOString(),\n      hasCodeChallenge: true,\n      hasCodeVerifier: !!code_verifier,\n    });\n\n    const result = await docClient.send(new PutCommand(params));\n\n    console.log('DynamoDB PutCommand result:', {\n      statusCode: result.$metadata.httpStatusCode,\n      requestId: result.$metadata.requestId,\n    });\n\n    const url = await squareService.generateOAuthUrl(state, code_challenge, redirect_uri);\n    console.log('Generated Square OAuth URL');\n    res.json({ url });\n  } catch (error) {\n    console.error('Error generating OAuth URL:', error);\n    res.status(500).json({\n      error: 'Failed to generate OAuth URL',\n      details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n    });\n  }\n});\n\n/**\n * Generate PKCE code verifier and challenge for OAuth flow\n * Uses secure WebCrypto API with fallback to legacy implementation\n */\nrouter.post('/generate-pkce', async (req, res) => {\n  try {\n    // Generate PKCE code verifier\n    const codeVerifier = await squareService.generateCodeVerifier();\n\n    // Generate code challenge from verifier\n    const codeChallenge = await squareService.generateCodeChallenge(codeVerifier);\n\n    // Return both to the client\n    res.json({\n      code_verifier: codeVerifier,\n      code_challenge: codeChallenge,\n    });\n  } catch (error) {\n    console.error('Error generating PKCE codes:', error);\n    res.status(500).json({\n      error: 'Failed to generate PKCE codes',\n      details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n    });\n  }\n});\n\n// Export the router\nmodule.exports = router;\n","/**\n * Square Service\n * Provides methods to interact with Square API\n */\nconst axios = require('axios');\nconst crypto = require('crypto');\n// Import Square client for v42+\nconst { SquareClient } = require('square');\nconst { SecretsManagerClient, GetSecretValueCommand } = require('@aws-sdk/client-secrets-manager');\nconst squareApiHelpers = require('../utils/squareApiHelpers');\nconst webCrypto = require('../utils/webCrypto');\nconst fetchHelpers = require('../utils/fetchHelpers');\nconst { createErrorWithCause } = require('../utils/errorHandling');\n\n// Square API versions - centralized for easy updates\nconst SQUARE_API_VERSION = 'v2'; // URL version (e.g., /v2/locations)\nconst SQUARE_API_HEADER_VERSION = '2025-03-19'; // API version header\n\n// Initialize AWS clients\nconst secretsManager = new SecretsManagerClient({ region: 'us-west-1' });\n\n// Cache for Square credentials and clients\nlet squareCredentials = null;\nconst squareClientCache = new Map();\nconst CACHE_TTL = 60 * 60 * 1000; // 1 hour in milliseconds\n\n// Response cache with TTL for frequently accessed data\nconst responseCache = new Map();\n// Cache TTLs in milliseconds\nconst CACHE_TTL_CONFIG = {\n  merchantInfo: 5 * 60 * 1000, // 5 minutes for merchant info\n  catalogCategories: 30 * 60 * 1000, // 30 minutes for catalog categories\n  catalogItems: 5 * 60 * 1000, // 5 minutes for catalog items\n  locations: 30 * 60 * 1000, // 30 minutes for locations\n  other: 60 * 1000, // 1 minute default\n};\n\n// Cache AWS clients for connection reuse\nlet secretsClient = null;\nconst getSecretsClient = () => {\n  if (!secretsClient) {\n    secretsClient = new SecretsManagerClient({\n      region: 'us-west-1',\n    });\n  }\n  return secretsClient;\n};\n\n/**\n * Get cached response or null if not in cache or expired\n * @param {string} cacheKey - The cache key\n * @param {string} cacheType - Type of data for TTL selection\n * @returns {Object|null} The cached response or null\n */\nfunction getCachedResponse(cacheKey, cacheType = 'other') {\n  if (responseCache.has(cacheKey)) {\n    const cachedItem = responseCache.get(cacheKey);\n    const now = Date.now();\n\n    // Check if cache entry is still valid\n    if (now < cachedItem.expiry) {\n      console.log(`Using cached ${cacheType} data`);\n      return cachedItem.data;\n    } else {\n      // Remove expired entry\n      responseCache.delete(cacheKey);\n    }\n  }\n  return null;\n}\n\n/**\n * Store response in cache with appropriate TTL\n * @param {string} cacheKey - The cache key\n * @param {Object} data - The data to cache\n * @param {string} cacheType - Type of data for TTL selection\n */\nfunction cacheResponse(cacheKey, data, cacheType = 'other') {\n  const ttl = CACHE_TTL_CONFIG[cacheType] || CACHE_TTL_CONFIG.other;\n  responseCache.set(cacheKey, {\n    data,\n    expiry: Date.now() + ttl,\n  });\n}\n\n/**\n * Retrieve Square credentials\n * @returns {Promise<Object>} Square credentials\n */\nasync function getSquareCredentials() {\n  try {\n    console.log('Retrieving Square credentials from AWS Secrets Manager');\n    console.log('SQUARE_CREDENTIALS_SECRET:', process.env.SQUARE_CREDENTIALS_SECRET);\n    console.log('AWS_REGION:', process.env.AWS_REGION);\n\n    const client = getSecretsClient();\n    const command = new GetSecretValueCommand({\n      SecretId: process.env.SQUARE_CREDENTIALS_SECRET || 'square-credentials-production',\n    });\n\n    const response = await client.send(command);\n    const credentials = JSON.parse(response.SecretString);\n\n    if (!credentials.applicationId || !credentials.applicationSecret) {\n      throw new Error('Invalid Square credentials format');\n    }\n\n    return {\n      applicationId: credentials.applicationId,\n      applicationSecret: credentials.applicationSecret,\n      webhookSignatureKey: credentials.webhookSignatureKey,\n    };\n  } catch (error) {\n    console.error('Error getting Square credentials:', error);\n    throw new Error('Failed to get Square credentials');\n  }\n}\n\n/**\n * Get a configured Square API client with connection reuse\n *\n * This function creates a client using Square SDK v42+\n *\n * @param {string} accessToken - Square access token\n * @returns {Object} Square client instance\n */\nconst getSquareClient = (accessToken = null) => {\n  const cacheKey = `${accessToken || 'default'}-${process.env.SQUARE_ENVIRONMENT}`;\n\n  if (squareClientCache.has(cacheKey)) {\n    console.log('Reusing existing Square client from cache');\n    return squareClientCache.get(cacheKey);\n  }\n\n  console.log('Creating new Square v42 client');\n\n  // Create SquareClient with proper configuration\n  const client = new SquareClient({\n    token: accessToken || process.env.SQUARE_ACCESS_TOKEN,\n    environment: process.env.SQUARE_ENVIRONMENT || 'production',\n    userAgentDetail: 'JoyLabs Backend API',\n    timeout: 30000, // 30 seconds timeout\n  });\n\n  squareClientCache.set(cacheKey, client);\n  return client;\n};\n\n/**\n * Generate a random string for state parameter or code verifier\n */\nfunction generateRandomString(length = 32) {\n  let result = '';\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n/**\n * Generate a state parameter for OAuth\n */\nfunction generateStateParam() {\n  return generateRandomString(48);\n}\n\n/**\n * Generate a code verifier for PKCE\n * Must be between 43-128 chars, URL safe base64\n */\nasync function generateCodeVerifier() {\n  try {\n    // Try to use the modern WebCrypto API implementation\n    return await webCrypto.generateCodeVerifier();\n  } catch (error) {\n    // Fall back to legacy implementation if WebCrypto fails\n    console.warn('WebCrypto API failed, falling back to legacy implementation:', error.message);\n    return webCrypto.generateCodeVerifierLegacy();\n  }\n}\n\n/**\n * Generate a code challenge from a code verifier\n * Must be base64URL(SHA256(code_verifier))\n */\nasync function generateCodeChallenge(codeVerifier) {\n  try {\n    // Try to use the modern WebCrypto API implementation\n    return await webCrypto.generateCodeChallenge(codeVerifier);\n  } catch (error) {\n    // Fall back to legacy implementation if WebCrypto fails\n    console.warn('WebCrypto API failed, falling back to legacy implementation:', error.message);\n    return webCrypto.generateCodeChallengeLegacy(codeVerifier);\n  }\n}\n\n/**\n * Base64URL encode a Buffer\n * Converts to base64 then makes it URL safe\n */\nfunction base64URLEncode(buffer) {\n  return webCrypto.base64URLEncodeLegacy(buffer);\n}\n\n/**\n * Get the OAuth redirect URL\n */\nconst getRedirectUrl = () => {\n  const redirectUrl =\n    process.env.SQUARE_REDIRECT_URL ||\n    'https://gki8kva7e3.execute-api.us-west-1.amazonaws.com/production/api/auth/square/callback';\n  console.log(`Using redirect URL: ${redirectUrl}`);\n  return redirectUrl;\n};\n\n/**\n * Generate OAuth URL for Square authorization\n * @param {string} state - State parameter for CSRF protection\n * @param {string} code_challenge - PKCE code challenge\n * @param {string} redirect_uri - The redirect URI for OAuth callback\n * @returns {Promise<string>} The OAuth URL\n */\nasync function generateOAuthUrl(state, code_challenge, redirect_uri) {\n  try {\n    const credentials = await getSquareCredentials();\n    const baseUrl = 'https://connect.squareup.com/oauth2/authorize';\n\n    const params = new URLSearchParams({\n      client_id: credentials.applicationId,\n      response_type: 'code',\n      scope: 'ITEMS_READ ITEMS_WRITE MERCHANT_PROFILE_READ',\n      state,\n      code_challenge,\n      code_challenge_method: 'S256',\n      redirect_uri: getRedirectUrl(),\n    });\n\n    const url = `${baseUrl}?${params.toString()}`;\n    console.log('Generated OAuth URL (redacted):', url.replace(code_challenge, '[REDACTED]'));\n\n    return url;\n  } catch (error) {\n    console.error('Error generating OAuth URL:', error);\n    throw error;\n  }\n}\n\n/**\n * Exchange authorization code for access token\n * @param {string} code - The authorization code from Square\n * @param {string} code_verifier - The PKCE code verifier used in the initial request\n * @returns {Promise<Object>} The token response\n */\nasync function exchangeCodeForToken(code, code_verifier) {\n  try {\n    const credentials = await getSquareCredentials();\n    const redirectUrl = getRedirectUrl();\n\n    console.log('Exchanging code for token with redirect URL:', redirectUrl);\n    console.log('PKCE status:', {\n      hasCodeVerifier: !!code_verifier,\n      codeVerifierLength: code_verifier ? code_verifier.length : 0,\n      codeVerifierPreview: code_verifier\n        ? `${code_verifier.substring(0, 5)}...${code_verifier.substring(code_verifier.length - 5)}`\n        : 'none',\n    });\n\n    // Prepare request body with or without code_verifier\n    const requestBody = {\n      client_id: credentials.applicationId,\n      code,\n      grant_type: 'authorization_code',\n      redirect_uri: redirectUrl,\n    };\n\n    // For PKCE flow (mobile apps), don't include client_secret\n    if (code_verifier) {\n      requestBody.code_verifier = code_verifier;\n      console.log('Added code_verifier to token request - using PKCE flow without client_secret');\n    } else {\n      // For standard OAuth flow (server-to-server), include client_secret\n      requestBody.client_secret = credentials.applicationSecret;\n      console.log('Using standard OAuth flow with client_secret');\n    }\n\n    console.log('Sending token request to Square API');\n\n    // Define a retry configuration for token exchange\n    // Token exchange is critical, so use more aggressive retry\n    const tokenRetryConfig = {\n      numberOfRetries: 3,\n      backoffFactor: 3, // More aggressive backoff\n      statusCodesToRetry: [429, 500, 502, 503, 504],\n      endpoint: 'oauth-api', // Use OAuth endpoint for rate limiting\n      useRateLimiter: true,\n      cost: 2, // Token exchange is a more expensive operation\n    };\n\n    // Create a function for the token exchange that we'll retry if needed\n    const exchangeToken = async () => {\n      try {\n        const response = await axios.post('https://connect.squareup.com/oauth2/token', requestBody);\n        return response.data;\n      } catch (error) {\n        // Enhance error with specific OAuth error details\n        const enhancedError = new Error(\n          error.response?.data?.message || error.response?.data?.error_description || error.message\n        );\n\n        // Add OAuth specific error info\n        enhancedError.statusCode = error.response?.status || 500;\n        enhancedError.code = error.response?.data?.error || 'TOKEN_EXCHANGE_ERROR';\n\n        // Add full error response for debugging\n        enhancedError.details = [\n          {\n            error: error.response?.data?.error,\n            error_description: error.response?.data?.error_description,\n          },\n        ];\n\n        throw enhancedError;\n      }\n    };\n\n    // Execute with retry\n    const tokenData = await squareApiHelpers.executeWithRetry(\n      exchangeToken,\n      null, // No client needed as we're using axios directly\n      tokenRetryConfig\n    );\n\n    console.log('Successfully received token response');\n\n    return {\n      access_token: tokenData.access_token,\n      refresh_token: tokenData.refresh_token,\n      expires_at: tokenData.expires_at,\n      merchant_id: tokenData.merchant_id,\n    };\n  } catch (error) {\n    console.error('Error exchanging code for token:', error.response?.data || error.message);\n\n    // Create an informative error with better details for debugging\n    const tokenError = new Error(\n      error.response?.data?.message || error.response?.data?.error_description || error.message\n    );\n    tokenError.code = error.response?.data?.error || 'TOKEN_EXCHANGE_ERROR';\n    tokenError.statusCode = error.response?.status || 500;\n\n    throw tokenError;\n  }\n}\n\n/**\n * Get merchant info using the v42 SDK\n */\nasync function getMerchantInfo(accessToken) {\n  try {\n    // Check cache first\n    const cacheKey = `merchant-info-${accessToken}`;\n    const cachedData = getCachedResponse(cacheKey, 'merchantInfo');\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const client = getSquareClient(accessToken);\n\n    console.log('Getting merchant info with Square v42 SDK');\n\n    // In v42 SDK, we need to use the correct syntax for merchant retrieval\n    // There are multiple ways to approach this based on the SDK version\n    let response;\n\n    // Use our executeWithRetry function with custom retry config for auth-related operations\n    // Authentication should have a higher retry count as it's critical for app function\n    const authRetryConfig = {\n      numberOfRetries: 4, // Try more times for auth requests\n      statusCodesToRetry: [429, 500, 502, 503, 504], // Add gateway errors\n      endpoint: 'oauth-api', // Use the OAuth endpoint bucket for rate limiting\n      useRateLimiter: true,\n    };\n\n    try {\n      // Try first approach for v42 (Square API is sometimes inconsistent with naming)\n      console.log('Attempting to retrieve merchant info with retrieveLocation method');\n\n      // Use square API helpers for better retry logic\n      response = await squareApiHelpers.executeWithRetry(\n        async client => client.locations.retrieveLocation('me'),\n        client,\n        authRetryConfig\n      );\n\n      // Restructure the response to match expected format\n      // Since retrieveLocation returns location data instead of merchant data directly\n      if (response && response.result && response.result.location) {\n        response = {\n          result: {\n            merchant: {\n              id: response.result.location.merchantId,\n              businessName: response.result.location.name,\n              country: response.result.location.country,\n              languageCode: response.result.location.languageCode,\n              currency: response.result.location.currency,\n              status: 'ACTIVE', // Location being returned means the merchant is active\n            },\n          },\n        };\n      }\n    } catch (error) {\n      // If first approach fails, try an alternative\n      if (\n        error.message.includes('is not a function') ||\n        error.message.includes('retrieveLocation')\n      ) {\n        console.log('Falling back to alternative method for retrieving merchant');\n\n        // Try using direct HTTP request to the Square API\n        const axios = require('axios');\n\n        // Define a function to make the direct API call\n        const directApiCall = async () => {\n          const merchantResponse = await axios({\n            method: 'get',\n            url: 'https://connect.squareup.com/v2/merchants/me',\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n              'Content-Type': 'application/json',\n              'Square-Version': '2023-12-13',\n            },\n          });\n\n          return {\n            result: {\n              merchant: merchantResponse.data.merchant,\n            },\n          };\n        };\n\n        // Use our retry logic with the axios call\n        response = await squareApiHelpers.executeWithRetry(\n          directApiCall,\n          null, // No client needed for direct axios call\n          authRetryConfig\n        );\n\n        console.log('Successfully retrieved merchant info via direct API call');\n      } else {\n        // If it's not a \"function not found\" error, rethrow\n        throw error;\n      }\n    }\n\n    console.log('Successfully retrieved merchant info');\n\n    // Format merchant information\n    const merchantInfo = {\n      id: response.result.merchant.id,\n      businessName:\n        response.result.merchant.businessName ||\n        response.result.merchant.business_name ||\n        response.result.merchant.businessEmail ||\n        response.result.merchant.business_email ||\n        'Unknown',\n      country: response.result.merchant.country,\n      language: response.result.merchant.languageCode || response.result.merchant.language_code,\n      currency: response.result.merchant.currency,\n      status: response.result.merchant.status,\n    };\n\n    // Cache the result\n    cacheResponse(cacheKey, merchantInfo, 'merchantInfo');\n\n    return merchantInfo;\n  } catch (error) {\n    // Enhance error with better details for authentication failures\n    if (error.statusCode === 401 || error.message.includes('Unauthorized')) {\n      error.code = 'AUTHENTICATION_ERROR';\n      error.message = 'Invalid or expired access token. Please reauthenticate with Square.';\n    }\n\n    console.error('Error getting merchant info:', error);\n    throw error;\n  }\n}\n\n/**\n * Verify webhook signature from Square to ensure authenticity\n * @param {string} signature - The signature from Square-Signature header\n * @param {string} requestBody - The raw request body as a string\n * @returns {Promise<boolean>} - True if the signature is valid\n */\nasync function verifyWebhookSignature(signature, requestBody) {\n  try {\n    console.log('Verifying webhook signature');\n\n    // Get webhook signature key from cached helper\n    const signatureKey = await squareApiHelpers.getWebhookSignatureKey(getSquareCredentials);\n\n    if (!signatureKey) {\n      console.error('No webhook signature key found in credentials');\n      return false;\n    }\n\n    if (!signature) {\n      console.error('No signature provided');\n      return false;\n    }\n\n    if (!requestBody) {\n      console.error('No request body provided');\n      return false;\n    }\n\n    console.log('Request body length for verification:', requestBody.length);\n\n    // Create HMAC using the signature key\n    const hmac = crypto.createHmac('sha256', signatureKey);\n    hmac.update(requestBody);\n\n    // Generate calculated signature\n    const calculatedSignature = hmac.digest('base64');\n\n    // Log signature details (without revealing the actual signatures)\n    console.log('Signature verification:', {\n      providedSignatureLength: signature.length,\n      calculatedSignatureLength: calculatedSignature.length,\n      match: signature === calculatedSignature,\n      providedSignatureStart: signature.substring(0, 5) + '...',\n      calculatedSignatureStart: calculatedSignature.substring(0, 5) + '...',\n    });\n\n    // Compare signatures using a constant-time comparison to prevent timing attacks\n    return timingSafeEqual(signature, calculatedSignature);\n  } catch (error) {\n    // Log the error with more details\n    squareApiHelpers.logApiError(\n      {\n        message: 'Error verifying webhook signature: ' + error.message,\n        code: 'WEBHOOK_VERIFICATION_ERROR',\n        statusCode: 400,\n        details: [{ detail: error.stack }],\n      },\n      0\n    );\n\n    return false;\n  }\n}\n\n/**\n * Perform a timing-safe comparison of two strings\n * This prevents timing attacks when comparing signatures\n *\n * @param {string} a - First string\n * @param {string} b - Second string\n * @returns {boolean} - True if the strings are equal\n */\nfunction timingSafeEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // Convert strings to Buffer objects for use with crypto.timingSafeEqual\n  const bufferA = Buffer.from(a, 'utf8');\n  const bufferB = Buffer.from(b, 'utf8');\n\n  try {\n    // Use the native Node.js crypto.timingSafeEqual for constant-time comparison\n    return crypto.timingSafeEqual(bufferA, bufferB);\n  } catch (error) {\n    console.error('Error in timingSafeEqual:', error);\n    return false;\n  }\n}\n\n/**\n * Execute a Square API request with error handling\n *\n * @param {Function} requestFn - Function that takes a Square client and returns a promise\n * @param {string} accessToken - Square access token\n * @param {string} endpoint - Optional endpoint identifier for rate limiting (e.g., 'catalog-api')\n * @returns {Promise<Object>} - Square API response\n */\nasync function executeSquareRequest(requestFn, accessToken, endpoint = 'square-api') {\n  try {\n    // Get a Square client instance\n    const client = getSquareClient(accessToken);\n    console.log('Executing Square request with v42 SDK and retry logic');\n\n    // Use our enhanced retry logic from squareApiHelpers\n    return await squareApiHelpers.executeWithRetry(requestFn, client, {\n      endpoint: endpoint,\n      useRateLimiter: true,\n    });\n  } catch (error) {\n    // This error has already been logged and enhanced by executeWithRetry\n    // Just rethrow it to be handled by the caller\n    throw error;\n  }\n}\n\n/**\n * Refresh an expired access token using a refresh token\n * This function implements token refresh for Square OAuth with comprehensive error handling.\n * It includes retry logic, rate limiting and differentiated error responses to help client applications.\n *\n * @param {string} refreshToken - The refresh token from a previous token exchange\n * @returns {Promise<Object>} The refreshed token response with access_token, refresh_token, expires_at and merchant_id\n *\n * Error handling:\n * - INVALID_REFRESH_TOKEN: When refresh token has expired or is invalid, client must re-authenticate\n * - TOKEN_REFRESH_ERROR: General token refresh failures\n * - Network errors: Automatically retried up to 4 times with exponential backoff\n */\nasync function refreshAccessToken(refreshToken) {\n  try {\n    const credentials = await getSquareCredentials();\n\n    console.log('Refreshing Square access token');\n\n    // Define a retry configuration for token refresh\n    // Token refresh is critical and we want to be especially careful\n    const tokenRefreshConfig = {\n      numberOfRetries: 4, // More retries for token refresh\n      backoffFactor: 3, // More aggressive backoff\n      statusCodesToRetry: [429, 500, 502, 503, 504],\n      endpoint: 'oauth-api', // Use OAuth endpoint for rate limiting\n      useRateLimiter: true,\n      cost: 2, // Token refresh is a more expensive operation\n    };\n\n    // Create a function for the token refresh that we'll retry if needed\n    const refreshTokenFn = async () => {\n      try {\n        const requestBody = {\n          client_id: credentials.applicationId,\n          client_secret: credentials.applicationSecret,\n          grant_type: 'refresh_token',\n          refresh_token: refreshToken,\n        };\n\n        const response = await axios.post('https://connect.squareup.com/oauth2/token', requestBody);\n\n        return response.data;\n      } catch (error) {\n        // Enhance error with specific OAuth error details\n        const enhancedError = new Error(\n          error.response?.data?.message || error.response?.data?.error_description || error.message\n        );\n\n        // Add OAuth specific error info\n        enhancedError.statusCode = error.response?.status || 500;\n        enhancedError.code = error.response?.data?.error || 'TOKEN_REFRESH_ERROR';\n\n        // Add full error response for debugging\n        enhancedError.details = [\n          {\n            error: error.response?.data?.error,\n            error_description: error.response?.data?.error_description,\n          },\n        ];\n\n        // Special handling for refresh token errors\n        if (\n          error.response?.status === 400 &&\n          (error.response?.data?.error === 'invalid_grant' ||\n            error.response?.data?.error_description?.includes('refresh token'))\n        ) {\n          enhancedError.code = 'INVALID_REFRESH_TOKEN';\n          enhancedError.message =\n            'Refresh token is invalid or expired. Please reconnect your Square account.';\n          enhancedError.requiresReauthentication = true;\n        }\n\n        throw enhancedError;\n      }\n    };\n\n    // Execute with retry\n    const tokenData = await squareApiHelpers.executeWithRetry(\n      refreshTokenFn,\n      null, // No client needed as we're using axios directly\n      tokenRefreshConfig\n    );\n\n    console.log('Successfully refreshed access token');\n\n    return {\n      access_token: tokenData.access_token,\n      refresh_token: tokenData.refresh_token,\n      expires_at: tokenData.expires_at,\n      merchant_id: tokenData.merchant_id,\n    };\n  } catch (error) {\n    console.error('Error refreshing access token:', error.response?.data || error.message);\n\n    // Create an informative error with better details for debugging\n    const tokenError = new Error(\n      error.response?.data?.message || error.response?.data?.error_description || error.message\n    );\n\n    tokenError.code = error.response?.data?.error || 'TOKEN_REFRESH_ERROR';\n    tokenError.statusCode = error.response?.status || 500;\n\n    // Indicate if re-authentication is required\n    if (\n      error.requiresReauthentication ||\n      (error.response?.status === 400 &&\n        (error.response?.data?.error === 'invalid_grant' ||\n          error.response?.data?.error_description?.includes('refresh token')))\n    ) {\n      tokenError.requiresReauthentication = true;\n    }\n\n    throw tokenError;\n  }\n}\n\n/**\n * Get merchant info using native fetch API (Node.js 22)\n * Modern alternative to axios that uses native fetch API\n */\nasync function getMerchantInfoWithFetch(accessToken) {\n  try {\n    // Check cache first\n    const cacheKey = `merchant-info-${accessToken}`;\n    const cachedData = getCachedResponse(cacheKey, 'merchantInfo');\n    if (cachedData) {\n      return cachedData;\n    }\n\n    console.log('Getting merchant info with native fetch API');\n\n    // Prepare headers with authorization\n    const headers = {\n      Authorization: `Bearer ${accessToken}`,\n      Accept: 'application/json',\n      'Square-Version': SQUARE_API_HEADER_VERSION, // Use latest Square API version\n    };\n\n    // Fetch merchant data using native fetch API\n    const merchantData = await fetchHelpers.fetchJson(\n      `https://connect.squareup.com/${SQUARE_API_VERSION}/merchants/me`,\n      { headers },\n      10000 // 10 second timeout\n    );\n\n    // Extract relevant data\n    if (merchantData.merchant) {\n      const merchant = merchantData.merchant;\n\n      // Get main location info\n      const locationResponse = await fetchHelpers.fetchJson(\n        `https://connect.squareup.com/${SQUARE_API_VERSION}/locations`,\n        { headers },\n        10000\n      );\n\n      let mainLocation = null;\n      if (locationResponse.locations && locationResponse.locations.length > 0) {\n        // Prefer the main location\n        mainLocation =\n          locationResponse.locations.find(loc => loc.name === 'Default') ||\n          locationResponse.locations[0];\n      }\n\n      // Format the response\n      const result = {\n        merchantId: merchant.id,\n        businessName: merchant.business_name || 'Unknown Business',\n        country: merchant.country,\n        languageCode: merchant.language_code,\n        currency: merchant.currency,\n        status: merchant.status,\n        mainLocation: mainLocation\n          ? {\n              id: mainLocation.id,\n              name: mainLocation.name,\n              address: mainLocation.address,\n              phoneNumber: mainLocation.phone_number,\n              businessEmail: mainLocation.business_email,\n            }\n          : null,\n      };\n\n      // Cache the result\n      cacheResponse(cacheKey, result, 'merchantInfo');\n\n      return result;\n    } else {\n      throw createErrorWithCause(\n        'Invalid merchant data structure',\n        new Error('Missing merchant data'),\n        { statusCode: 500 }\n      );\n    }\n  } catch (error) {\n    console.error('Error getting merchant info with fetch:', error);\n\n    // Try falling back to SDK if fetch fails\n    if (error.code !== 'AUTHENTICATION_ERROR') {\n      try {\n        console.log('Falling back to Square SDK for merchant info');\n        return await getMerchantInfo(accessToken);\n      } catch (sdkError) {\n        // If SDK also fails, throw the original error\n        throw error;\n      }\n    }\n\n    throw error;\n  }\n}\n\n// Export functions\nmodule.exports = {\n  getSquareClient,\n  generateOAuthUrl,\n  exchangeCodeForToken,\n  getSquareCredentials,\n  getMerchantInfo,\n  generateStateParam,\n  generateCodeVerifier,\n  generateCodeChallenge,\n  verifyWebhookSignature,\n  executeSquareRequest,\n  refreshAccessToken,\n  // Add new cache utility exports\n  getCachedResponse,\n  cacheResponse,\n  CACHE_TTL_CONFIG,\n  getMerchantInfoWithFetch,\n  // Export version constants\n  SQUARE_API_VERSION,\n  SQUARE_API_HEADER_VERSION,\n};\n","module.exports = require(\"morgan\");","const express = require('express');\nconst router = express.Router();\n\n// Temporary route for testing\nrouter.get('/', (req, res) => {\n  res.json({ message: 'Products API is working' });\n});\n\nmodule.exports = router;\n","/**\n * Merchant API Routes\n * Endpoints for retrieving merchant information\n */\nconst express = require('express');\nconst router = express.Router();\nconst { protect } = require('../middleware/auth');\nconst squareService = require('../services/square');\nconst { handleApiError } = require('../utils/errorHandling');\n\n/**\n * @route   GET /api/merchant/me\n * @desc    Get information for the currently authenticated merchant\n * @access  Private\n */\nrouter.get('/me', protect, async (req, res) => {\n  try {\n    console.log('Fetching merchant info for authenticated user');\n    // Prefer the fetch-based implementation for Node.js 22\n    const merchantInfo = await squareService.getMerchantInfoWithFetch(req.user.squareAccessToken);\n\n    if (!merchantInfo) {\n      return res.status(404).json({ success: false, message: 'Merchant information not found.' });\n    }\n\n    // Return relevant merchant details\n    res.json({ success: true, merchant: merchantInfo });\n\n  } catch (error) {\n    console.error('Error fetching merchant info:', error);\n    // Use a generic API error handler if available, otherwise fallback\n    if (typeof handleApiError === 'function') {\n      return handleApiError(res, error, 'Failed to fetch merchant information');\n    } else {\n      res.status(error.statusCode || 500).json({\n        success: false,\n        message: error.message || 'Failed to fetch merchant information',\n        error: error.details || error.toString(),\n      });\n    }\n  }\n});\n\nmodule.exports = router;\n","const { STSClient, GetCallerIdentityCommand } = require('@aws-sdk/client-sts');\nconst { DynamoDBClient, ListTablesCommand } = require('@aws-sdk/client-dynamodb');\nconst { LambdaClient, ListFunctionsCommand } = require('@aws-sdk/client-lambda');\nconst { APIGatewayClient, GetRestApisCommand } = require('@aws-sdk/client-api-gateway');\n\n/**\n * Comprehensive AWS diagnostic test page\n */\nasync function runAwsDiagnostic(req, res) {\n  try {\n    const results = {\n      timestamp: new Date().toISOString(),\n      region: process.env.AWS_REGION,\n      tests: {},\n    };\n\n    // Test IAM Credentials\n    try {\n      const stsClient = new STSClient({ region: process.env.AWS_REGION });\n      const identity = await stsClient.send(new GetCallerIdentityCommand({}));\n      results.tests.credentials = {\n        status: 'success',\n        message: 'AWS credentials are valid',\n        account: identity.Account,\n        userId: identity.UserId,\n        arn: identity.Arn,\n      };\n    } catch (error) {\n      results.tests.credentials = {\n        status: 'error',\n        message: `AWS credentials test failed: ${error.message}`,\n      };\n    }\n\n    // Test DynamoDB\n    try {\n      const dynamoDb = new DynamoDBClient({ region: process.env.AWS_REGION });\n      const tables = await dynamoDb.send(new ListTablesCommand({}));\n\n      const requiredTables = [\n        process.env.PRODUCTS_TABLE,\n        process.env.CATEGORIES_TABLE,\n        process.env.USERS_TABLE,\n      ];\n\n      const existingTables = tables.TableNames;\n      const missingTables = requiredTables.filter(table => !existingTables.includes(table));\n\n      results.tests.dynamodb = {\n        status: missingTables.length === 0 ? 'success' : 'warning',\n        message:\n          missingTables.length === 0\n            ? 'All required DynamoDB tables exist'\n            : 'Some required tables are missing',\n        totalTables: existingTables.length,\n        availableTables: existingTables,\n        missingTables: missingTables,\n      };\n    } catch (error) {\n      results.tests.dynamodb = {\n        status: 'error',\n        message: `DynamoDB test failed: ${error.message}`,\n      };\n    }\n\n    // Test Lambda configuration\n    try {\n      const lambda = new LambdaClient({ region: process.env.AWS_REGION });\n      const functions = await lambda.send(new ListFunctionsCommand({}));\n\n      const serviceName = 'joylabs-backend-api';\n      const serviceFunctions = functions.Functions.filter(fn =>\n        fn.FunctionName.includes(serviceName)\n      );\n\n      results.tests.lambda = {\n        status: 'info',\n        message:\n          serviceFunctions.length > 0\n            ? `Found ${serviceFunctions.length} related Lambda functions`\n            : 'No deployed Lambda functions found for this service',\n        functions: serviceFunctions.map(fn => ({\n          name: fn.FunctionName,\n          runtime: fn.Runtime,\n          memory: fn.MemorySize,\n          timeout: fn.Timeout,\n        })),\n      };\n    } catch (error) {\n      results.tests.lambda = {\n        status: 'error',\n        message: `Lambda test failed: ${error.message}`,\n      };\n    }\n\n    // Test API Gateway\n    try {\n      const apiGateway = new APIGatewayClient({ region: process.env.AWS_REGION });\n      const apis = await apiGateway.send(new GetRestApisCommand({}));\n\n      const serviceName = 'joylabs-backend-api';\n      const serviceApis = apis.items.filter(api => api.name.includes(serviceName));\n\n      results.tests.apiGateway = {\n        status: 'info',\n        message:\n          serviceApis.length > 0\n            ? `Found ${serviceApis.length} related API Gateway APIs`\n            : 'No deployed API Gateway APIs found for this service',\n        apis: serviceApis.map(api => ({\n          id: api.id,\n          name: api.name,\n          endpoint: `https://${api.id}.execute-api.${process.env.AWS_REGION}.amazonaws.com/production`,\n          createdDate: api.createdDate,\n        })),\n      };\n    } catch (error) {\n      results.tests.apiGateway = {\n        status: 'error',\n        message: `API Gateway test failed: ${error.message}`,\n      };\n    }\n\n    const baseUrl = process.env.API_PROD_URL || req.protocol + '://' + req.get('host');\n\n    const format = req.query.format || 'html';\n    if (format === 'json') {\n      return res.json(results);\n    }\n\n    res.send(`\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <meta charset=\"utf-8\">\n          <title>JoyLabs AWS Diagnostic Tool</title>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n          <style>\n            body { \n              font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n              line-height: 1.6;\n              color: #333;\n              max-width: 900px;\n              margin: 0 auto;\n              padding: 20px;\n              background-color: #f5f7f9;\n            }\n            .card {\n              background: #fff;\n              border-radius: 8px;\n              box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n              padding: 20px;\n              margin: 20px 0;\n            }\n            h1 { \n              color: #2c3e50; \n              border-bottom: 2px solid #eee;\n              padding-bottom: 10px;\n            }\n            h2 { \n              margin-top: 25px; \n              color: #34495e;\n            }\n            .success { color: #27ae60; }\n            .error { color: #e74c3c; }\n            .warning { color: #f39c12; }\n            .info { color: #3498db; }\n            .mono {\n              font-family: monospace;\n              background: #f5f5f5;\n              padding: 10px;\n              border-radius: 4px;\n              overflow-x: auto;\n            }\n            .status-pill {\n              display: inline-block;\n              padding: 5px 10px;\n              border-radius: 20px;\n              font-size: 12px;\n              font-weight: bold;\n              text-transform: uppercase;\n              margin-left: 10px;\n            }\n            .status-success {\n              background-color: #d4edda;\n              color: #155724;\n            }\n            .status-error {\n              background-color: #f8d7da;\n              color: #721c24;\n            }\n            .status-warning {\n              background-color: #fff3cd;\n              color: #856404;\n            }\n            .status-info {\n              background-color: #d1ecf1;\n              color: #0c5460;\n            }\n            .test-summary {\n              margin-bottom: 30px;\n            }\n            table {\n              width: 100%;\n              border-collapse: collapse;\n              margin: 15px 0;\n            }\n            th, td {\n              text-align: left;\n              padding: 10px;\n              border-bottom: 1px solid #eee;\n            }\n            th {\n              background-color: #f8f9fa;\n            }\n            .button {\n              display: inline-block;\n              background: #3498db;\n              color: white;\n              border: none;\n              padding: 8px 15px;\n              border-radius: 4px;\n              text-decoration: none;\n              margin-right: 10px;\n              margin-top: 10px;\n            }\n            .small {\n              font-size: 0.8em;\n              color: #7f8c8d;\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"card\">\n            <h1>JoyLabs AWS Diagnostic Tool</h1>\n            <div>\n              <div><strong>Timestamp:</strong> ${results.timestamp}</div>\n              <div><strong>Region:</strong> ${results.region}</div>\n            </div>\n            \n            <div class=\"button-row\">\n              <a href=\"${req.path}?format=json\" class=\"button\">View as JSON</a>\n              <a href=\"${baseUrl}/api/health/test-page\" class=\"button\">View General Health</a>\n            </div>\n          </div>\n\n          <div class=\"card\">\n            <h2>IAM Credentials Test</h2>\n            <div class=\"test-summary\">\n              <span class=\"${results.tests.credentials.status}\">\n                ${results.tests.credentials.message}\n              </span>\n              <span class=\"status-pill status-${results.tests.credentials.status}\">\n                ${results.tests.credentials.status}\n              </span>\n            </div>\n            ${\n              results.tests.credentials.status === 'success'\n                ? `\n              <table>\n                <tr>\n                  <th>AWS Account</th>\n                  <td>${results.tests.credentials.account}</td>\n                </tr>\n                <tr>\n                  <th>User ID</th>\n                  <td>${results.tests.credentials.userId}</td>\n                </tr>\n                <tr>\n                  <th>ARN</th>\n                  <td class=\"mono\">${results.tests.credentials.arn}</td>\n                </tr>\n              </table>\n            `\n                : ''\n            }\n          </div>\n\n          <div class=\"card\">\n            <h2>DynamoDB Test</h2>\n            <div class=\"test-summary\">\n              <span class=\"${results.tests.dynamodb.status}\">\n                ${results.tests.dynamodb.message}\n              </span>\n              <span class=\"status-pill status-${results.tests.dynamodb.status}\">\n                ${results.tests.dynamodb.status}\n              </span>\n            </div>\n            ${\n              results.tests.dynamodb.status !== 'error'\n                ? `\n              <p>Found ${results.tests.dynamodb.totalTables} tables in this region:</p>\n              <div class=\"mono\">\n                ${results.tests.dynamodb.availableTables.join(', ')}\n              </div>\n              ${\n                results.tests.dynamodb.missingTables.length > 0\n                  ? `\n                <p class=\"warning\">Missing required tables:</p>\n                <div class=\"mono\">\n                  ${results.tests.dynamodb.missingTables.join(', ')}\n                </div>\n              `\n                  : ''\n              }\n            `\n                : ''\n            }\n          </div>\n          \n          <div class=\"card\">\n            <h2>Lambda Test</h2>\n            <div class=\"test-summary\">\n              <span class=\"${results.tests.lambda.status}\">\n                ${results.tests.lambda.message}\n              </span>\n              <span class=\"status-pill status-${results.tests.lambda.status}\">\n                ${results.tests.lambda.status}\n              </span>\n            </div>\n            ${\n              results.tests.lambda.functions && results.tests.lambda.functions.length > 0\n                ? `\n              <table>\n                <tr>\n                  <th>Function Name</th>\n                  <th>Runtime</th>\n                  <th>Memory</th>\n                  <th>Timeout</th>\n                </tr>\n                ${results.tests.lambda.functions\n                  .map(\n                    fn => `\n                  <tr>\n                    <td>${fn.name}</td>\n                    <td>${fn.runtime}</td>\n                    <td>${fn.memory} MB</td>\n                    <td>${fn.timeout} sec</td>\n                  </tr>\n                `\n                  )\n                  .join('')}\n              </table>\n            `\n                : `\n              <p>No Lambda functions found for this service</p>\n            `\n            }\n          </div>\n          \n          <div class=\"card\">\n            <h2>API Gateway Test</h2>\n            <div class=\"test-summary\">\n              <span class=\"${results.tests.apiGateway.status}\">\n                ${results.tests.apiGateway.message}\n              </span>\n              <span class=\"status-pill status-${results.tests.apiGateway.status}\">\n                ${results.tests.apiGateway.status}\n              </span>\n            </div>\n            ${\n              results.tests.apiGateway.apis && results.tests.apiGateway.apis.length > 0\n                ? `\n              <table>\n                <tr>\n                  <th>API Name</th>\n                  <th>API ID</th>\n                  <th>Endpoint URL</th>\n                </tr>\n                ${results.tests.apiGateway.apis\n                  .map(\n                    api => `\n                  <tr>\n                    <td>${api.name}</td>\n                    <td>${api.id}</td>\n                    <td class=\"mono\">${api.endpoint}</td>\n                  </tr>\n                `\n                  )\n                  .join('')}\n              </table>\n            `\n                : `\n              <p>No API Gateway APIs found for this service</p>\n            `\n            }\n          </div>\n          \n          <div class=\"card\">\n            <h2>Environment Configuration</h2>\n            <p>Required environment variables:</p>\n            <ul>\n              <li>API_PROD_URL: Your production API Gateway URL</li>\n              <li>SQUARE_REDIRECT_URL: Your production Square OAuth redirect URL</li>\n            </ul>\n          </div>\n        </body>\n      </html>\n    `);\n  } catch (error) {\n    console.error('Diagnostic test error:', error);\n    res.status(500).json({\n      status: 'error',\n      message: error.message,\n    });\n  }\n}\n\nmodule.exports = {\n  runAwsDiagnostic,\n};\n","/**\n * Square Catalog Service\n * Provides methods to interact with Square Catalog API\n */\nconst axios = require('axios');\nconst { getSquareClient } = require('./square');\nconst { handleSquareError } = require('../utils/errorHandling');\nconst CatalogItem = require('../models/CatalogItem');\nconst uuid = require('uuid');\nconst squareService = require('./square');\nconst squareErrorHandler = require('../utils/errorHandling');\n\n// Square API version configuration - centralized for easy updates\nconst SQUARE_API_VERSION = 'v2';\n// Square API header version - updated to latest available version\nconst SQUARE_API_HEADER_VERSION = '2025-03-19';\n\n// Default catalog image size dimensions\nconst DEFAULT_IMAGE_SIZE = { width: 300, height: 300 };\n\n/**\n * List catalog items\n * @param {string} accessToken - Square access token\n * @param {Object} options - Catalog listing options\n * @returns {Promise<Object>} Catalog items response\n */\nasync function listCatalogItems(accessToken, options = {}) {\n  try {\n    console.log('=== REQUEST BOUNDARY: listCatalogItems START ===');\n    console.log(\n      'Listing catalog items from Square with options:',\n      JSON.stringify(options, null, 2)\n    );\n\n    // Determine cache key based on options\n    const optionsHash = JSON.stringify({\n      types: options.types || ['ITEM', 'CATEGORY'],\n      limit: options.limit || 100,\n      cursor: options.cursor || null,\n      includeRelatedObjects:\n        options.includeRelatedObjects === true || options.includeRelatedObjects === 'true',\n      includeDeletedObjects:\n        options.includeDeletedObjects === true || options.includeDeletedObjects === 'true',\n    });\n\n    const cacheKey = `catalog-items-${accessToken}-${Buffer.from(optionsHash).toString('base64')}`;\n\n    // Check cache first\n    const cachedData = squareService.getCachedResponse(cacheKey, 'catalogItems');\n    if (cachedData) {\n      console.log('Using cached catalog items data');\n      console.log('=== REQUEST BOUNDARY: listCatalogItems END (Cached) ===');\n      return cachedData;\n    }\n\n    // Use executeSquareRequest to handle retries and errors\n    const result = await squareService.executeSquareRequest(\n      async client => {\n        // Parse options\n        const types = options.types || ['ITEM', 'CATEGORY'];\n        const typesArray = Array.isArray(types) ? types : types.split(',');\n        \n        // Default to 1000 if not provided, and cap at 1000\n        const requestedLimit = options.limit ? parseInt(options.limit) : 1000; \n        const limit = Math.min(Math.max(1, requestedLimit), 1000); // Ensure limit is between 1 and 1000\n\n        const cursor = options.cursor || null;\n        const includeRelatedObjects =\n          options.includeRelatedObjects === true || options.includeRelatedObjects === 'true';\n        const includeDeletedObjects =\n          options.includeDeletedObjects === true || options.includeDeletedObjects === 'true';\n\n        console.log('Making ListCatalog call with params:', {\n          types: typesArray,\n          limit,\n          cursor,\n          includeRelatedObjects,\n          includeDeletedObjects,\n        });\n\n        // Ensure Square-Version header is set\n        client.agent.defaultHeaders['Square-Version'] = SQUARE_API_HEADER_VERSION;\n\n        // Call Square SDK method with appropriate parameters\n        return client.catalog.listCatalog(\n          typesArray,\n          cursor, // Pass the validated cursor\n          limit,  // Pass the validated limit\n          includeDeletedObjects,\n          includeRelatedObjects\n        );\n      },\n      accessToken,\n      'catalog-api' // Use catalog-specific rate limiting\n    );\n\n    console.log('=== REQUEST BOUNDARY: listCatalogItems END ===');\n    console.log('Successfully retrieved catalog items:', {\n      count: result.result.objects?.length || 0,\n      cursor: result.result.cursor ? 'Present' : 'None',\n    });\n\n    const response = {\n      success: true,\n      objects: result.result.objects || [],\n      cursor: result.result.cursor,\n      types: options.types || ['ITEM', 'CATEGORY'],\n    };\n\n    // Cache the result\n    squareService.cacheResponse(cacheKey, response, 'catalogItems');\n\n    return response;\n  } catch (error) {\n    console.error('Error listing catalog items:', error);\n    return squareErrorHandler.handleSquareError(error, 'Failed to list catalog items');\n  }\n}\n\n/**\n * Get catalog item by ID\n * @param {string} accessToken - Square access token\n * @param {string} itemId - Catalog item ID\n * @returns {Promise<Object>} Catalog item\n */\nasync function getCatalogItem(accessToken, itemId) {\n  try {\n    console.log(`Getting catalog item: ${itemId}`);\n    const client = getSquareClient(accessToken);\n\n    const response = await client.catalog.retrieveCatalogObject(itemId, true);\n\n    return {\n      success: true,\n      catalogObject: response.result.object,\n      relatedObjects: response.result.relatedObjects || [],\n    };\n  } catch (error) {\n    console.error(`Error getting catalog item ${itemId}:`, error);\n    return handleSquareError(error, 'Failed to get catalog item');\n  }\n}\n\n/**\n * Helper function to prepare catalog object from item data\n * @param {Object} itemData - Item data\n * @returns {Object} Prepared catalog object\n */\nfunction prepareCatalogObject(itemData) {\n  // Base object structure\n  const catalogObject = {\n    type: itemData.type || 'ITEM',\n    id: itemData.id || `#${uuid.v4()}`,\n    presentAtAllLocations: true,\n    version: itemData.version,\n  };\n\n  // Handle different object types\n  switch (catalogObject.type) {\n    case 'ITEM':\n      catalogObject.itemData = {\n        name: itemData.name,\n        description: itemData.description,\n        abbreviation: itemData.abbreviation,\n        productType: itemData.productType || 'REGULAR',\n        categoryId: itemData.categoryId,\n        taxIds: itemData.taxIds || [],\n        variations: itemData.variations || [],\n        imageIds: itemData.imageIds || [],\n        isArchived: itemData.isArchived || false,\n        availableOnline: itemData.availableOnline || false,\n        availableForPickup: itemData.availableForPickup || false,\n        availableElectronically: itemData.availableElectronically || false,\n        skipModifierScreen: itemData.skipModifierScreen || false,\n        sortName: itemData.sortName,\n        modifierListInfo: itemData.modifierListInfo || [],\n        categories: itemData.categories || [],\n      };\n      break;\n\n    case 'CATEGORY':\n      catalogObject.categoryData = {\n        name: itemData.name,\n        imageIds: itemData.imageIds || [],\n      };\n      break;\n\n    case 'TAX':\n      catalogObject.taxData = {\n        name: itemData.name,\n        calculationPhase: itemData.calculationPhase || 'TAX_SUBTOTAL_PHASE',\n        inclusionType: itemData.inclusionType || 'ADDITIVE',\n        percentage: itemData.percentage,\n        appliesToCustomAmounts: itemData.appliesToCustomAmounts || false,\n        enabled: itemData.enabled || true,\n      };\n      break;\n\n    case 'DISCOUNT':\n      catalogObject.discountData = {\n        name: itemData.name,\n        discountType: itemData.discountType || 'FIXED_PERCENTAGE',\n        percentage: itemData.percentage,\n        amountMoney: itemData.amountMoney,\n        pinRequired: itemData.pinRequired || false,\n        labelColor: itemData.labelColor,\n      };\n      break;\n\n    case 'MODIFIER_LIST':\n      catalogObject.modifierListData = {\n        name: itemData.name,\n        selectionType: itemData.selectionType || 'SINGLE',\n        modifiers: itemData.modifiers || [],\n        imageIds: itemData.imageIds || [],\n      };\n      break;\n\n    case 'MODIFIER':\n      catalogObject.modifierData = {\n        name: itemData.name,\n        priceMoney: itemData.priceMoney,\n        ordinal: itemData.ordinal || 0,\n        modifierListId: itemData.modifierListId,\n        imageIds: itemData.imageIds || [],\n      };\n      break;\n\n    case 'IMAGE':\n      catalogObject.imageData = {\n        name: itemData.name,\n        url: itemData.url,\n        caption: itemData.caption,\n      };\n      break;\n\n    default:\n      throw new Error(`Unsupported catalog object type: ${catalogObject.type}`);\n  }\n\n  return catalogObject;\n}\n\n/**\n * Create or update catalog item\n * @param {string} accessToken - Square access token\n * @param {Object} itemData - Item data to create or update\n * @returns {Promise<Object>} Created/updated catalog item\n */\nasync function createOrUpdateCatalogItem(accessToken, itemData) {\n  try {\n    console.log('Creating/updating catalog item in Square');\n    const client = getSquareClient(accessToken);\n\n    const idempotencyKey = itemData.idempotencyKey || uuid.v4();\n    const catalogObject = prepareCatalogObject(itemData);\n\n    console.log(`Using idempotency key: ${idempotencyKey}`);\n    console.log(`Object type: ${catalogObject.type}`);\n\n    const request = {\n      idempotencyKey,\n      object: catalogObject,\n    };\n\n    const response = await client.catalog.upsertCatalogObject(request);\n\n    // Store reference in our database\n    try {\n      // Get merchant info using squareService\n      const merchantInfo = await squareService.getMerchantInfo(accessToken);\n\n      await CatalogItem.create({\n        id: uuid.v4(),\n        square_catalog_id: response.result.catalogObject.id,\n        name: catalogObject.itemData?.name || catalogObject.categoryData?.name || 'Unnamed Item',\n        type: catalogObject.type,\n        merchant_id: merchantInfo.id,\n        metadata: {\n          idempotencyKey,\n          version: response.result.catalogObject.version,\n        },\n      });\n    } catch (dbError) {\n      console.error('Error storing catalog item reference:', dbError);\n    }\n\n    return {\n      success: true,\n      catalogObject: response.result.catalogObject,\n      idempotencyKey,\n    };\n  } catch (error) {\n    console.error('Error creating/updating catalog item:', error);\n    return handleSquareError(error, 'Failed to create/update catalog item');\n  }\n}\n\n/**\n * Delete catalog item\n * @param {string} accessToken - Square access token\n * @param {string} itemId - Catalog item ID\n * @returns {Promise<Object>} Deletion result\n */\nasync function deleteCatalogItem(accessToken, itemId) {\n  try {\n    console.log(`Deleting catalog item: ${itemId}`);\n    const client = getSquareClient(accessToken);\n\n    const response = await client.catalog.deleteCatalogObject(itemId);\n\n    // Remove from our database if it exists\n    try {\n      const localItem = await CatalogItem.findBySquareCatalogId(itemId);\n      if (localItem) {\n        await CatalogItem.remove(localItem.id);\n      }\n    } catch (dbError) {\n      console.error('Error removing catalog item reference:', dbError);\n    }\n\n    return {\n      success: true,\n      deletedObjectId: itemId,\n    };\n  } catch (error) {\n    console.error(`Error deleting catalog item ${itemId}:`, error);\n    return handleSquareError(error, 'Failed to delete catalog item');\n  }\n}\n\n/**\n * Helper function to build a properly formatted Square catalog search request\n * @param {Object} params - Search parameters\n * @returns {Object} Properly formatted search request\n */\nfunction buildCatalogSearchRequest(params = {}) {\n  // Make a copy to avoid modifying the original\n  const paramsCopy = JSON.parse(JSON.stringify(params));\n\n  const {\n    object_types = ['ITEM'],\n    cursor,\n    limit = 100,\n    include_deleted_objects = false,\n    include_related_objects = false,\n    begin_time,\n    query = {},\n    include_category_path_to_root = false,\n  } = paramsCopy;\n\n  // Build the base request\n  const searchRequest = {\n    object_types: Array.isArray(object_types) ? object_types : [object_types],\n    cursor,\n    limit,\n    include_deleted_objects,\n    include_related_objects,\n    begin_time,\n    include_category_path_to_root,\n  };\n\n  // Initialize a valid query object\n  searchRequest.query = {};\n\n  // Check if the query parameter has valid query types\n  const validQueryTypes = [\n    'prefix_query',\n    'exact_query',\n    'sorted_attribute_query',\n    'text_query',\n    'item_query',\n    'item_variation_query',\n    'items_for_tax_query',\n    'items_for_modifier_list_query',\n    'items_for_item_options',\n  ];\n\n  // Handle special case: if the query object exists but is empty {}\n  if (query && typeof query === 'object' && Object.keys(query).length === 0) {\n    console.log('Query object is empty, using default text_query');\n    searchRequest.query.text_query = { query: '' };\n    return searchRequest;\n  }\n\n  // Check if the query contains at least one valid query type\n  const hasQueryType =\n    query &&\n    typeof query === 'object' &&\n    Object.keys(query).some(key => validQueryTypes.includes(key));\n\n  if (hasQueryType) {\n    console.log(\n      'Found valid query types:',\n      Object.keys(query).filter(key => validQueryTypes.includes(key))\n    );\n    // Copy all valid query types\n    validQueryTypes.forEach(queryType => {\n      if (query[queryType]) {\n        searchRequest.query[queryType] = query[queryType];\n      }\n    });\n  } else {\n    console.log('No valid query types found, using default text_query');\n    // If no query type was provided, include a default empty text_query\n    // This satisfies Square's requirement that \"Query must have exactly one query type set\"\n    searchRequest.query.text_query = { query: '' };\n  }\n\n  // Final validation: ensure query has exactly one field\n  const queryKeys = Object.keys(searchRequest.query);\n  if (queryKeys.length === 0) {\n    console.log('No query types after processing, adding default text_query');\n    searchRequest.query.text_query = { query: '' };\n  } else if (queryKeys.length > 1) {\n    console.log('Multiple query types found, keeping only the first one:', queryKeys[0]);\n    const firstKey = queryKeys[0];\n    const firstValue = searchRequest.query[firstKey];\n    searchRequest.query = { [firstKey]: firstValue };\n  }\n\n  return searchRequest;\n}\n\n/**\n * Search catalog items\n * @param {string} accessToken - Square access token\n * @param {Object} searchParams - Search parameters\n * @returns {Promise<Object>} Search results\n */\nasync function searchCatalogItems(accessToken, searchParams = {}) {\n  try {\n    console.log('=== REQUEST BOUNDARY: searchCatalogItems START ===');\n    console.log(\n      'Searching catalog objects in Square with params:',\n      JSON.stringify(searchParams, null, 2)\n    );\n\n    // Create the request body based on searchParams, converting snake_case to camelCase if needed\n    const searchRequest = {};\n\n    // Only add parameters that are provided\n    if (searchParams.objectTypes || searchParams.object_types) {\n      searchRequest.objectTypes = searchParams.objectTypes || searchParams.object_types;\n    }\n\n    if (searchParams.limit) {\n      searchRequest.limit = parseInt(searchParams.limit);\n    }\n\n    if (searchParams.cursor) {\n      searchRequest.cursor = searchParams.cursor;\n    }\n\n    if (searchParams.includeDeletedObjects || searchParams.include_deleted_objects) {\n      searchRequest.includeDeletedObjects =\n        searchParams.includeDeletedObjects || searchParams.include_deleted_objects;\n    }\n\n    if (searchParams.includeRelatedObjects || searchParams.include_related_objects) {\n      searchRequest.includeRelatedObjects =\n        searchParams.includeRelatedObjects || searchParams.include_related_objects;\n    }\n\n    if (searchParams.beginTime || searchParams.begin_time) {\n      searchRequest.beginTime = searchParams.beginTime || searchParams.begin_time;\n    }\n\n    if (searchParams.includeCategoryPathToRoot || searchParams.include_category_path_to_root) {\n      searchRequest.includeCategoryPathToRoot =\n        searchParams.includeCategoryPathToRoot || searchParams.include_category_path_to_root;\n    }\n\n    // Keep the original query if provided\n    if (searchParams.query) {\n      searchRequest.query = searchParams.query;\n      console.log('Using query from input:', Object.keys(searchParams.query)[0]);\n    }\n\n    console.log(\n      'Final search request being sent to Square:',\n      JSON.stringify(searchRequest, null, 2)\n    );\n\n    // Use executeSquareRequest to handle retries and rate limiting\n    const result = await squareService.executeSquareRequest(\n      async client => {\n        return client.catalog.searchCatalogObjects(searchRequest);\n      },\n      accessToken,\n      'catalog-api'\n    );\n\n    console.log('=== REQUEST BOUNDARY: searchCatalogItems END ===');\n    console.log('Results retrieved:', {\n      count: result.result.objects?.length || 0,\n      cursor: result.result.cursor ? 'Present' : 'None',\n    });\n\n    return {\n      success: true,\n      objects: result.result.objects || [],\n      relatedObjects: result.result.relatedObjects || [],\n      cursor: result.result.cursor,\n    };\n  } catch (error) {\n    console.error('Error searching catalog items:', error);\n    return handleSquareError(error, 'Failed to search catalog items');\n  }\n}\n\n/**\n * Batch retrieve catalog objects\n * @param {string} accessToken - Square access token\n * @param {string[]} objectIds - Array of catalog object IDs\n * @param {boolean} includeRelatedObjects - Whether to include related objects\n * @returns {Promise<Object>} Retrieved catalog objects\n */\nasync function batchRetrieveCatalogObjects(accessToken, objectIds, includeRelatedObjects = true) {\n  try {\n    console.log('Batch retrieving catalog objects');\n    const client = getSquareClient(accessToken);\n\n    const response = await client.catalog.batchRetrieveCatalogObjects({\n      objectIds,\n      includeRelatedObjects,\n    });\n\n    return {\n      success: true,\n      objects: response.result.objects || [],\n      relatedObjects: response.result.relatedObjects || [],\n    };\n  } catch (error) {\n    console.error('Error batch retrieving catalog objects:', error);\n    return handleSquareError(error, 'Failed to batch retrieve catalog objects');\n  }\n}\n\n/**\n * Batch upsert catalog objects\n * @param {string} accessToken - Square access token\n * @param {Object[]} batches - Array of catalog object batches\n * @returns {Promise<Object>} Upserted catalog objects\n */\nasync function batchUpsertCatalogObjects(accessToken, batches) {\n  try {\n    console.log('Batch upserting catalog objects');\n    const client = getSquareClient(accessToken);\n    const catalogApi = client.catalog;\n\n    const idempotencyKey = uuid.v4();\n    const response = await catalogApi.batchUpsertCatalogObjects({\n      idempotencyKey,\n      batches,\n    });\n\n    return {\n      success: true,\n      objects: response.result.objects || [],\n      updatedAt: response.result.updatedAt,\n      idempotencyKey,\n    };\n  } catch (error) {\n    console.error('Error batch upserting catalog objects:', error);\n    return handleSquareError(error, 'Failed to batch upsert catalog objects');\n  }\n}\n\n/**\n * Batch delete catalog objects\n * @param {string} accessToken - Square access token\n * @param {Array<string>} objectIds - Array of catalog object IDs to delete\n * @returns {Promise<Object>} Delete response\n */\nasync function batchDeleteCatalogObjects(accessToken, objectIds) {\n  try {\n    if (!objectIds || !Array.isArray(objectIds) || objectIds.length === 0) {\n      return {\n        success: false,\n        error: 'No catalog object IDs provided for deletion',\n      };\n    }\n\n    console.log(`Batch deleting ${objectIds.length} catalog objects`);\n    const client = getSquareClient(accessToken);\n\n    // Square API requires a BatchDeleteCatalogObjectsRequest object\n    const request = {\n      objectIds: objectIds,\n    };\n\n    const response = await client.catalog.batchDeleteCatalogObjects(request);\n\n    console.log('Successfully deleted catalog objects');\n    console.log(\n      'Deleted IDs count:',\n      response.result.deletedObjectIds ? response.result.deletedObjectIds.length : 0\n    );\n\n    // Remove from our database - Fix N+1 pattern by using batch operation\n    try {\n      // Get references to all objects in a single query\n      const localItemPromises = objectIds.map(objectId =>\n        CatalogItem.findBySquareCatalogId(objectId)\n      );\n\n      const localItems = await Promise.all(localItemPromises);\n      const validLocalItems = localItems.filter(item => item !== null);\n\n      if (validLocalItems.length > 0) {\n        // For better performance, use a batch delete operation if available\n        console.log(`Found ${validLocalItems.length} local items to remove`);\n\n        // If your DB has batch remove capability\n        if (typeof CatalogItem.batchRemove === 'function') {\n          const itemIds = validLocalItems.map(item => item.id);\n          await CatalogItem.batchRemove(itemIds);\n          console.log(`Batch removed ${itemIds.length} catalog item references`);\n        } else {\n          // Fall back to parallel deletion if batch not available\n          await Promise.all(validLocalItems.map(item => CatalogItem.remove(item.id)));\n          console.log(`Removed ${validLocalItems.length} catalog item references in parallel`);\n        }\n      }\n    } catch (dbError) {\n      console.error('Error removing catalog item references:', dbError);\n    }\n\n    return {\n      success: true,\n      deletedObjectIds: response.result.deletedObjectIds || [],\n    };\n  } catch (error) {\n    console.error('Error batch deleting catalog objects:', error);\n    return handleSquareError(error, 'Failed to batch delete catalog objects');\n  }\n}\n\n/**\n * Update catalog item modifier lists\n * @param {string} accessToken - Square access token\n * @param {string} itemId - Catalog item ID\n * @param {string[]} modifierListsToEnable - Modifier lists to enable\n * @param {string[]} modifierListsToDisable - Modifier lists to disable\n * @returns {Promise<Object>} Update result\n */\nasync function updateItemModifierLists(\n  accessToken,\n  itemId,\n  modifierListsToEnable = [],\n  modifierListsToDisable = []\n) {\n  try {\n    console.log(`Updating modifier lists for item: ${itemId}`);\n    const client = getSquareClient(accessToken);\n    const catalogApi = client.catalog;\n\n    const response = await catalogApi.updateItemModifierLists({\n      itemIds: [itemId],\n      modifierListsToEnable,\n      modifierListsToDisable,\n    });\n\n    return {\n      success: true,\n      updatedAt: response.result.updatedAt,\n    };\n  } catch (error) {\n    console.error(`Error updating modifier lists for item ${itemId}:`, error);\n    return handleSquareError(error, 'Failed to update item modifier lists');\n  }\n}\n\n/**\n * Update catalog item taxes\n * @param {string} accessToken - Square access token\n * @param {string} itemId - Catalog item ID\n * @param {string[]} taxesToEnable - Taxes to enable\n * @param {string[]} taxesToDisable - Taxes to disable\n * @returns {Promise<Object>} Update result\n */\nasync function updateItemTaxes(accessToken, itemId, taxesToEnable = [], taxesToDisable = []) {\n  try {\n    console.log(`Updating taxes for item: ${itemId}`);\n    const client = getSquareClient(accessToken);\n    const catalogApi = client.catalog;\n\n    const response = await catalogApi.updateItemTaxes({\n      itemIds: [itemId],\n      taxesToEnable,\n      taxesToDisable,\n    });\n\n    return {\n      success: true,\n      updatedAt: response.result.updatedAt,\n    };\n  } catch (error) {\n    console.error(`Error updating taxes for item ${itemId}:`, error);\n    return handleSquareError(error, 'Failed to update item taxes');\n  }\n}\n\n/**\n * Get catalog categories\n * @param {string} accessToken - Square access token\n * @returns {Promise<Object>} List of catalog categories\n */\nasync function getCatalogCategories(accessToken) {\n  try {\n    console.log('=== REQUEST BOUNDARY: getCatalogCategories START ===');\n\n    // Check cache first\n    const cacheKey = `catalog-categories-${accessToken}`;\n    const cachedData = squareService.getCachedResponse(cacheKey, 'catalogCategories');\n    if (cachedData) {\n      console.log('Using cached catalog categories data');\n      return cachedData;\n    }\n\n    console.log('Getting catalog categories from Square');\n\n    // Use direct axios approach to ensure proper query formatting\n    const axios = require('axios');\n\n    // Following Square's documentation for finding categories - try both approaches:\n    // 1. For top-level categories, use range_query on is_top_level\n    // 2. For all categories, use exact_query on name as fallback\n    const searchRequest = {\n      object_types: ['CATEGORY'],\n      limit: 200,\n      include_related_objects: true,\n      query: {\n        range_query: {\n          attribute_name: 'is_top_level',\n          attribute_max_value: 1,\n          attribute_min_value: 1,\n        },\n      },\n    };\n\n    console.log('Category search request:', JSON.stringify(searchRequest, null, 2));\n\n    // Make direct API call to Square\n    console.log('Making API call to Square for categories...');\n    const response = await axios({\n      method: 'post',\n      url: `https://connect.squareup.com/${SQUARE_API_VERSION}/catalog/search`,\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        'Square-Version': SQUARE_API_HEADER_VERSION,\n      },\n      data: searchRequest,\n    });\n\n    console.log('Square response status:', response.status);\n    console.log('Response headers:', JSON.stringify(response.headers, null, 2));\n    console.log(\n      'Response data structure:',\n      Object.keys(response.data).length === 0\n        ? 'Empty response body'\n        : JSON.stringify(\n            {\n              objects_array_length: response.data.objects ? response.data.objects.length : 0,\n              objects_present: !!response.data.objects,\n              related_objects_present: !!response.data.related_objects,\n              cursor_present: !!response.data.cursor,\n            },\n            null,\n            2\n          )\n    );\n\n    if (!response.data.objects || response.data.objects.length === 0) {\n      console.log('No top-level categories found, trying fallback query to find all categories...');\n\n      // Fallback to our previous approach if no categories found\n      const fallbackRequest = {\n        object_types: ['CATEGORY'],\n        limit: 200,\n        include_related_objects: true,\n        query: {\n          exact_query: {\n            attribute_name: 'name',\n            attribute_value: '.', // Use a very common character to match almost everything\n          },\n        },\n      };\n\n      console.log('Fallback category search request:', JSON.stringify(fallbackRequest, null, 2));\n\n      const fallbackResponse = await axios({\n        method: 'post',\n        url: `https://connect.squareup.com/${SQUARE_API_VERSION}/catalog/search`,\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          'Content-Type': 'application/json',\n          'Square-Version': SQUARE_API_HEADER_VERSION,\n        },\n        data: fallbackRequest,\n      });\n\n      console.log('Fallback response status:', fallbackResponse.status);\n      console.log(\n        'Fallback objects found:',\n        fallbackResponse.data.objects ? fallbackResponse.data.objects.length : 0\n      );\n\n      console.log('=== REQUEST BOUNDARY: getCatalogCategories END (Success) ===');\n\n      const result = {\n        success: true,\n        categories: fallbackResponse.data.objects || [],\n        relatedObjects: fallbackResponse.data.related_objects || [],\n        cursor: fallbackResponse.data.cursor,\n      };\n\n      // Cache the result\n      squareService.cacheResponse(cacheKey, result, 'catalogCategories');\n\n      return result;\n    }\n\n    console.log('=== REQUEST BOUNDARY: getCatalogCategories END (Success) ===');\n\n    // Process the response data\n    const result = {\n      success: true,\n      categories: response.data.objects || [],\n      relatedObjects: response.data.related_objects || [],\n      cursor: response.data.cursor,\n    };\n\n    // Cache the result\n    squareService.cacheResponse(cacheKey, result, 'catalogCategories');\n\n    return result;\n  } catch (error) {\n    console.error('=== REQUEST BOUNDARY: getCatalogCategories END (Error) ===');\n    console.error(\n      'Error getting catalog categories:',\n      error.response ? error.response.data : error\n    );\n\n    if (error.response && error.response.data) {\n      return {\n        success: false,\n        error: {\n          message: error.response.data.errors?.[0]?.detail || 'Failed to get catalog categories',\n          code: error.response.data.errors?.[0]?.code || 'UNKNOWN_ERROR',\n          details: error.response.data.errors || [],\n        },\n      };\n    }\n\n    return handleSquareError(error, 'Failed to get catalog categories');\n  }\n}\n\n/**\n * List catalog categories only (without DynamoDB)\n * A simplified version of listCatalogItems that doesn't try to access DynamoDB\n * @param {string} accessToken - Square access token\n * @param {Object} options - List options\n * @returns {Promise<Object>} List of catalog categories\n */\nasync function listCatalogCategories(accessToken, options = {}) {\n  try {\n    console.log('=== REQUEST BOUNDARY: listCatalogCategories START ===');\n    console.log('Listing catalog categories from Square - simplified call without DB access');\n\n    const client = getSquareClient(accessToken);\n    const catalogApi = client.catalog;\n\n    // Force options to only get categories\n    const { limit = 200, cursor } = options;\n\n    // Make direct API call to Square\n    const axios = require('axios');\n\n    console.log(\n      'Making ListCatalog request with params:',\n      JSON.stringify(\n        {\n          object_types: ['CATEGORY'],\n          limit,\n          cursor,\n        },\n        null,\n        2\n      )\n    );\n\n    // Make direct API call to avoid SDK parameter order issues\n    const response = await axios({\n      method: 'get',\n      url: `https://connect.squareup.com/${SQUARE_API_VERSION}/catalog/list`,\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n        'Square-Version': SQUARE_API_HEADER_VERSION,\n      },\n      params: {\n        types: 'CATEGORY',\n        limit,\n        cursor,\n      },\n    });\n\n    if (response?.data) {\n      console.log(\n        'ListCatalog response successful. Objects count:',\n        response.data.objects ? response.data.objects.length : 0\n      );\n\n      if (response.data.objects && response.data.objects.length > 0) {\n        console.log(\n          'First few categories:',\n          response.data.objects.slice(0, 3).map(obj => ({\n            id: obj.id,\n            type: obj.type,\n            name: obj.category_data?.name || 'Unknown',\n          }))\n        );\n      } else {\n        console.log('Warning: No categories returned. This might indicate:');\n        console.log('1. There are no categories in the Square account');\n        console.log('2. The token might not have access to the requested catalog categories');\n        console.log('3. The merchant account might be empty or incorrectly configured');\n      }\n    } else {\n      console.log('Warning: Unexpected response format from Square:', response);\n    }\n\n    console.log('=== REQUEST BOUNDARY: listCatalogCategories END (Success) ===');\n\n    return {\n      success: true,\n      objects: response.data.objects || [],\n      cursor: response.data.cursor,\n      count: response.data.objects ? response.data.objects.length : 0,\n    };\n  } catch (error) {\n    console.error('=== REQUEST BOUNDARY: listCatalogCategories END (Error) ===');\n    console.error(\n      'Error listing catalog categories:',\n      error.response ? error.response.data : error\n    );\n    console.error('Square API Error:', error);\n\n    if (error.response && error.response.data) {\n      return {\n        success: false,\n        error: {\n          message: error.response.data.errors?.[0]?.detail || 'Failed to list catalog categories',\n          code: error.response.data.errors?.[0]?.code || 'UNKNOWN_ERROR',\n          details: error.response.data.errors || [],\n        },\n      };\n    }\n\n    return handleSquareError(error, 'Failed to list catalog categories');\n  }\n}\n\nmodule.exports = {\n  listCatalogItems,\n  getCatalogItem,\n  createOrUpdateCatalogItem,\n  deleteCatalogItem,\n  searchCatalogItems,\n  batchRetrieveCatalogObjects,\n  batchUpsertCatalogObjects,\n  batchDeleteCatalogObjects,\n  updateItemModifierLists,\n  updateItemTaxes,\n  getCatalogCategories,\n  listCatalogCategories,\n};\n","const express = require('express');\nconst router = express.Router();\nconst healthController = require('../controllers/health');\nconst awsDiagnosticController = require('../controllers/aws-diagnostic');\n\n// Health check routes\nrouter.get('/', healthController.checkHealth);\nrouter.get('/detailed', healthController.checkDetailedHealth);\nrouter.get('/test-page', healthController.renderTestPage);\n\n// OAuth test pages\nrouter.get('/oauth-test', healthController.oauthTestPage);\nrouter.get('/oauth-debug', healthController.oauthDebugTool);\n\n// AWS diagnostic route\nrouter.get('/aws-diagnostic', awsDiagnosticController.runAwsDiagnostic);\n\nmodule.exports = router;\n","module.exports = require(\"express\");","/**\n * API Rate Limiter\n *\n * Implements a token bucket algorithm for rate limiting Square API requests\n * to proactively avoid hitting rate limits.\n */\n\n// Token bucket configuration based on Square's limits\n// https://developer.squareup.com/docs/build-basics/rate-limiting\nconst DEFAULT_BUCKET_CONFIG = {\n  tokensPerInterval: 20, // Default tokens per interval (conservative)\n  intervalMs: 1000, // 1 second\n  bucketSize: 30, // Maximum tokens that can accumulate\n};\n\n// Store for different buckets (one per endpoint or category)\nconst buckets = new Map();\n\n/**\n * TokenBucket implementation for rate limiting\n */\nclass TokenBucket {\n  constructor(config = {}) {\n    this.tokens = config.bucketSize || DEFAULT_BUCKET_CONFIG.bucketSize;\n    this.tokensPerInterval = config.tokensPerInterval || DEFAULT_BUCKET_CONFIG.tokensPerInterval;\n    this.intervalMs = config.intervalMs || DEFAULT_BUCKET_CONFIG.intervalMs;\n    this.bucketSize = config.bucketSize || DEFAULT_BUCKET_CONFIG.bucketSize;\n    this.lastRefillTimestamp = Date.now();\n  }\n\n  /**\n   * Refill the bucket based on elapsed time\n   * @private\n   */\n  _refill() {\n    const now = Date.now();\n    const elapsedMs = now - this.lastRefillTimestamp;\n\n    if (elapsedMs > 0) {\n      // Calculate how many tokens to add based on elapsed time\n      const newTokens = (elapsedMs / this.intervalMs) * this.tokensPerInterval;\n\n      // Add tokens, but don't exceed bucket size\n      this.tokens = Math.min(this.bucketSize, this.tokens + newTokens);\n      this.lastRefillTimestamp = now;\n    }\n  }\n\n  /**\n   * Try to consume tokens\n   * @param {number} count - Number of tokens to consume (default: 1)\n   * @returns {boolean} - Whether tokens were successfully consumed\n   */\n  tryConsume(count = 1) {\n    this._refill();\n\n    if (this.tokens >= count) {\n      this.tokens -= count;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Calculate wait time until enough tokens are available\n   * @param {number} count - Number of tokens needed\n   * @returns {number} - Estimated wait time in milliseconds\n   */\n  getWaitTimeMs(count = 1) {\n    this._refill();\n\n    if (this.tokens >= count) {\n      return 0;\n    }\n\n    // Calculate how many more tokens we need\n    const tokensNeeded = count - this.tokens;\n\n    // Calculate how long it will take to get those tokens\n    return (tokensNeeded / this.tokensPerInterval) * this.intervalMs;\n  }\n}\n\n/**\n * Get or create a token bucket for an endpoint\n * @param {string} endpoint - Endpoint identifier\n * @param {Object} config - Optional configuration overrides\n * @returns {TokenBucket} - The token bucket\n */\nfunction getBucket(endpoint, config = {}) {\n  if (!buckets.has(endpoint)) {\n    buckets.set(\n      endpoint,\n      new TokenBucket({\n        ...DEFAULT_BUCKET_CONFIG,\n        ...config,\n      })\n    );\n  }\n\n  return buckets.get(endpoint);\n}\n\n/**\n * Try to acquire permission to make an API request\n * @param {string} endpoint - Endpoint identifier\n * @param {number} cost - Cost of the request in tokens (default: 1)\n * @returns {boolean} - Whether the request is allowed\n */\nfunction tryAcquire(endpoint, cost = 1) {\n  const bucket = getBucket(endpoint);\n  return bucket.tryConsume(cost);\n}\n\n/**\n * Wait until a request can be made\n * @param {string} endpoint - Endpoint identifier\n * @param {number} cost - Cost of the request in tokens (default: 1)\n * @returns {Promise<void>} - Promise that resolves when the request can be made\n */\nasync function acquire(endpoint, cost = 1) {\n  const bucket = getBucket(endpoint);\n\n  if (bucket.tryConsume(cost)) {\n    return;\n  }\n\n  // Wait for the required time\n  const waitTimeMs = bucket.getWaitTimeMs(cost);\n\n  if (waitTimeMs > 0) {\n    console.log(`Rate limiting: Waiting ${waitTimeMs}ms before making request to ${endpoint}`);\n    await new Promise(resolve => setTimeout(resolve, waitTimeMs));\n\n    // Consume tokens after waiting\n    bucket.tryConsume(cost);\n  }\n}\n\n/**\n * Wrap a function with rate limiting\n * @param {Function} fn - Function to wrap\n * @param {string} endpoint - Endpoint identifier\n * @param {number} cost - Cost of the request in tokens (default: 1)\n * @returns {Function} - Rate-limited function\n */\nfunction rateLimit(fn, endpoint, cost = 1) {\n  return async (...args) => {\n    await acquire(endpoint, cost);\n    return fn(...args);\n  };\n}\n\n/**\n * Configure a specific bucket\n * @param {string} endpoint - Endpoint identifier\n * @param {Object} config - Configuration\n */\nfunction configureBucket(endpoint, config) {\n  buckets.set(\n    endpoint,\n    new TokenBucket({\n      ...DEFAULT_BUCKET_CONFIG,\n      ...config,\n    })\n  );\n}\n\n// Export the API\nmodule.exports = {\n  tryAcquire,\n  acquire,\n  rateLimit,\n  configureBucket,\n  DEFAULT_BUCKET_CONFIG,\n};\n","module.exports = require(\"serverless-http\");","/**\n * Error Handling Utilities\n * Standardized error handling for API requests\n * Enhanced with Node.js 22 Error Cause support\n */\n\n/**\n * Create an enhanced error with cause for better error tracking\n * This utilizes the Node.js 22 Error Cause feature\n *\n * @param {string} message - Human-readable error message\n * @param {Error} cause - Original error that caused this error\n * @param {Object} additionalProps - Additional properties to add to the error\n * @returns {Error} Enhanced error object\n */\nfunction createErrorWithCause(message, cause, additionalProps = {}) {\n  // Create error with cause (Node.js 22 feature)\n  const error = new Error(message, { cause });\n\n  // Add additional properties\n  if (additionalProps) {\n    Object.assign(error, additionalProps);\n  }\n\n  return error;\n}\n\n/**\n * Safe JSON serialization that handles BigInt values by converting them to strings\n * @param {Object} data - The data to serialize\n * @returns {Object} - Safely serializable object\n */\nfunction safeSerialize(data) {\n  if (data === null || data === undefined) {\n    return data;\n  }\n\n  try {\n    // First convert to JSON string, handling BigInt, then parse back to object\n    return JSON.parse(\n      JSON.stringify(data, (_, value) => (typeof value === 'bigint' ? value.toString() : value))\n    );\n  } catch (error) {\n    console.error('Error in safeSerialize:', error);\n    // If serialization fails, do a manual traversal\n    if (typeof data === 'object') {\n      const result = Array.isArray(data) ? [] : {};\n      for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n          const value = data[key];\n          if (typeof value === 'bigint') {\n            result[key] = value.toString();\n          } else if (typeof value === 'object' && value !== null) {\n            result[key] = safeSerialize(value);\n          } else {\n            result[key] = value;\n          }\n        }\n      }\n      return result;\n    }\n    return data;\n  }\n}\n\n/**\n * Handle Square API errors in a standardized way\n * Enhanced with Error Cause for better error tracking\n *\n * @param {Object} error - Square API error object\n * @param {string} defaultMessage - Default error message\n * @returns {Object} Standardized error response\n */\nfunction handleSquareError(error, defaultMessage = 'An error occurred') {\n  console.error('Square API Error:', error);\n\n  // Extract cause if available (Node.js 22 feature)\n  const originalError = error.cause || error;\n\n  // Default error response\n  const errorResponse = {\n    success: false,\n    error: {\n      message: defaultMessage,\n      code: 'UNKNOWN_ERROR',\n      details: [],\n    },\n  };\n\n  // Check if it's a SquareError from the SDK\n  if (originalError.name === 'SquareError') {\n    errorResponse.error.message = originalError.message;\n    errorResponse.error.code = originalError.code || 'SQUARE_SDK_ERROR';\n    errorResponse.error.details = originalError.errors || [];\n    if (originalError.statusCode) {\n      errorResponse.statusCode = originalError.statusCode;\n    }\n    return errorResponse;\n  }\n\n  // Check if it's a Square API error with errors array\n  if (originalError.errors && Array.isArray(originalError.errors)) {\n    errorResponse.error.details = originalError.errors.map(e => ({\n      code: e.code || 'UNKNOWN_ERROR',\n      detail: e.detail || e.message || 'Unknown error',\n      field: e.field || null,\n    }));\n\n    // Use the first error's message if available\n    if (originalError.errors[0]?.detail) {\n      errorResponse.error.message = originalError.errors[0].detail;\n    }\n\n    // Use the first error's code if available\n    if (originalError.errors[0]?.code) {\n      errorResponse.error.code = originalError.errors[0].code;\n    }\n  } else if (originalError.response?.data?.errors) {\n    // Handle Axios-wrapped Square errors\n    const squareErrors = originalError.response.data.errors;\n    errorResponse.error.details = squareErrors.map(e => ({\n      code: e.code || 'UNKNOWN_ERROR',\n      detail: e.detail || e.message || 'Unknown error',\n      field: e.field || null,\n    }));\n\n    if (squareErrors[0]?.detail) {\n      errorResponse.error.message = squareErrors[0].detail;\n    }\n\n    if (squareErrors[0]?.code) {\n      errorResponse.error.code = squareErrors[0].code;\n    }\n  } else if (originalError.details) {\n    // Handle enhanced errors from our retry mechanism\n    errorResponse.error.details = originalError.details;\n    errorResponse.error.message = originalError.message;\n    errorResponse.error.code = originalError.code || 'UNKNOWN_ERROR';\n  } else if (originalError.message) {\n    // Handle standard Error objects\n    errorResponse.error.message = originalError.message;\n\n    // Use the error code if available\n    if (originalError.code) {\n      errorResponse.error.code = originalError.code;\n    } else {\n      // Otherwise infer from message\n      if (\n        originalError.message.includes('Authentication') ||\n        originalError.message.includes('Unauthorized')\n      ) {\n        errorResponse.error.code = 'AUTHENTICATION_ERROR';\n      } else if (originalError.message.includes('Rate limit')) {\n        errorResponse.error.code = 'RATE_LIMIT_ERROR';\n      } else if (originalError.message.includes('Timeout')) {\n        errorResponse.error.code = 'TIMEOUT_ERROR';\n      } else if (originalError.message.includes('Network')) {\n        errorResponse.error.code = 'NETWORK_ERROR';\n      }\n    }\n  }\n\n  // Include retry information if available\n  if (originalError.retries !== undefined) {\n    errorResponse.error.retries = originalError.retries;\n    if (originalError.retries > 0) {\n      errorResponse.error.message += ` (after ${originalError.retries} retries)`;\n    }\n  }\n\n  // Map HTTP status code to error code\n  if (originalError.statusCode || originalError.response?.status) {\n    const statusCode = originalError.statusCode || originalError.response?.status;\n\n    // Add status code to response\n    errorResponse.statusCode = statusCode;\n\n    // Set appropriate error code based on status\n    switch (statusCode) {\n      case 401:\n        errorResponse.error.code = 'AUTHENTICATION_ERROR';\n        errorResponse.error.message =\n          'Authentication failed. Please reconnect your Square account.';\n        break;\n      case 403:\n        errorResponse.error.code = 'PERMISSION_ERROR';\n        errorResponse.error.message = 'You do not have permission to perform this action.';\n        break;\n      case 404:\n        errorResponse.error.code = 'NOT_FOUND';\n        errorResponse.error.message = 'The requested resource was not found.';\n        break;\n      case 429:\n        errorResponse.error.code = 'RATE_LIMIT_ERROR';\n        errorResponse.error.message = 'Rate limit exceeded. Please try again later.';\n        // Add retry-after if available\n        if (originalError.response?.headers?.['retry-after']) {\n          errorResponse.error.retryAfter = parseInt(\n            originalError.response.headers['retry-after'],\n            10\n          );\n        }\n        break;\n      case 400:\n        if (\n          originalError.code === 'INVALID_REQUEST_ERROR' ||\n          originalError.message.includes('validation')\n        ) {\n          errorResponse.error.code = 'VALIDATION_ERROR';\n          errorResponse.error.message = 'Invalid request: ' + originalError.message;\n        }\n        break;\n      case 500:\n      case 502:\n      case 503:\n      case 504:\n        errorResponse.error.code = 'SERVER_ERROR';\n        errorResponse.error.message =\n          'Square API is currently unavailable. Please try again later.';\n        break;\n    }\n  }\n\n  return errorResponse;\n}\n\n/**\n * Create a standardized API response\n * @param {boolean} success - Whether the operation was successful\n * @param {Object} data - Response data\n * @param {string} message - Success or error message\n * @returns {Object} Standardized API response\n */\nfunction createApiResponse(success, data = null, message = null) {\n  const response = { success };\n\n  if (success && data) {\n    // For success responses, include data directly in the response\n    // Ensure BigInt values are properly serialized\n    const safeData = safeSerialize(data);\n    Object.assign(response, safeData);\n    if (message) {\n      response.message = message;\n    }\n  } else if (!success) {\n    // For error responses, include error details\n    response.error = {\n      message: message || 'An error occurred',\n      code: data?.code || 'UNKNOWN_ERROR',\n      details: safeSerialize(data?.details) || [],\n    };\n  }\n\n  return response;\n}\n\nmodule.exports = {\n  handleSquareError,\n  createApiResponse,\n  safeSerialize,\n  createErrorWithCause,\n};\n","/**\n * Location API Routes\n * Endpoints for Square location management\n */\nconst express = require('express');\nconst router = express.Router();\nconst { protect } = require('../middleware/auth');\nconst locationService = require('../services/location');\n\n/**\n * @route GET /api/locations\n * @desc List all locations for the authenticated merchant\n * @access Private\n */\nrouter.get('/', protect, async (req, res) => {\n  try {\n    const result = await locationService.listLocations(req.user.squareAccessToken);\n    res.json(result);\n  } catch (error) {\n    console.error('Error retrieving locations:', error);\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || 'Failed to get locations',\n      error: error.details || error.toString(),\n    });\n  }\n});\n\nmodule.exports = router;\n","module.exports = require(\"@aws-sdk/client-secrets-manager\");","const express = require('express');\nconst jwt = require('jsonwebtoken');\nconst User = require('../models/user');\nconst { getSquareClient } = require('../services/square');\nconst squareService = require('../services/square');\n\n/**\n * Middleware to protect routes\n * Verifies JWT token and attaches user to request\n */\nconst protect = (req, res, next) => {\n  console.log('Auth middleware invoked for path:', req.path);\n  authenticate(req, res, next);\n};\n\n/**\n * Middleware to handle Square OAuth token expiration\n * Should be used after protect middleware\n */\nasync function refreshSquareTokenIfNeeded(req, res, next) {\n  try {\n    const user = req.user;\n\n    // Check if user has Square connection\n    if (!user.square_access_token || !user.square_token_expires_at) {\n      return next();\n    }\n\n    // Check if token is expired or about to expire (within 1 hour)\n    const tokenExpiresAt = new Date(user.square_token_expires_at).getTime();\n    const now = Date.now();\n    const oneHourInMs = 60 * 60 * 1000;\n\n    if (tokenExpiresAt - now < oneHourInMs) {\n      // Token is expired or about to expire, refresh it\n\n      try {\n        const refreshToken = user.square_refresh_token;\n\n        if (!refreshToken) {\n          // No refresh token, user needs to re-authenticate\n          return res.status(401).json({\n            error: 'Square authorization expired',\n            squareAuthRequired: true,\n          });\n        }\n\n        // Use Square service to refresh token\n        const response = await squareService.refreshToken(refreshToken);\n\n        // Update user with new tokens\n        const updatedUser = await User.update(user.id, {\n          square_access_token: response.access_token,\n          square_refresh_token: response.refresh_token,\n          square_token_expires_at: new Date(Date.now() + response.expires_in * 1000).toISOString(),\n        });\n\n        // Update request user\n        req.user = updatedUser;\n      } catch (error) {\n        console.error('Error refreshing Square token:', error);\n        return res.status(401).json({\n          error: 'Failed to refresh Square authorization',\n          squareAuthRequired: true,\n        });\n      }\n    }\n\n    next();\n  } catch (error) {\n    console.error('Square token refresh error:', error);\n    res.status(500).json({ error: 'Server error' });\n  }\n}\n\n/**\n * Authenticate the incoming request\n * @param {Object} req - Express request object\n * @param {Object} res - Express response object\n * @param {Function} next - Express next function\n */\nconst authenticate = async (req, res, next) => {\n  try {\n    console.log('Authenticating request for', req.path);\n\n    // Get the authorization header - use lowercase consistently for Node.js 22 compatibility\n    // Headers in Node.js 22 are normalized to lowercase\n    let authHeader = req.headers.authorization;\n\n    // Check for header using request.get() method for Express compatibility\n    if (!authHeader && req.get) {\n      authHeader = req.get('Authorization');\n    }\n\n    // Check if we have a header\n    console.log('Authorization header found:', !!authHeader);\n\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      console.log('Missing or invalid authorization header');\n      return res.status(401).json({\n        success: false,\n        message: 'Authentication failed - Missing or invalid authorization header',\n      });\n    }\n\n    // Extract token\n    const token = authHeader.split(' ')[1];\n    if (!token) {\n      console.log('Empty token provided');\n      return res.status(401).json({\n        success: false,\n        message: 'Authentication failed - Empty token',\n      });\n    }\n\n    try {\n      // Initialize Square client with the token\n      console.log('Validating Square access token...');\n\n      // Use squareService.getMerchantInfo() instead of direct client call\n      const merchantInfo = await squareService.getMerchantInfo(token);\n\n      if (!merchantInfo || !merchantInfo.id) {\n        console.error('Auth failed: Invalid Square response', {\n          hasMerchant: !!merchantInfo,\n          hasMerchantId: merchantInfo && !!merchantInfo.id,\n        });\n        return res.status(401).json({\n          success: false,\n          message: 'Authentication failed - Invalid merchant data',\n        });\n      }\n\n      // Add the user info to the request object\n      req.user = {\n        merchantId: merchantInfo.id,\n        squareAccessToken: token,\n        businessName: merchantInfo.businessName || 'Unknown',\n        countryCode: merchantInfo.country,\n        languageCode: merchantInfo.language,\n      };\n\n      console.log('Auth successful:', {\n        merchantId: merchantInfo.id,\n        businessName: req.user.businessName,\n        path: req.path,\n      });\n\n      next();\n    } catch (error) {\n      console.error('Authentication error:', error);\n      return res.status(401).json({\n        success: false,\n        message: 'Authentication failed - ' + (error.message || 'Invalid token'),\n      });\n    }\n  } catch (error) {\n    console.error('Unexpected auth error:', error);\n    return res.status(500).json({\n      success: false,\n      message: 'Server error during authentication',\n    });\n  }\n};\n\nmodule.exports = {\n  protect,\n  refreshSquareTokenIfNeeded,\n  authenticate,\n};\n","const { DynamoDBClient } = require('@aws-sdk/client-dynamodb');\nconst {\n  DynamoDBDocumentClient,\n  GetCommand,\n  PutCommand,\n  UpdateCommand,\n  DeleteCommand,\n} = require('@aws-sdk/lib-dynamodb');\nconst { v4: uuidv4 } = require('uuid');\nconst jwt = require('jsonwebtoken');\n\n// Configure AWS DynamoDB client\nconst client = new DynamoDBClient({\n  maxAttempts: 3,\n  requestTimeout: 3000,\n  region: process.env.AWS_REGION,\n});\n\nconst dynamoDb = DynamoDBDocumentClient.from(client);\nconst usersTable = process.env.USERS_TABLE;\n\n/**\n * User Service for DynamoDB\n */\nconst UserService = {\n  /**\n   * Get user by id\n   * @param {string} id - User ID\n   */\n  async getById(id) {\n    const params = {\n      TableName: usersTable,\n      Key: { id },\n    };\n\n    const result = await dynamoDb.send(new GetCommand(params));\n    return result.Item;\n  },\n\n  /**\n   * Create a new user\n   * @param {Object} user - User data\n   */\n  async create(user) {\n    const timestamp = new Date().toISOString();\n    const newUser = {\n      ...user,\n      createdAt: timestamp,\n      updatedAt: timestamp,\n    };\n\n    const params = {\n      TableName: usersTable,\n      Item: newUser,\n    };\n\n    await dynamoDb.send(new PutCommand(params));\n    return newUser;\n  },\n\n  /**\n   * Update a user\n   * @param {string} id - User ID\n   * @param {Object} updates - Fields to update\n   */\n  async update(id, updates) {\n    const timestamp = new Date().toISOString();\n\n    // Build update expression and attribute values\n    let updateExpression = 'SET updatedAt = :updatedAt';\n    const expressionAttributeValues = {\n      ':updatedAt': timestamp,\n    };\n\n    // Add each update field to the expression\n    Object.keys(updates).forEach((key, index) => {\n      if (key !== 'id') {\n        // Don't update the primary key\n        const attributeName = `:attr${index}`;\n        updateExpression += `, ${key} = ${attributeName}`;\n        expressionAttributeValues[attributeName] = updates[key];\n      }\n    });\n\n    const params = {\n      TableName: usersTable,\n      Key: { id },\n      UpdateExpression: updateExpression,\n      ExpressionAttributeValues: expressionAttributeValues,\n      ReturnValues: 'ALL_NEW',\n    };\n\n    const result = await dynamoDb.send(new UpdateCommand(params));\n    return result.Attributes;\n  },\n\n  /**\n   * Delete a user\n   * @param {string} id - User ID\n   */\n  async delete(id) {\n    const params = {\n      TableName: usersTable,\n      Key: { id },\n    };\n\n    return dynamoDb.send(new DeleteCommand(params));\n  },\n};\n\nmodule.exports = UserService;\n","module.exports = require(\"@aws-sdk/lib-dynamodb\");","module.exports = require(\"@aws-sdk/client-lambda\");","module.exports = require(\"square\");","const cors = require('cors');\n\n// Define allowed origins\nconst allowedOrigins = [\n  // Expo AuthSession origins\n  'https://auth.expo.io',\n  'https://auth.expo.io/@joylabs',\n  'exp://exp.host/@joylabs',\n  // Mobile app schemes\n  'joylabs://',\n  'exp://',\n  // Development origins\n  ...(process.env.NODE_ENV !== 'production'\n    ? [\n        'http://localhost:3000',\n        'http://localhost:19006',\n        'http://localhost:19000',\n        'http://localhost:19001',\n        'http://127.0.0.1:3000',\n        'exp://localhost:19000',\n        'exp://127.0.0.1:19000',\n      ]\n    : []),\n].filter(Boolean);\n\n// Enhanced CORS middleware for both web and Expo AuthSession\nconst configureCors = () => {\n  return cors({\n    origin: (origin, callback) => {\n      // Allow requests with no origin (like mobile apps or Postman)\n      if (!origin) {\n        return callback(null, true);\n      }\n\n      // Log the origin for debugging\n      console.log('Incoming request origin:', origin);\n\n      // Check if the origin starts with any allowed origin\n      const isAllowed = allowedOrigins.some(allowed => origin.startsWith(allowed));\n\n      if (isAllowed) {\n        console.log(`Origin ${origin} is allowed`);\n        callback(null, true);\n      } else {\n        console.warn(`Origin ${origin} not in allowed list`);\n        callback(new Error('Not allowed by CORS'));\n      }\n    },\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n    allowedHeaders: [\n      'Content-Type',\n      'Authorization',\n      'X-Requested-With',\n      'Accept',\n      'Origin',\n      'User-Agent',\n      'Cookie',\n      'Square-Signature',\n    ],\n    exposedHeaders: ['Set-Cookie'],\n    credentials: true,\n    maxAge: 86400, // 24 hours\n    preflightContinue: false,\n    optionsSuccessStatus: 204,\n  });\n};\n\n// Special CORS for auth routes (Expo AuthSession)\nconst authCors = () => {\n  return (req, res, next) => {\n    try {\n      // Log details for debugging\n      console.log('Auth CORS middleware:', {\n        path: req.path,\n        method: req.method,\n        origin: req.headers.origin || 'No origin',\n        host: req.headers.host,\n      });\n\n      const origin = req.headers.origin;\n\n      // For Expo AuthSession requests, allow the origin\n      if (\n        origin &&\n        (origin.startsWith('https://auth.expo.io') ||\n          origin.startsWith('exp://') ||\n          origin.startsWith('joylabs://'))\n      ) {\n        console.log(`Expo AuthSession origin detected: ${origin}`);\n        res.header('Access-Control-Allow-Origin', origin);\n      } else {\n        // For other origins, check against allowedOrigins\n        const isAllowed = allowedOrigins.some(allowed => origin && origin.startsWith(allowed));\n\n        if (isAllowed) {\n          res.header('Access-Control-Allow-Origin', origin);\n        } else {\n          // Default to API_BASE_URL if origin not allowed\n          res.header('Access-Control-Allow-Origin', process.env.API_BASE_URL);\n        }\n      }\n\n      // Set other CORS headers\n      res.header('Access-Control-Allow-Credentials', 'true');\n      res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n      res.header(\n        'Access-Control-Allow-Headers',\n        'Content-Type, Authorization, X-Requested-With, Accept, User-Agent, Origin, Cookie, Square-Signature'\n      );\n      res.header('Access-Control-Expose-Headers', 'Set-Cookie');\n\n      // Handle preflight requests\n      if (req.method === 'OPTIONS') {\n        console.log('Handling OPTIONS request for auth route:', req.path);\n        res.header('Access-Control-Max-Age', '86400');\n        return res.status(204).end();\n      }\n\n      next();\n    } catch (error) {\n      console.error('Auth CORS error:', error);\n      next(error);\n    }\n  };\n};\n\nmodule.exports = configureCors;\nmodule.exports.authCors = authCors;\n","module.exports = require(\"cors\");","module.exports = require(\"connect-dynamodb\");","const { DynamoDBClient } = require('@aws-sdk/client-dynamodb');\nconst { DynamoDBDocumentClient, ScanCommand, ListTablesCommand } = require('@aws-sdk/lib-dynamodb');\n\n/**\n * Basic health check endpoint\n */\nfunction checkHealth(req, res) {\n  res.json({\n    status: 'ok',\n    timestamp: new Date().toISOString(),\n    environment: process.env.NODE_ENV,\n    message: 'API is up and running',\n  });\n}\n\n/**\n * Detailed health check with AWS services status\n */\nasync function checkDetailedHealth(req, res) {\n  try {\n    const results = {\n      api: {\n        status: 'ok',\n        timestamp: new Date().toISOString(),\n        environment: process.env.NODE_ENV,\n      },\n      dynamoDB: { status: 'checking' },\n      square: {\n        config: {\n          applicationId: process.env.SQUARE_APPLICATION_ID ? 'configured' : 'missing',\n          environment: process.env.SQUARE_ENVIRONMENT || 'not set',\n        },\n      },\n      env: {\n        region: process.env.AWS_REGION || 'not set',\n        apiBaseUrl: process.env.API_BASE_URL || 'not set',\n      },\n    };\n\n    // Check DynamoDB connection\n    const client =\n      process.env.IS_OFFLINE === 'true'\n        ? new DynamoDBClient({\n            region: 'localhost',\n            endpoint: 'http://localhost:8000',\n          })\n        : new DynamoDBClient({ region: process.env.AWS_REGION });\n\n    const dynamoDb = DynamoDBDocumentClient.from(client);\n\n    try {\n      // List tables to check connection\n      if (process.env.IS_OFFLINE === 'true') {\n        // For local DynamoDB, let's check if we can access the tables\n        const USERS_TABLE = process.env.USERS_TABLE;\n        const params = {\n          TableName: USERS_TABLE,\n          Limit: 1,\n        };\n        await dynamoDb.send(new ScanCommand(params));\n        results.dynamoDB = { status: 'ok', message: 'Connected to local DynamoDB' };\n      } else {\n        // For AWS DynamoDB, check the service\n        const tables = await dynamoDb.send(new ListTablesCommand({}));\n        results.dynamoDB = {\n          status: 'ok',\n          message: 'Connected to AWS DynamoDB',\n          tables: tables.TableNames.filter(table => table.includes('joylabs')),\n        };\n      }\n    } catch (error) {\n      results.dynamoDB = {\n        status: 'error',\n        message: `Failed to connect to DynamoDB: ${error.message}`,\n      };\n    }\n\n    // Check Square API configuration\n    if (process.env.SQUARE_APPLICATION_ID && process.env.SQUARE_APPLICATION_SECRET) {\n      results.square.status = 'configured';\n\n      // Add OAuth URL for testing\n      const squareService = require('../services/square');\n      const testState = 'test-state-parameter';\n      results.square.testOAuthUrl = squareService.getAuthorizationUrl(testState);\n    } else {\n      results.square.status = 'not configured';\n    }\n\n    res.json(results);\n  } catch (error) {\n    console.error('Health check error:', error);\n    res.status(500).json({\n      status: 'error',\n      message: error.message,\n    });\n  }\n}\n\n/**\n * Test page with links to test OAuth flow\n */\nfunction renderTestPage(req, res) {\n  const squareService = require('../services/square');\n  const testState = 'test-state-parameter';\n  const squareOAuthUrl = squareService.getAuthorizationUrl(testState);\n\n  // Get the base URL for links\n  const isLocalhost = req.get('host').includes('localhost');\n  const baseUrl = isLocalhost\n    ? process.env.API_BASE_URL\n    : process.env.API_PROD_URL || req.protocol + '://' + req.get('host');\n\n  // Ensure we show the correct environment\n  const squareEnv = process.env.SQUARE_ENVIRONMENT || 'sandbox';\n  const squareEnvDisplay = squareEnv === 'production' ? 'Production' : 'Sandbox';\n\n  res.send(`\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>JoyLabs Backend Test Page</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <style>\n          body { \n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n          }\n          .card {\n            background: #fff;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            padding: 20px;\n            margin: 20px 0;\n          }\n          h1 { color: #4CAF50; }\n          h2 { margin-top: 30px; }\n          .button {\n            background: #4CAF50;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 4px;\n            cursor: pointer;\n            text-decoration: none;\n            display: inline-block;\n            margin: 10px 0;\n          }\n          .button.aws {\n            background: #FF9900;\n          }\n          .info {\n            background: #f5f5f5;\n            padding: 15px;\n            border-radius: 4px;\n            margin: 15px 0;\n          }\n          .env-var {\n            display: flex;\n            margin-bottom: 5px;\n          }\n          .env-var .key {\n            font-weight: bold;\n            min-width: 200px;\n          }\n          .env-var .value {\n            font-family: monospace;\n          }\n          .good { color: #4CAF50; }\n          .bad { color: #F44336; }\n        </style>\n      </head>\n      <body>\n        <h1>JoyLabs Backend Test Page</h1>\n        \n        <div class=\"card\">\n          <h2>Environment Information</h2>\n          <div class=\"info\">\n            <div class=\"env-var\">\n              <div class=\"key\">Environment:</div>\n              <div class=\"value\">${process.env.NODE_ENV || 'not set'}</div>\n            </div>\n            <div class=\"env-var\">\n              <div class=\"key\">API Base URL:</div>\n              <div class=\"value\">${baseUrl}</div>\n            </div>\n            <div class=\"env-var\">\n              <div class=\"key\">AWS Region:</div>\n              <div class=\"value\">${process.env.AWS_REGION || 'not set'}</div>\n            </div>\n            <div class=\"env-var\">\n              <div class=\"key\">Running Offline:</div>\n              <div class=\"value\">${process.env.IS_OFFLINE === 'true' ? 'Yes' : 'No'}</div>\n            </div>\n            <div class=\"env-var\">\n              <div class=\"key\">Square Environment:</div>\n              <div class=\"value\">${squareEnvDisplay}</div>\n            </div>\n            <div class=\"env-var\">\n              <div class=\"key\">Square Application ID:</div>\n              <div class=\"value\">${process.env.SQUARE_APPLICATION_ID ? '✓ Configured' : '✗ Not configured'}</div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"card\">\n          <h2>API Health Checks</h2>\n          <p>Click the buttons below to check the health status of your API</p>\n          <a href=\"${baseUrl}/api/health\" class=\"button\">Basic Health Check</a>\n          <a href=\"${baseUrl}/api/health/detailed\" class=\"button\">Detailed Health Check</a>\n          <a href=\"${baseUrl}/api/health/aws-diagnostic\" class=\"button aws\">AWS Diagnostic Tool</a>\n        </div>\n        \n        <div class=\"card\">\n          <h2>Square OAuth Testing</h2>\n          <p>Click the button below to test the Square OAuth flow</p>\n          <a href=\"${squareOAuthUrl}\" class=\"button\">Test Square OAuth</a>\n          <p class=\"info\">\n            This will redirect you to Square's authentication page. After authenticating, \n            you'll be redirected back to this application with an authentication token.\n          </p>\n        </div>\n\n        <div class=\"card\">\n          <h2>AWS Deployment</h2>\n          <p>Follow these steps to deploy your backend:</p>\n          <ol>\n            <li>Configure AWS credentials (already done if you're seeing this page)</li>\n            <li>Run <code>serverless deploy</code> to deploy to AWS</li>\n            <li>After deployment, update your .env file with the new API Gateway URL</li>\n            <li>Update your Square Developer Dashboard with the new callback URL</li>\n          </ol>\n          <a href=\"${baseUrl}/api/health/aws-diagnostic\" class=\"button aws\">Run AWS Diagnostic</a>\n        </div>\n\n        <div class=\"card\">\n          <h2>Documentation</h2>\n          <p>API Documentation and Square OAuth Integration</p>\n          <a href=\"https://developer.squareup.com/docs/oauth-api/overview\" target=\"_blank\" class=\"button\">Square OAuth Docs</a>\n          <a href=\"https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/\" target=\"_blank\" class=\"button\">Serverless Docs</a>\n        </div>\n      </body>\n    </html>\n  `);\n}\n\n/**\n * OAuth Test Page\n */\nfunction oauthTestPage(req, res) {\n  res.send(`\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>OAuth Test Page</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <style>\n          body { \n            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n          }\n          .card {\n            background: #fff;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            padding: 20px;\n            margin: 20px 0;\n            overflow: hidden;\n          }\n          button, .button {\n            background: #4285f4;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 4px;\n            font-size: 16px;\n            cursor: pointer;\n            text-decoration: none;\n            display: inline-block;\n            margin: 5px 0;\n          }\n          button:hover, .button:hover {\n            background: #2b6fc5;\n          }\n          h1, h2 { margin-top: 0; }\n          .env-info {\n            background: #e8f5e9;\n            padding: 10px;\n            border-radius: 4px;\n            margin: 10px 0;\n          }\n          .warning {\n            background: #fff3e0;\n            padding: 10px;\n            border-radius: 4px;\n            margin: 10px 0;\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"card\">\n          <h1>Square OAuth Test</h1>\n          \n          <div class=\"env-info\">\n            <strong>Environment:</strong> ${process.env.NODE_ENV}<br>\n            <strong>Square Environment:</strong> ${process.env.SQUARE_ENVIRONMENT}<br>\n            <strong>Redirect URL:</strong> ${process.env.SQUARE_REDIRECT_URL}\n          </div>\n          \n          <div class=\"warning\">\n            <strong>Note:</strong> Each OAuth attempt will generate a unique state parameter for security.\n            The state parameter is stored temporarily and validated when Square redirects back to your application.\n          </div>\n          \n          <h2>Start OAuth Flow</h2>\n          <p>Click the button below to start the Square OAuth flow:</p>\n          <a href=\"/api/auth/square\" class=\"button\">Start OAuth Flow</a>\n        </div>\n      </body>\n    </html>\n  `);\n}\n\n/**\n * OAuth debug and test tool\n */\nconst oauthDebugTool = (req, res) => {\n  res.send(`\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset=\"utf-8\">\n        <title>OAuth Debug Tool</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <style>\n          body { \n            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n            line-height: 1.6;\n            color: #333;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            background: #f5f5f7;\n          }\n          .card {\n            background: #fff;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            padding: 20px;\n            margin: 20px 0;\n          }\n          h1, h2, h3 { color: #333; margin-top: 0; }\n          pre {\n            background: #f5f5f5;\n            padding: 15px;\n            border-radius: 4px;\n            overflow-x: auto;\n            white-space: pre-wrap;\n            word-break: break-all;\n          }\n          .code {\n            font-family: monospace;\n            background: #f5f5f5;\n            padding: 15px;\n            border-radius: 4px;\n            overflow-x: auto;\n          }\n          .button {\n            background: #4285f4;\n            color: white;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 4px;\n            cursor: pointer;\n            text-decoration: none;\n            display: inline-block;\n            margin: 5px 5px 5px 0;\n            font-size: 14px;\n          }\n          .button.red { background: #ea4335; }\n          .button.green { background: #34a853; }\n          .button.yellow { background: #fbbc05; }\n          input[type=\"text\"] {\n            padding: 8px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            width: 100%;\n            margin-bottom: 10px;\n            font-family: monospace;\n          }\n          .tool-description {\n            color: #666;\n            font-size: 14px;\n            margin-bottom: 15px;\n          }\n          table {\n            width: 100%;\n            border-collapse: collapse;\n            margin: 20px 0;\n          }\n          table, th, td {\n            border: 1px solid #ddd;\n          }\n          th, td {\n            padding: 10px;\n            text-align: left;\n          }\n          th {\n            background-color: #f5f5f5;\n          }\n          #resultContainer {\n            display: none;\n            margin-top: 20px;\n          }\n        </style>\n      </head>\n      <body>\n        <div class=\"card\">\n          <h1>Square OAuth Debug Tool</h1>\n          <p class=\"tool-description\">\n            This tool helps diagnose OAuth issues with Square integration.\n            It provides detailed information about the OAuth process and helps troubleshoot common problems.\n          </p>\n        </div>\n\n        <div class=\"card\">\n          <h2>Environment Information</h2>\n          <table>\n            <tr>\n              <th>Setting</th>\n              <th>Value</th>\n            </tr>\n            <tr>\n              <td>Node Environment</td>\n              <td>${process.env.NODE_ENV || 'not set'}</td>\n            </tr>\n            <tr>\n              <td>Square Environment</td>\n              <td>${process.env.SQUARE_ENVIRONMENT || 'not set'}</td>\n            </tr>\n            <tr>\n              <td>API Base URL</td>\n              <td>${process.env.API_BASE_URL || 'not set'}</td>\n            </tr>\n            <tr>\n              <td>Square Application ID</td>\n              <td>${process.env.SQUARE_APPLICATION_ID ? '✓ Configured' : '✗ Not configured'}</td>\n            </tr>\n            <tr>\n              <td>Session Support</td>\n              <td>${req.session ? '✓ Enabled' : '✗ Disabled'}</td>\n            </tr>\n            <tr>\n              <td>User Agent</td>\n              <td>${req.headers['user-agent'] || 'not available'}</td>\n            </tr>\n          </table>\n        </div>\n\n        <div class=\"card\">\n          <h2>Cookie Debug</h2>\n          <div class=\"tool-description\">\n            Your current cookies:\n          </div>\n          <pre>${JSON.stringify(req.cookies, null, 2) || 'No cookies found'}</pre>\n          \n          <div class=\"tool-description\">\n            Test cookie functionality:\n          </div>\n          <button id=\"setCookieBtn\" class=\"button green\">Set Test Cookie</button>\n          <button id=\"getCookieBtn\" class=\"button\">Check Test Cookie</button>\n          <button id=\"clearCookieBtn\" class=\"button red\">Clear Test Cookie</button>\n        </div>\n        \n        <div class=\"card\">\n          <h2>OAuth Test Tools</h2>\n          \n          <div class=\"tool-description\">\n            <strong>1. Test OAuth Initialization</strong> - Generates state and PKCE parameters\n          </div>\n          <button id=\"testOAuthInitBtn\" class=\"button\">Test OAuth Init</button>\n          \n          <div class=\"tool-description\">\n            <strong>2. Test Direct Callback</strong> - Bypasses Square authorization\n          </div>\n          <a href=\"/api/auth/square/test-callback\" class=\"button yellow\">Simulate Callback</a>\n          \n          <div class=\"tool-description\">\n            <strong>3. Full OAuth Flow</strong> - Complete OAuth process\n          </div>\n          <a href=\"/api/auth/square?state=test-state-parameter\" class=\"button green\">Start OAuth Flow</a>\n        </div>\n        \n        <div class=\"card\">\n          <h2>Manual Callback Test</h2>\n          <div class=\"tool-description\">\n            Simulate a callback with custom parameters:\n          </div>\n          <form id=\"callbackForm\">\n            <label for=\"codeInput\">Authorization Code:</label>\n            <input type=\"text\" id=\"codeInput\" value=\"test_auth_code\" />\n            \n            <label for=\"stateInput\">State Parameter:</label>\n            <input type=\"text\" id=\"stateInput\" value=\"test-state-parameter\" />\n            \n            <button type=\"submit\" class=\"button yellow\">Send Callback</button>\n          </form>\n        </div>\n        \n        <div id=\"resultContainer\" class=\"card\">\n          <h2>Result</h2>\n          <div id=\"resultOutput\" class=\"code\"></div>\n        </div>\n\n        <script>\n          // Cookie test functions\n          document.getElementById('setCookieBtn').addEventListener('click', () => {\n            document.cookie = \"oauth_test_cookie=test-value; path=/; max-age=3600\";\n            alert(\"Test cookie set!\");\n          });\n          \n          document.getElementById('getCookieBtn').addEventListener('click', () => {\n            const cookies = document.cookie.split(';')\n              .map(c => c.trim())\n              .filter(c => c.startsWith('oauth_test_cookie='));\n            \n            if (cookies.length > 0) {\n              alert(\"Test cookie found: \" + cookies[0]);\n            } else {\n              alert(\"Test cookie not found!\");\n            }\n          });\n          \n          document.getElementById('clearCookieBtn').addEventListener('click', () => {\n            document.cookie = \"oauth_test_cookie=; path=/; max-age=0\";\n            alert(\"Test cookie cleared!\");\n          });\n          \n          // OAuth init test\n          document.getElementById('testOAuthInitBtn').addEventListener('click', async () => {\n            try {\n              const response = await fetch('/api/auth/square/mobile-init');\n              const data = await response.json();\n              \n              const resultContainer = document.getElementById('resultContainer');\n              const resultOutput = document.getElementById('resultOutput');\n              \n              resultOutput.textContent = JSON.stringify(data, null, 2);\n              resultContainer.style.display = 'block';\n              \n              // Scroll to result\n              resultContainer.scrollIntoView({ behavior: 'smooth' });\n            } catch (error) {\n              alert(\"Error: \" + error.message);\n            }\n          });\n          \n          // Manual callback test\n          document.getElementById('callbackForm').addEventListener('submit', async (e) => {\n            e.preventDefault();\n            \n            const code = document.getElementById('codeInput').value;\n            const state = document.getElementById('stateInput').value;\n            \n            if (!code || !state) {\n              alert(\"Please provide both code and state parameters\");\n              return;\n            }\n            \n            const url = '/api/auth/square/callback?code=' + encodeURIComponent(code) + '&state=' + encodeURIComponent(state);\n            \n            try {\n              window.location.href = url;\n            } catch (error) {\n              alert(\"Error: \" + error.message);\n            }\n          });\n        </script>\n      </body>\n    </html>\n  `);\n};\n\n// Export all controller functions\nmodule.exports = {\n  checkHealth,\n  checkDetailedHealth,\n  renderTestPage,\n  oauthTestPage,\n  oauthDebugTool,\n};\n","/**\n * Request validation middleware\n * Validates request parameters, query, and body against defined schemas\n */\n\n/**\n * Generate validation middleware from schema\n * @param {Object} schema - Validation schema with body, query, params objects\n * @returns {Function} Express middleware function\n */\nfunction validateRequest(schema) {\n  return (req, res, next) => {\n    const errors = {};\n\n    // Function to validate a section of the request\n    const validateSection = (section, data) => {\n      const sectionErrors = {};\n\n      if (!schema[section]) {\n        return null; // No schema for this section\n      }\n\n      // Check each field in the schema\n      Object.keys(schema[section]).forEach(field => {\n        const fieldSchema = schema[section][field];\n        const value = data[field];\n\n        // Check if required field is missing\n        if (fieldSchema.required && (value === undefined || value === null || value === '')) {\n          sectionErrors[field] = `${field} is required`;\n          return;\n        }\n\n        // Skip validation if field is not provided and not required\n        if (value === undefined || value === null) {\n          return;\n        }\n\n        // Validate field type\n        if (fieldSchema.type) {\n          const typeErrors = validateType(value, fieldSchema.type, field);\n          if (typeErrors) {\n            sectionErrors[field] = typeErrors;\n            return;\n          }\n        }\n\n        // Validate enum values\n        if (fieldSchema.enum && !fieldSchema.enum.includes(value)) {\n          sectionErrors[field] = `${field} must be one of: ${fieldSchema.enum.join(', ')}`;\n          return;\n        }\n\n        // Validate min/max for numbers\n        if (fieldSchema.type === 'number' || fieldSchema.type === 'integer') {\n          if (fieldSchema.min !== undefined && value < fieldSchema.min) {\n            sectionErrors[field] = `${field} must be at least ${fieldSchema.min}`;\n          }\n          if (fieldSchema.max !== undefined && value > fieldSchema.max) {\n            sectionErrors[field] = `${field} must be at most ${fieldSchema.max}`;\n          }\n        }\n\n        // Validate string length\n        if (fieldSchema.type === 'string') {\n          if (fieldSchema.minLength !== undefined && value.length < fieldSchema.minLength) {\n            sectionErrors[field] = `${field} must be at least ${fieldSchema.minLength} characters`;\n          }\n          if (fieldSchema.maxLength !== undefined && value.length > fieldSchema.maxLength) {\n            sectionErrors[field] = `${field} must be at most ${fieldSchema.maxLength} characters`;\n          }\n        }\n\n        // Validate array length\n        if (fieldSchema.type === 'array') {\n          if (fieldSchema.minItems !== undefined && value.length < fieldSchema.minItems) {\n            sectionErrors[field] = `${field} must have at least ${fieldSchema.minItems} items`;\n          }\n          if (fieldSchema.maxItems !== undefined && value.length > fieldSchema.maxItems) {\n            sectionErrors[field] = `${field} must have at most ${fieldSchema.maxItems} items`;\n          }\n        }\n\n        // Validate regex pattern\n        if (fieldSchema.pattern && !new RegExp(fieldSchema.pattern).test(value)) {\n          sectionErrors[field] = `${field} does not match required pattern`;\n        }\n\n        // Custom validation function\n        if (fieldSchema.validate && typeof fieldSchema.validate === 'function') {\n          const customError = fieldSchema.validate(value);\n          if (customError) {\n            sectionErrors[field] = customError;\n          }\n        }\n      });\n\n      return Object.keys(sectionErrors).length > 0 ? sectionErrors : null;\n    };\n\n    // Validate body if schema has body definition\n    const bodyErrors = validateSection('body', req.body);\n    if (bodyErrors) {\n      errors.body = bodyErrors;\n    }\n\n    // Validate query parameters if schema has query definition\n    const queryErrors = validateSection('query', req.query);\n    if (queryErrors) {\n      errors.query = queryErrors;\n    }\n\n    // Validate URL parameters if schema has params definition\n    const paramsErrors = validateSection('params', req.params);\n    if (paramsErrors) {\n      errors.params = paramsErrors;\n    }\n\n    // If any errors, return 400 with error details\n    if (Object.keys(errors).length > 0) {\n      return res.status(400).json({\n        success: false,\n        message: 'Validation error',\n        errors,\n      });\n    }\n\n    // All validations passed\n    next();\n  };\n}\n\n/**\n * Validate value against expected type\n * @param {any} value - Value to validate\n * @param {string} type - Expected type\n * @param {string} field - Field name for error message\n * @returns {string|null} Error message or null if valid\n */\nfunction validateType(value, type, field) {\n  switch (type) {\n    case 'string':\n      if (typeof value !== 'string') {\n        return `${field} must be a string`;\n      }\n      break;\n    case 'number':\n      if (typeof value !== 'number' || isNaN(value)) {\n        // Try to convert string to number if possible\n        if (typeof value === 'string' && !isNaN(Number(value))) {\n          break; // Valid number string\n        }\n        return `${field} must be a number`;\n      }\n      break;\n    case 'integer':\n      if (!Number.isInteger(Number(value))) {\n        return `${field} must be an integer`;\n      }\n      break;\n    case 'boolean':\n      if (typeof value !== 'boolean' && value !== 'true' && value !== 'false') {\n        return `${field} must be a boolean`;\n      }\n      break;\n    case 'array':\n      if (!Array.isArray(value)) {\n        // Try to parse JSON string array\n        if (typeof value === 'string') {\n          try {\n            const parsed = JSON.parse(value);\n            if (Array.isArray(parsed)) {\n              break; // Valid array JSON string\n            }\n          } catch {\n            // Invalid JSON string\n          }\n        }\n        return `${field} must be an array`;\n      }\n      break;\n    case 'object':\n      if (typeof value !== 'object' || value === null || Array.isArray(value)) {\n        // Try to parse JSON string object\n        if (typeof value === 'string') {\n          try {\n            const parsed = JSON.parse(value);\n            if (typeof parsed === 'object' && parsed !== null && !Array.isArray(parsed)) {\n              break; // Valid object JSON string\n            }\n          } catch {\n            // Invalid JSON string\n          }\n        }\n        return `${field} must be an object`;\n      }\n      break;\n    default:\n      return `Unknown type: ${type}`;\n  }\n\n  return null; // No error\n}\n\nmodule.exports = {\n  validateRequest,\n};\n","/**\n * Catalog Item Model\n * Provides methods to manage Square catalog item IDs in the local database\n */\nconst { DynamoDBClient } = require('@aws-sdk/client-dynamodb');\nconst {\n  DynamoDBDocumentClient,\n  PutCommand,\n  GetCommand,\n  ScanCommand,\n  UpdateCommand,\n  DeleteCommand,\n} = require('@aws-sdk/lib-dynamodb');\nconst uuid = require('uuid');\n\n// Configure DynamoDB client\nconst client = new DynamoDBClient({\n  maxAttempts: 3,\n  requestTimeout: 3000,\n});\nconst dynamoDb = DynamoDBDocumentClient.from(client);\n\n// Table name from environment variable\nconst tableName = process.env.CATALOG_ITEMS_TABLE || 'joylabs-backend-api-v3-catalog-items-v3';\n\n/**\n * Create a new catalog item reference\n * @param {Object} data - Catalog item data\n * @returns {Promise<Object>} Created catalog item\n */\nasync function create(data) {\n  const timestamp = new Date().toISOString();\n  const id = data.id || uuid.v4();\n\n  const item = {\n    id,\n    square_catalog_id: data.square_catalog_id,\n    name: data.name,\n    type: data.type || 'ITEM',\n    created_at: timestamp,\n    updated_at: timestamp,\n    merchant_id: data.merchant_id,\n    status: data.status || 'ACTIVE',\n    metadata: data.metadata || {},\n  };\n\n  const params = {\n    TableName: tableName,\n    Item: item,\n  };\n\n  console.log(`Creating catalog item reference: ${id}`);\n\n  try {\n    await dynamoDb.send(new PutCommand(params));\n    return item;\n  } catch (error) {\n    console.error('Error creating catalog item reference:', error);\n    throw error;\n  }\n}\n\n/**\n * Get a catalog item reference by ID\n * @param {string} id - Catalog item ID\n * @returns {Promise<Object|null>} Catalog item or null if not found\n */\nasync function findById(id) {\n  const params = {\n    TableName: tableName,\n    Key: { id },\n  };\n\n  console.log(`Getting catalog item reference by ID: ${id}`);\n\n  try {\n    const result = await dynamoDb.send(new GetCommand(params));\n    return result.Item || null;\n  } catch (error) {\n    console.error(`Error getting catalog item reference ${id}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Get a catalog item reference by Square catalog ID\n * @param {string} squareCatalogId - Square catalog ID\n * @returns {Promise<Object|null>} Catalog item or null if not found\n */\nasync function findBySquareCatalogId(squareCatalogId) {\n  const params = {\n    TableName: tableName,\n    FilterExpression: 'square_catalog_id = :squareCatalogId',\n    ExpressionAttributeValues: {\n      ':squareCatalogId': squareCatalogId,\n    },\n  };\n\n  console.log(`Getting catalog item reference by Square catalog ID: ${squareCatalogId}`);\n\n  try {\n    const result = await dynamoDb.send(new ScanCommand(params));\n    return result.Items[0] || null;\n  } catch (error) {\n    console.error(\n      `Error getting catalog item reference by Square catalog ID ${squareCatalogId}:`,\n      error\n    );\n    throw error;\n  }\n}\n\n/**\n * Update a catalog item reference\n * @param {string} id - Catalog item ID\n * @param {Object} updates - Properties to update\n * @returns {Promise<Object>} Updated catalog item\n */\nasync function update(id, updates) {\n  const timestamp = new Date().toISOString();\n\n  let updateExpression = 'SET updated_at = :timestamp';\n  const expressionAttributeValues = {\n    ':timestamp': timestamp,\n  };\n\n  Object.keys(updates).forEach(key => {\n    if (key !== 'id') {\n      updateExpression += `, ${key} = :${key}`;\n      expressionAttributeValues[`:${key}`] = updates[key];\n    }\n  });\n\n  const params = {\n    TableName: tableName,\n    Key: { id },\n    UpdateExpression: updateExpression,\n    ExpressionAttributeValues: expressionAttributeValues,\n    ReturnValues: 'ALL_NEW',\n  };\n\n  console.log(`Updating catalog item reference: ${id}`);\n\n  try {\n    const result = await dynamoDb.send(new UpdateCommand(params));\n    return result.Attributes;\n  } catch (error) {\n    console.error(`Error updating catalog item reference ${id}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Delete a catalog item reference\n * @param {string} id - Catalog item ID\n * @returns {Promise<boolean>} Whether the deletion was successful\n */\nasync function remove(id) {\n  const params = {\n    TableName: tableName,\n    Key: { id },\n  };\n\n  console.log(`Deleting catalog item reference: ${id}`);\n\n  try {\n    await dynamoDb.send(new DeleteCommand(params));\n    return true;\n  } catch (error) {\n    console.error(`Error deleting catalog item reference ${id}:`, error);\n    throw error;\n  }\n}\n\n/**\n * List catalog item references\n * @param {Object} options - Query options\n * @returns {Promise<Array>} List of catalog items\n */\nasync function list(options = {}) {\n  const { limit = 100, startKey = null, merchantId = null } = options;\n\n  const params = {\n    TableName: tableName,\n    Limit: limit,\n  };\n\n  if (startKey) {\n    params.ExclusiveStartKey = { id: startKey };\n  }\n\n  if (merchantId) {\n    params.FilterExpression = 'merchant_id = :merchantId';\n    params.ExpressionAttributeValues = {\n      ':merchantId': merchantId,\n    };\n  }\n\n  console.log('Listing catalog item references');\n\n  try {\n    const result = await dynamoDb.send(new ScanCommand(params));\n    return {\n      items: result.Items || [],\n      lastEvaluatedKey: result.LastEvaluatedKey,\n      count: result.Count,\n    };\n  } catch (error) {\n    console.error('Error listing catalog item references:', error);\n    throw error;\n  }\n}\n\nmodule.exports = {\n  create,\n  findById,\n  findBySquareCatalogId,\n  update,\n  remove,\n  list,\n};\n","/**\n * Square Location Service\n * Provides methods to interact with Square Locations API\n */\nconst { getSquareClient } = require('./square');\nconst { handleSquareError } = require('../utils/errorHandling');\nconst squareService = require('./square');\n\n// Square API version configuration - centralized for easy updates\nconst SQUARE_API_VERSION = 'v2';\n// Square API header version - updated to latest available version\nconst SQUARE_API_HEADER_VERSION = '2025-03-19';\n\n/**\n * List all locations\n * @param {string} accessToken - Square access token\n * @returns {Promise<Object>} List of locations\n */\nasync function listLocations(accessToken) {\n  try {\n    console.log(`=== REQUEST BOUNDARY: listLocations (${SQUARE_API_VERSION}) START ===`);\n\n    // Check cache first\n    const cacheKey = `locations-${accessToken}`;\n    const cachedData = squareService.getCachedResponse(cacheKey, 'locations');\n    if (cachedData) {\n      console.log('Using cached locations data');\n      console.log('=== REQUEST BOUNDARY: listLocations END (Cached) ===');\n      return cachedData;\n    }\n\n    // Use executeSquareRequest to handle retries and errors\n    const result = await squareService.executeSquareRequest(\n      async client => {\n        console.log(\n          `Making listLocations call to Square ${SQUARE_API_VERSION} API with header version ${SQUARE_API_HEADER_VERSION}`\n        );\n        // Set the Square version in the client's configuration\n        client.agent.defaultHeaders['Square-Version'] = SQUARE_API_HEADER_VERSION;\n        return client.locations.listLocations();\n      },\n      accessToken,\n      'square-api'\n    );\n\n    console.log('=== REQUEST BOUNDARY: listLocations END ===');\n    console.log('Successfully retrieved locations:', {\n      count: result.result.locations?.length || 0,\n    });\n\n    const response = {\n      success: true,\n      locations: result.result.locations || [],\n    };\n\n    // Cache the result (locations don't change often)\n    squareService.cacheResponse(cacheKey, response, 'locations');\n\n    return response;\n  } catch (error) {\n    console.error('Error listing locations:', error);\n    return handleSquareError(error, 'Failed to list locations');\n  }\n}\n\nmodule.exports = {\n  listLocations,\n  SQUARE_API_VERSION,\n  SQUARE_API_HEADER_VERSION,\n};\n","/**\n * Square API Helper Utilities\n *\n * Contains functions for improved error handling, retry logic, and rate limiting\n * based on Square best practices.\n */\nconst { SquareError } = require('square');\nconst rateLimiter = require('./apiRateLimiter');\n\n// Default retry configuration based on Square recommendations\nconst DEFAULT_RETRY_CONFIG = {\n  numberOfRetries: 3, // How many times to retry a request\n  backoffFactor: 2, // Exponential backoff factor (doubles wait time)\n  retryInterval: 1000, // Initial wait time in ms (1 second)\n  maxRetryWaitTime: 60000, // Maximum wait time between retries (60 seconds)\n  statusCodesToRetry: [429, 500, 503], // Square API status codes to retry\n};\n\n// Cache for webhook signature key to avoid repeated retrieval\nlet webhookSignatureKey = null;\nlet webhookSignatureKeyExpiryTime = 0;\nconst WEBHOOK_SIG_KEY_TTL = 24 * 60 * 60 * 1000; // 24 hours\n\n/**\n * Execute a Square API request with automatic retries and exponential backoff\n *\n * @param {Function} requestFn - Function that takes a Square client and returns a promise\n * @param {Object} client - Square client instance\n * @param {Object} options - Optional configuration for retries\n * @param {boolean} options.useRateLimiter - Whether to use rate limiting\n * @param {string} options.endpoint - Endpoint identifier for rate limiting\n * @param {number} options.cost - Cost of the request in rate limiting tokens\n * @returns {Promise<Object>} - Square API response\n */\nasync function executeWithRetry(requestFn, client, options = {}) {\n  const config = {\n    ...DEFAULT_RETRY_CONFIG,\n    useRateLimiter: true,\n    endpoint: 'square-api',\n    cost: 1,\n    ...options,\n  };\n\n  let retries = 0;\n  let lastError = null;\n  let waitTime = config.retryInterval;\n\n  // Apply rate limiting if enabled\n  if (config.useRateLimiter) {\n    await rateLimiter.acquire(config.endpoint, config.cost);\n  }\n\n  while (retries <= config.numberOfRetries) {\n    try {\n      // If this isn't the first attempt, log that we're retrying\n      if (retries > 0) {\n        console.log(`Retry attempt ${retries}/${config.numberOfRetries} after ${waitTime}ms`);\n      }\n\n      // Execute the request function with the Square client\n      return await requestFn(client);\n    } catch (error) {\n      lastError = error;\n\n      // Determine if we should retry based on the error type\n      const shouldRetry = shouldRetryRequest(error, config);\n\n      if (!shouldRetry || retries >= config.numberOfRetries) {\n        // Log the final error with details\n        logApiError(error, retries);\n        throw enhanceError(error);\n      }\n\n      // Calculate wait time for next retry with exponential backoff\n      waitTime = calculateBackoff(retries, error, config);\n\n      // Log the error and that we're going to retry\n      console.warn(`Square API error (will retry): ${error.message}`, {\n        statusCode: error.statusCode || error.response?.status,\n        retryAttempt: retries + 1,\n        waitTime,\n      });\n\n      // Wait before next retry\n      await sleep(waitTime);\n\n      // Increment retry counter\n      retries++;\n\n      // Check rate limiter before retry if enabled\n      if (config.useRateLimiter) {\n        await rateLimiter.acquire(config.endpoint, config.cost);\n      }\n    }\n  }\n\n  // We should never reach here due to the throw in the catch block\n  // But just in case, throw the last error\n  throw lastError;\n}\n\n/**\n * Configure rate limiting for specific Square API endpoints\n * This should be called early in application initialization\n */\nfunction configureRateLimits() {\n  // Configure rate limits for different endpoint categories\n  // based on Square's documented limits\n\n  // Catalog API has a limit of 20 requests per second\n  rateLimiter.configureBucket('catalog-api', {\n    tokensPerInterval: 15, // Be conservative\n    intervalMs: 1000, // 1 second\n    bucketSize: 30,\n  });\n\n  // Customers API has a limit of 20 requests per second\n  rateLimiter.configureBucket('customers-api', {\n    tokensPerInterval: 15,\n    intervalMs: 1000,\n    bucketSize: 30,\n  });\n\n  // Orders API has a limit of 15 requests per second\n  rateLimiter.configureBucket('orders-api', {\n    tokensPerInterval: 10, // Be conservative\n    intervalMs: 1000,\n    bucketSize: 25,\n  });\n\n  // OAuth token endpoints are more restrictive\n  rateLimiter.configureBucket('oauth-api', {\n    tokensPerInterval: 5,\n    intervalMs: 1000,\n    bucketSize: 10,\n  });\n\n  // Default bucket for other APIs\n  rateLimiter.configureBucket('square-api', {\n    tokensPerInterval: 10,\n    intervalMs: 1000,\n    bucketSize: 20,\n  });\n}\n\n/**\n * Determine if a request should be retried based on the error type\n *\n * @param {Error} error - The error from a Square API request\n * @param {Object} config - Retry configuration\n * @returns {boolean} - Whether the request should be retried\n */\nfunction shouldRetryRequest(error, config) {\n  // Get status code from different possible locations\n  const statusCode = error.statusCode || error.response?.status;\n\n  // Check if it's a rate limit error (429)\n  if (statusCode === 429) {\n    return true;\n  }\n\n  // Check if it's another retriable status code\n  if (config.statusCodesToRetry.includes(statusCode)) {\n    return true;\n  }\n\n  // Check for network errors which may be transient\n  if (\n    error.code === 'ECONNRESET' ||\n    error.code === 'ETIMEDOUT' ||\n    error.code === 'ECONNREFUSED' ||\n    error.message.includes('network') ||\n    error.message.includes('timeout')\n  ) {\n    return true;\n  }\n\n  // Don't retry other types of errors\n  return false;\n}\n\n/**\n * Calculate the backoff time for a retry\n *\n * @param {number} retryCount - The current retry count\n * @param {Error} error - The error from a Square API request\n * @param {Object} config - Retry configuration\n * @returns {number} - The wait time in milliseconds\n */\nfunction calculateBackoff(retryCount, error, config) {\n  // Start with the base retry interval\n  let waitTime = config.retryInterval;\n\n  // Apply exponential backoff\n  waitTime = waitTime * Math.pow(config.backoffFactor, retryCount);\n\n  // If it's a rate limit error with a Retry-After header, use that value\n  if (error.statusCode === 429 && error.response?.headers?.['retry-after']) {\n    const retryAfterSec = parseInt(error.response.headers['retry-after'], 10);\n    if (!isNaN(retryAfterSec)) {\n      const retryAfterMs = retryAfterSec * 1000;\n      // Use the greater of the calculated backoff or the Retry-After header\n      waitTime = Math.max(waitTime, retryAfterMs);\n    }\n  }\n\n  // Ensure we don't exceed the maximum wait time\n  return Math.min(waitTime, config.maxRetryWaitTime);\n}\n\n/**\n * Enhance error object with additional context\n *\n * @param {Error} error - The error from a Square API request\n * @returns {Error} - Enhanced error with additional properties\n */\nfunction enhanceError(error) {\n  // If it's already a properly formed error with statusCode, no need to modify it\n  if (error.statusCode) {\n    return error;\n  }\n\n  // Add statusCode from response if available\n  if (error.response && error.response.status) {\n    error.statusCode = error.response.status;\n  } else {\n    // Default status code for unknown errors\n    error.statusCode = 500;\n  }\n\n  // Add error code if missing\n  if (!error.code) {\n    if (error.statusCode === 429) {\n      error.code = 'RATE_LIMIT_ERROR';\n    } else if (error.statusCode === 401 || error.statusCode === 403) {\n      error.code = 'AUTHENTICATION_ERROR';\n    } else if (error.statusCode === 404) {\n      error.code = 'NOT_FOUND_ERROR';\n    } else if (error.statusCode >= 500) {\n      error.code = 'SERVER_ERROR';\n    } else {\n      error.code = 'UNKNOWN_ERROR';\n    }\n  }\n\n  return error;\n}\n\n/**\n * Log details about a Square API error\n *\n * @param {Error} error - The error from a Square API request\n * @param {number} retries - Number of retries attempted\n */\nfunction logApiError(error, retries) {\n  console.error('Square API error:', {\n    message: error.message,\n    code: error.code || error.statusCode || 'UNKNOWN_ERROR',\n    statusCode: error.statusCode || error.response?.status || 500,\n    details: error.details || error.errors || [],\n    retries: retries || 0,\n  });\n}\n\n/**\n * Helper to create a delay\n *\n * @param {number} ms - Milliseconds to sleep\n * @returns {Promise} - Promise that resolves after the specified time\n */\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Get the webhook signature key from cache or retrieve it\n * This optimizes the webhook verification process by caching the key\n *\n * @param {Function} getCredentialsFn - Function to get credentials when needed\n * @returns {Promise<string>} - The webhook signature key\n */\nasync function getWebhookSignatureKey(getCredentialsFn) {\n  const now = Date.now();\n\n  // Return from cache if still valid\n  if (webhookSignatureKey && now < webhookSignatureKeyExpiryTime) {\n    return webhookSignatureKey;\n  }\n\n  // Get fresh credentials\n  try {\n    const credentials = await getCredentialsFn();\n\n    // Cache the signature key if present\n    if (credentials && credentials.webhookSignatureKey) {\n      webhookSignatureKey = credentials.webhookSignatureKey;\n      webhookSignatureKeyExpiryTime = now + WEBHOOK_SIG_KEY_TTL;\n      console.log('Cached webhook signature key for 24 hours');\n    } else {\n      console.warn('No webhook signature key found in credentials');\n      webhookSignatureKey = null;\n    }\n\n    return webhookSignatureKey;\n  } catch (error) {\n    console.error('Error retrieving webhook signature key:', error);\n    return null;\n  }\n}\n\n// Initialize rate limiting configuration\nconfigureRateLimits();\n\nmodule.exports = {\n  executeWithRetry,\n  configureRateLimits,\n  shouldRetryRequest,\n  calculateBackoff,\n  enhanceError,\n  logApiError,\n  sleep,\n  getWebhookSignatureKey,\n};\n","/**\n * Modern Fetch API Helpers for Node.js 22\n * Provides secure fetch helpers with enhanced error handling and timeout support\n */\n\nconst { createErrorWithCause } = require('./errorHandling');\n\n/**\n * Enhanced fetch wrapper with timeout and error handling\n *\n * @param {string} url - URL to fetch\n * @param {Object} options - Fetch options\n * @param {number} timeoutMs - Timeout in milliseconds\n * @returns {Promise<Response>} - Fetch response\n */\nasync function fetchWithTimeout(url, options = {}, timeoutMs = 5000) {\n  try {\n    // Create an AbortController with timeout\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n\n    // Add signal to options\n    const fetchOptions = {\n      ...options,\n      signal: controller.signal,\n    };\n\n    // Execute fetch\n    const response = await fetch(url, fetchOptions);\n\n    // Clear timeout\n    clearTimeout(timeoutId);\n\n    // Check for error responses\n    if (!response.ok) {\n      // Parse error response if possible\n      let errorData;\n      try {\n        errorData = await response.json();\n      } catch (e) {\n        errorData = { message: `HTTP Error ${response.status}` };\n      }\n\n      // Create error with HTTP status\n      const error = createErrorWithCause(\n        errorData.message || `HTTP Error ${response.status}`,\n        new Error(`HTTP ${response.status}`),\n        {\n          statusCode: response.status,\n          url,\n          data: errorData,\n        }\n      );\n\n      throw error;\n    }\n\n    return response;\n  } catch (error) {\n    // Handle abort error (timeout)\n    if (error.name === 'AbortError') {\n      throw createErrorWithCause(`Request timeout after ${timeoutMs}ms`, error, {\n        code: 'TIMEOUT_ERROR',\n        statusCode: 408,\n        url,\n      });\n    }\n\n    // Rethrow with enhanced information\n    throw createErrorWithCause(`Fetch error: ${error.message}`, error, {\n      code: 'FETCH_ERROR',\n      url,\n    });\n  }\n}\n\n/**\n * JSON fetch - fetches and parses JSON in one call\n *\n * @param {string} url - URL to fetch\n * @param {Object} options - Fetch options\n * @param {number} timeoutMs - Timeout in milliseconds\n * @returns {Promise<Object>} - Parsed JSON response\n */\nasync function fetchJson(url, options = {}, timeoutMs = 5000) {\n  const response = await fetchWithTimeout(url, options, timeoutMs);\n  return response.json();\n}\n\n/**\n * POST JSON data with proper headers\n *\n * @param {string} url - URL to post to\n * @param {Object} data - JSON data to post\n * @param {Object} options - Additional fetch options\n * @param {number} timeoutMs - Timeout in milliseconds\n * @returns {Promise<Object>} - Parsed JSON response\n */\nasync function postJson(url, data, options = {}, timeoutMs = 5000) {\n  const fetchOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    body: JSON.stringify(data),\n    ...options,\n  };\n\n  return fetchJson(url, fetchOptions, timeoutMs);\n}\n\nmodule.exports = {\n  fetchWithTimeout,\n  fetchJson,\n  postJson,\n};\n","/**\n * Get all categories\n */\nconst getCategories = (req, res) => {\n  res.json({ message: 'Get all categories - Coming soon' });\n};\n\n/**\n * Get category by ID\n */\nconst getCategoryById = (req, res) => {\n  res.json({ message: `Get category ${req.params.id} - Coming soon` });\n};\n\n/**\n * Create a new category\n */\nconst createCategory = (req, res) => {\n  res.json({ message: 'Create category - Coming soon' });\n};\n\n/**\n * Update a category\n */\nconst updateCategory = (req, res) => {\n  res.json({ message: `Update category ${req.params.id} - Coming soon` });\n};\n\n/**\n * Delete a category\n */\nconst deleteCategory = (req, res) => {\n  res.json({ message: `Delete category ${req.params.id} - Coming soon` });\n};\n\nmodule.exports = {\n  getCategories,\n  getCategoryById,\n  createCategory,\n  updateCategory,\n  deleteCategory,\n};\n","module.exports = require(\"jsonwebtoken\");","/**\n * Catalog API Routes\n * Endpoints for Square catalog management\n */\nconst express = require('express');\nconst router = express.Router();\nconst { protect } = require('../middleware/auth');\nconst { validateRequest } = require('../middleware/validation');\nconst catalogService = require('../services/catalog');\nconst CatalogItem = require('../models/CatalogItem');\n\n/**\n * @route GET /api/catalog/list\n * @desc List catalog items\n * @access Private\n */\nrouter.get('/list', protect, async (req, res) => {\n  try {\n    // Default limit increased to 1000, aligned with service layer cap.\n    // Types default remains ITEM,CATEGORY unless specified.\n    const { limit = 1000, types = 'ITEM,CATEGORY', cursor } = req.query;\n\n    // Remove the local DB lookup for full catalog sync via /list\n    // // First, check our database for stored items for this merchant\n    // const storedItems = await CatalogItem.list({\n    //   merchant_id: req.user.merchantId,\n    //   page: parseInt(page), // page is no longer used\n    //   limit: parseInt(limit),\n    // });\n\n    // Get items directly from Square using the service\n    const result = await catalogService.listCatalogItems(req.user.squareAccessToken, {\n      types: types.split(','),\n      limit: parseInt(limit),\n      cursor: cursor, // Pass cursor directly\n      // We can infer includeRelatedObjects/includeDeletedObjects if needed from query params too\n      // includeRelatedObjects: req.query.includeRelatedObjects === 'true',\n      // includeDeletedObjects: req.query.includeDeletedObjects === 'true',\n    });\n\n    // Remove local data enrichment for this route - focus on raw Square data for sync\n    // // If we have local data, enrich the Square results\n    // if (storedItems.items.length > 0) {\n    //   // ... enrichment logic removed ...\n    // }\n\n    res.json(result);\n  } catch (error) {\n    console.error('Error listing catalog items:', error);\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || 'Failed to list catalog items',\n      error: error.details || error.toString(),\n    });\n  }\n});\n\n/**\n * @route GET /api/catalog/item/:id\n * @desc Get a catalog item by ID\n * @access Private\n */\nrouter.get('/item/:id', protect, async (req, res) => {\n  try {\n    const { id } = req.params;\n\n    const result = await catalogService.getCatalogItem(req.user.squareAccessToken, id);\n\n    // Try to get local data\n    try {\n      const localData = await CatalogItem.findBySquareCatalogId(id);\n      if (localData) {\n        result.catalogObject.local_data = {\n          id: localData.id,\n          created_at: localData.created_at,\n          updated_at: localData.updated_at,\n          metadata: localData.metadata,\n        };\n      }\n    } catch (dbError) {\n      console.error('Error retrieving local catalog data:', dbError);\n    }\n\n    res.json(result);\n  } catch (error) {\n    console.error(`Error retrieving catalog item ${req.params.id}:`, error);\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || 'Failed to get catalog item',\n      error: error.details || error.toString(),\n    });\n  }\n});\n\n/**\n * Validate catalog item creation request\n */\nconst validateCatalogItemRequest = validateRequest({\n  body: {\n    type: {\n      type: 'string',\n      required: true,\n      enum: ['ITEM', 'CATEGORY', 'TAX', 'DISCOUNT', 'MODIFIER', 'MODIFIER_LIST', 'IMAGE'],\n    },\n    name: { type: 'string', required: true },\n    description: { type: 'string' },\n    abbreviation: { type: 'string' },\n    categoryId: { type: 'string' },\n    variations: { type: 'array' },\n    productType: {\n      type: 'string',\n      enum: ['REGULAR', 'APPOINTMENTS_SERVICE'],\n    },\n    // Tax specific fields\n    calculationPhase: {\n      type: 'string',\n      enum: ['TAX_SUBTOTAL_PHASE', 'TAX_TOTAL_PHASE'],\n    },\n    inclusionType: {\n      type: 'string',\n      enum: ['ADDITIVE', 'INCLUSIVE'],\n    },\n    percentage: { type: 'string' },\n    appliesToCustomAmounts: { type: 'boolean' },\n    enabled: { type: 'boolean' },\n    // Discount specific fields\n    discountType: {\n      type: 'string',\n      enum: ['FIXED_PERCENTAGE', 'FIXED_AMOUNT', 'VARIABLE_PERCENTAGE', 'VARIABLE_AMOUNT'],\n    },\n    amountMoney: {\n      type: 'object',\n      properties: {\n        amount: { type: 'number' },\n        currency: { type: 'string' },\n      },\n    },\n    pinRequired: { type: 'boolean' },\n    labelColor: { type: 'string' },\n    // Modifier list specific fields\n    selectionType: {\n      type: 'string',\n      enum: ['SINGLE', 'MULTIPLE'],\n    },\n    modifiers: { type: 'array' },\n    // Image specific fields\n    url: { type: 'string' },\n    caption: { type: 'string' },\n    // Common fields\n    imageIds: { type: 'array' },\n    idempotencyKey: { type: 'string' },\n  },\n});\n\n/**\n * @route POST /api/catalog/item\n * @desc Create or update a catalog item\n * @access Private\n */\nrouter.post('/item', protect, validateCatalogItemRequest, async (req, res) => {\n  try {\n    const result = await catalogService.createOrUpdateCatalogItem(\n      req.user.squareAccessToken,\n      req.body\n    );\n\n    res.json(result);\n  } catch (error) {\n    console.error('Error creating/updating catalog item:', error);\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || 'Failed to create/update catalog item',\n      error: error.details || error.toString(),\n    });\n  }\n});\n\n/**\n * @route DELETE /api/catalog/item/:id\n * @desc Delete a catalog item\n * @access Private\n */\nrouter.delete('/item/:id', protect, async (req, res) => {\n  try {\n    const { id } = req.params;\n\n    const result = await catalogService.deleteCatalogItem(req.user.squareAccessToken, id);\n\n    res.json(result);\n  } catch (error) {\n    console.error(`Error deleting catalog item ${req.params.id}:`, error);\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || 'Failed to delete catalog item',\n      error: error.details || error.toString(),\n    });\n  }\n});\n\n/**\n * @route POST /search\n * @desc Search catalog objects using Square-compatible params\n * @access Private\n */\nrouter.post('/search', protect, async (req, res) => {\n  try {\n    console.log('[REQUEST BOUNDARY: CATALOG SEARCH START]');\n    console.log('[ROUTES] Received catalog search request:', JSON.stringify(req.body, null, 2));\n\n    // Directly handle the empty query case - Defense in depth\n    let searchParams = { ...req.body };\n\n    // Check if query is missing or empty\n    if (\n      !searchParams.query ||\n      (typeof searchParams.query === 'object' && Object.keys(searchParams.query).length === 0)\n    ) {\n      console.log('[ROUTES] Empty query detected in handler, using default exact_query');\n      searchParams.query = {\n        exact_query: {\n          attribute_name: 'name',\n          attribute_value: '.', // Use a very common character to match almost everything\n        },\n      };\n    } else if (searchParams.query.text_query) {\n      // Special handling for text_query with incorrect format\n      if (searchParams.query.text_query.query !== undefined) {\n        // Frontend sent text_query with 'query' field instead of 'keywords' array\n        const queryText = searchParams.query.text_query.query;\n\n        if (queryText && queryText.trim() !== '') {\n          // If there's actual text, convert to proper keywords array format\n          console.log('[ROUTES] Converting text_query.query to keywords array');\n          searchParams.query.text_query = {\n            keywords: [queryText.trim()],\n          };\n        } else {\n          // Empty query text, use our reliable exact_query approach\n          console.log('[ROUTES] Empty text_query.query detected, using exact_query instead');\n          searchParams.query = {\n            exact_query: {\n              attribute_name: 'name',\n              attribute_value: '.',\n            },\n          };\n        }\n      } else if (\n        !searchParams.query.text_query.keywords ||\n        !Array.isArray(searchParams.query.text_query.keywords) ||\n        searchParams.query.text_query.keywords.length === 0\n      ) {\n        // Malformed text_query without keywords array or with empty array\n        console.log('[ROUTES] Malformed text_query detected, using exact_query instead');\n        searchParams.query = {\n          exact_query: {\n            attribute_name: 'name',\n            attribute_value: '.',\n          },\n        };\n      }\n    } else {\n      // Not using text_query, check other query types for validity\n      const validQueryTypes = [\n        'prefix_query',\n        'exact_query',\n        'sorted_attribute_query',\n        'text_query',\n        'item_query',\n        'item_variation_query',\n        'items_for_tax_query',\n        'items_for_modifier_list_query',\n        'items_for_item_options',\n      ];\n\n      const queryKeys = Object.keys(searchParams.query).filter(key =>\n        validQueryTypes.includes(key)\n      );\n\n      if (queryKeys.length === 0) {\n        console.log('[ROUTES] No valid query types found in request, using default exact_query');\n        searchParams.query = {\n          exact_query: {\n            attribute_name: 'name',\n            attribute_value: '.', // Use a very common character to match almost everything\n          },\n        };\n      }\n    }\n\n    console.log('[ROUTES] Modified search params:', JSON.stringify(searchParams, null, 2));\n\n    const result = await catalogService.searchCatalogItems(\n      req.user.squareAccessToken,\n      searchParams\n    );\n\n    console.log('[REQUEST BOUNDARY: CATALOG SEARCH END] Success:', result.success);\n    res.json(result);\n  } catch (error) {\n    console.error('[REQUEST BOUNDARY: CATALOG SEARCH END] Error:', error.message);\n    console.error('[ROUTES] Error searching catalog objects:', error);\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || 'Failed to search catalog objects',\n      error: error.details || error.toString(),\n    });\n  }\n});\n\n/**\n * @route POST /api/catalog/batch-retrieve\n * @desc Batch retrieve catalog objects\n * @access Private\n */\nrouter.post(\n  '/batch-retrieve',\n  protect,\n  validateRequest({\n    body: {\n      objectIds: { type: 'array', required: true },\n      includeRelatedObjects: { type: 'boolean' },\n    },\n  }),\n  async (req, res) => {\n    try {\n      const { objectIds, includeRelatedObjects = true } = req.body;\n\n      const result = await catalogService.batchRetrieveCatalogObjects(\n        req.user.squareAccessToken,\n        objectIds,\n        includeRelatedObjects\n      );\n\n      res.json(result);\n    } catch (error) {\n      console.error('Error batch retrieving catalog objects:', error);\n      res.status(error.statusCode || 500).json({\n        success: false,\n        message: error.message || 'Failed to batch retrieve catalog objects',\n        error: error.details || error.toString(),\n      });\n    }\n  }\n);\n\n/**\n * @route POST /api/catalog/batch-upsert\n * @desc Batch upsert catalog objects\n * @access Private\n */\nrouter.post(\n  '/batch-upsert',\n  protect,\n  validateRequest({\n    body: {\n      batches: {\n        type: 'array',\n        required: true,\n        items: {\n          type: 'object',\n          properties: {\n            objects: { type: 'array', required: true },\n          },\n        },\n      },\n    },\n  }),\n  async (req, res) => {\n    try {\n      const { batches } = req.body;\n\n      const result = await catalogService.batchUpsertCatalogObjects(\n        req.user.squareAccessToken,\n        batches\n      );\n\n      res.json(result);\n    } catch (error) {\n      console.error('Error batch upserting catalog objects:', error);\n      res.status(error.statusCode || 500).json({\n        success: false,\n        message: error.message || 'Failed to batch upsert catalog objects',\n        error: error.details || error.toString(),\n      });\n    }\n  }\n);\n\n/**\n * @route POST /api/catalog/batch-delete\n * @desc Batch delete catalog objects\n * @access Private\n */\nrouter.post(\n  '/batch-delete',\n  protect,\n  validateRequest({\n    body: {\n      objectIds: { type: 'array', required: true },\n    },\n  }),\n  async (req, res) => {\n    try {\n      const { objectIds } = req.body;\n\n      const result = await catalogService.batchDeleteCatalogObjects(\n        req.user.squareAccessToken,\n        objectIds\n      );\n\n      res.json(result);\n    } catch (error) {\n      console.error('Error batch deleting catalog objects:', error);\n      res.status(error.statusCode || 500).json({\n        success: false,\n        message: error.message || 'Failed to batch delete catalog objects',\n        error: error.details || error.toString(),\n      });\n    }\n  }\n);\n\n/**\n * @route POST /api/catalog/item/:id/modifier-lists\n * @desc Update item modifier lists\n * @access Private\n */\nrouter.post(\n  '/item/:id/modifier-lists',\n  protect,\n  validateRequest({\n    body: {\n      modifierListsToEnable: { type: 'array' },\n      modifierListsToDisable: { type: 'array' },\n    },\n  }),\n  async (req, res) => {\n    try {\n      const { id } = req.params;\n      const { modifierListsToEnable = [], modifierListsToDisable = [] } = req.body;\n\n      const result = await catalogService.updateItemModifierLists(\n        req.user.squareAccessToken,\n        id,\n        modifierListsToEnable,\n        modifierListsToDisable\n      );\n\n      res.json(result);\n    } catch (error) {\n      console.error(`Error updating modifier lists for item ${req.params.id}:`, error);\n      res.status(error.statusCode || 500).json({\n        success: false,\n        message: error.message || 'Failed to update item modifier lists',\n        error: error.details || error.toString(),\n      });\n    }\n  }\n);\n\n/**\n * @route POST /api/catalog/item/:id/taxes\n * @desc Update item taxes\n * @access Private\n */\nrouter.post(\n  '/item/:id/taxes',\n  protect,\n  validateRequest({\n    body: {\n      taxesToEnable: { type: 'array' },\n      taxesToDisable: { type: 'array' },\n    },\n  }),\n  async (req, res) => {\n    try {\n      const { id } = req.params;\n      const { taxesToEnable = [], taxesToDisable = [] } = req.body;\n\n      const result = await catalogService.updateItemTaxes(\n        req.user.squareAccessToken,\n        id,\n        taxesToEnable,\n        taxesToDisable\n      );\n\n      res.json(result);\n    } catch (error) {\n      console.error(`Error updating taxes for item ${req.params.id}:`, error);\n      res.status(error.statusCode || 500).json({\n        success: false,\n        message: error.message || 'Failed to update item taxes',\n        error: error.details || error.toString(),\n      });\n    }\n  }\n);\n\n/**\n * @route GET /categories\n * @desc Get all categories - convenience route that uses search\n * @access Private\n */\nrouter.get('/categories', protect, async (req, res) => {\n  try {\n    // Use the search endpoint with object_types set to CATEGORY\n    const result = await catalogService.searchCatalogItems(req.user.squareAccessToken, {\n      object_types: ['CATEGORY'],\n      limit: req.query.limit ? parseInt(req.query.limit) : 100,\n      cursor: req.query.cursor,\n      include_related_objects: req.query.include_related_objects === 'true',\n    });\n\n    res.json(result);\n  } catch (error) {\n    console.error('Error getting categories:', error);\n    res.status(error.statusCode || 500).json({\n      success: false,\n      message: error.message || 'Failed to get categories',\n      error: error.details || error.toString(),\n    });\n  }\n});\n\nmodule.exports = router;\n","module.exports = require(\"cookie-parser\");","module.exports = require(\"uuid\");","const express = require('express');\nconst router = express.Router();\nconst categoriesController = require('../controllers/categories');\n\n/**\n * @route   GET /api/categories\n * @desc    Get all categories\n * @access  Public\n */\nrouter.get('/', categoriesController.getCategories);\n\n/**\n * @route   GET /api/categories/:id\n * @desc    Get category by ID\n * @access  Public\n */\nrouter.get('/:id', categoriesController.getCategoryById);\n\n/**\n * @route   POST /api/categories\n * @desc    Create a new category\n * @access  Private\n */\nrouter.post('/', categoriesController.createCategory);\n\n/**\n * @route   PUT /api/categories/:id\n * @desc    Update a category\n * @access  Private\n */\nrouter.put('/:id', categoriesController.updateCategory);\n\n/**\n * @route   DELETE /api/categories/:id\n * @desc    Delete a category\n * @access  Private\n */\nrouter.delete('/:id', categoriesController.deleteCategory);\n\n// Temporary route for testing\nrouter.get('/test', (req, res) => {\n  res.json({ message: 'Categories API is working' });\n});\n\nmodule.exports = router;\n","module.exports = require(\"@aws-sdk/client-dynamodb\");","module.exports = require(\"axios\");","module.exports = require(\"express-session\");","const express = require('express');\nconst serverless = require('serverless-http');\nconst cors = require('cors');\nconst cookieParser = require('cookie-parser');\nconst session = require('express-session');\nconst DynamoDBStore = require('connect-dynamodb')(session);\nconst morgan = require('morgan');\nconst { DynamoDBClient } = require('@aws-sdk/client-dynamodb');\nconst { DynamoDBDocumentClient, PutCommand } = require('@aws-sdk/lib-dynamodb');\n\n// Constants\nconst STATES_TABLE = process.env.STATES_TABLE;\n\n// Custom CORS middleware\nconst configureCors = require('./middleware/cors');\n\n// Cache AWS clients for connection reuse\nlet dynamoDbClient = null;\nconst getDynamoDb = () => {\n  if (!dynamoDbClient) {\n    const client = new DynamoDBClient({\n      maxAttempts: 3,\n      requestTimeout: 3000,\n      region: process.env.AWS_REGION,\n    });\n    dynamoDbClient = DynamoDBDocumentClient.from(client);\n  }\n  return dynamoDbClient;\n};\n\n// Initialize express app\nconst app = express();\n\n// Basic middleware\napp.use(express.json({ limit: '10mb' }));\napp.use(express.urlencoded({ extended: true }));\napp.use(cookieParser());\n\n// Session middleware\nconst sessionConfig = {\n  store:\n    process.env.NODE_ENV === 'production'\n      ? new DynamoDBStore({\n          table: 'joylabs-sessions',\n          AWSConfigJSON: {\n            region: 'us-west-1',\n          },\n          reapInterval: 24 * 60 * 60 * 1000, // Cleanup expired sessions every 24 hours\n        })\n      : null,\n  secret: process.env.SESSION_SECRET || 'joylabs-session-secret-key-production',\n  resave: false,\n  saveUninitialized: false,\n  cookie: {\n    secure: process.env.NODE_ENV === 'production',\n    httpOnly: true,\n    sameSite: 'lax',\n    maxAge: 24 * 60 * 60 * 1000, // 24 hours\n  },\n};\n\napp.use(session(sessionConfig));\n\n// Apply CORS after session middleware\napp.use(configureCors());\n\n// Enhanced logging middleware for non-production environments\nif (process.env.NODE_ENV !== 'production') {\n  app.use(morgan('dev'));\n} else {\n  // For production - only log errors and important events\n  app.use(morgan('combined'));\n}\n\n// Cache-Control header middleware\napp.use((req, res, next) => {\n  // Add cache headers to GET requests to static endpoints\n  if (req.method === 'GET' && process.env.ENABLE_RESPONSE_CACHE === 'true') {\n    if (req.path.startsWith('/api/health') || req.path === '/') {\n      res.set('Cache-Control', 'public, max-age=300'); // 5 minutes\n    }\n  }\n  next();\n});\n\n// Import routes\nconst productsRoutes = require('./routes/products');\nconst categoriesRoutes = require('./routes/categories');\nconst authRoutes = require('./routes/auth');\nconst healthRoutes = require('./routes/health');\nconst catalogRoutes = require('./routes/catalog');\nconst locationRoutes = require('./routes/locations');\nconst merchantRoutes = require('./routes/merchant'); // Correct import\n\n// Performance monitoring middleware\napp.use((req, res, next) => {\n  req.startTime = Date.now();\n\n  // Track response time after request completes\n  res.on('finish', () => {\n    const duration = Date.now() - req.startTime;\n\n    // Log slow requests (over 500ms)\n    if (duration > 500) {\n      console.warn(`Slow request: ${req.method} ${req.originalUrl} took ${duration}ms`);\n    }\n  });\n\n  next();\n});\n\n// Routes\napp.use('/api/auth', authRoutes);\napp.use('/api/catalog', catalogRoutes);\napp.use('/api/health', healthRoutes); // This now includes /api/health/merchant/me temporarily\napp.use('/api/categories', categoriesRoutes);\napp.use('/api/products', productsRoutes);\napp.use('/api/locations', locationRoutes);\napp.use('/api/merchant', merchantRoutes); // Use correct path\n\n// Add request logging middleware\napp.use((req, res, next) => {\n  console.log('Incoming request:', {\n    method: req.method,\n    path: req.path,\n    headers: req.headers,\n    body: req.body,\n    query: req.query,\n  });\n  next();\n});\n\n// State registration endpoint\napp.post('/api/auth/register-state', async (req, res) => {\n  console.log('POST to register-state endpoint received:', {\n    headers: req.headers,\n    body: req.body,\n    tableName: STATES_TABLE,\n    region: process.env.AWS_REGION,\n  });\n\n  try {\n    const { state } = req.body;\n\n    if (!state) {\n      console.error('Missing state parameter');\n      return res.status(400).json({\n        error: 'Missing state parameter',\n      });\n    }\n\n    console.log('Preparing to store state in DynamoDB:', {\n      state: state.substring(0, 5) + '...' + state.substring(state.length - 5),\n      tableName: STATES_TABLE,\n    });\n\n    // Store state in DynamoDB with 10-minute TTL\n    const ttl = Math.floor(Date.now() / 1000) + 10 * 60; // Current time + 10 minutes in seconds\n    const params = {\n      TableName: STATES_TABLE,\n      Item: {\n        state: state,\n        timestamp: Date.now(),\n        used: false,\n        ttl: ttl,\n        redirectUrl: req.body.redirectUrl || '/auth/success',\n      },\n    };\n\n    console.log('Sending PutCommand to DynamoDB with params:', {\n      TableName: params.TableName,\n      Item: {\n        ...params.Item,\n        state:\n          params.Item.state.substring(0, 5) +\n          '...' +\n          params.Item.state.substring(params.Item.state.length - 5),\n      },\n    });\n\n    const dynamoDb = getDynamoDb();\n    const result = await dynamoDb.send(new PutCommand(params));\n\n    console.log('DynamoDB PutCommand result:', {\n      statusCode: result.$metadata.httpStatusCode,\n      requestId: result.$metadata.requestId,\n    });\n\n    console.log(\n      `State parameter '${state.substring(0, 5)}...${state.substring(state.length - 5)}' registered successfully`\n    );\n    return res.status(200).json({\n      success: true,\n      message: 'State parameter registered successfully',\n    });\n  } catch (error) {\n    console.error('Error registering state parameter:', {\n      error: error.message,\n      code: error.code,\n      name: error.name,\n      stack: error.stack,\n      region: process.env.AWS_REGION,\n      tableName: STATES_TABLE,\n    });\n    return res.status(500).json({\n      error: 'Failed to register state parameter',\n      details: process.env.NODE_ENV === 'development' ? error.message : undefined,\n    });\n  }\n});\n\n// Test page route\napp.get('/test', (req, res) => {\n  res.redirect('/api/health/test-page');\n});\n\n// OPTIONS preflight handling for all routes\napp.options('*', configureCors());\n\n// Home route\napp.get('/', (req, res) => {\n  res.json({\n    message: 'Welcome to the JoyLabs API',\n    links: {\n      health: '/api/health',\n      // test: '/api/test',\n      products: '/api/products',\n      categories: '/api/categories',\n      auth: '/api/auth',\n      catalog: '/api/catalog',\n      locations: '/api/locations',\n      merchant: '/api/merchant/me' // Correct path now\n    },\n  });\n});\n\n// Global error handler with better error classification and logging\napp.use((err, req, res, next) => {\n  console.error('Error:', err);\n  res.status(err.status || 500).json({\n    error: err.message || 'Internal server error',\n  });\n});\n\n// Export the serverless handler\nmodule.exports.handler = serverless(app);\n","module.exports = require(\"crypto\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(980);\n"],"names":["crypto","require","webcrypto","base64URLEncode","buffer","Buffer","from","toString","replace","base64URLEncodeLegacy","module","exports","generateCodeVerifier","async","array","Uint8Array","getRandomValues","generateCodeChallenge","codeVerifier","data","TextEncoder","encode","digest","subtle","generateCodeVerifierLegacy","randomBytes","generateCodeChallengeLegacy","verifier","createHash","update","router","Router","authMiddleware","squareService","generateOAuthUrl","exchangeCodeForToken","getMerchantInfo","getSquareClient","generateStateParam","createUser","findUserBySquareMerchantId","updateUser","DynamoDBClient","DynamoDBDocumentClient","PutCommand","GetCommand","UpdateCommand","SquareClient","global","codeVerifierStore","Map","oauthStates","dynamoDbClient","maxAttempts","requestTimeout","process","env","IS_OFFLINE","region","endpoint","docClient","post","req","res","request_id","code_verifier","body","console","log","hasRequestId","requestIdLength","length","hasCodeVerifier","codeVerifierLength","codeVerifierFirstChars","substring","codeVerifierLastChars","error","status","json","details","test","set","timestamp","Date","now","ttl","cleanupExpiredCodeVerifiers","count","entries","delete","success","undefined","get","state","Math","floor","params","TableName","STATES_TABLE","Item","used","redirectUrl","tableName","toISOString","result","send","statusCode","$metadata","httpStatusCode","requestId","cookie","httpOnly","secure","maxAge","sameSite","url","environment","has_cookie","redirect","code","app_callback","query","hasCode","hasError","headers","encodeURIComponent","getStateParams","Key","stateData","code_challenge","tokenResponse","updateParams","UpdateExpression","ExpressionAttributeValues","merchantInfo","getMerchantInfoWithFetch","access_token","fetchError","warn","message","sanitizedBusinessName","businessName","finalRedirectUrl","refresh_token","merchant_id","baseUrl","finalUrl","manuallyConstructed","business_name","dbError","credentials","getSquareCredentials","applicationId","Error","command","DYNAMODB_STATES_TABLE","createdAt","authUrl","URLSearchParams","client_id","response_type","scope","redirect_uri","SQUARE_REDIRECT_URL","SQUARE_ENVIRONMENT","SQUARE_APPLICATION_ID","SQUARE_APPLICATION_SECRET","includes","host","protocol","clientId","testState","session","oauthParams","html","toUpperCase","API_BASE_URL","authenticate","hasCodeChallenge","startsWith","codeChallenge","axios","SecretsManagerClient","GetSecretValueCommand","squareApiHelpers","webCrypto","fetchHelpers","createErrorWithCause","SQUARE_API_VERSION","SQUARE_API_HEADER_VERSION","squareClientCache","responseCache","CACHE_TTL_CONFIG","catalogCategories","catalogItems","locations","other","secretsClient","getCachedResponse","cacheKey","cacheType","has","cachedItem","expiry","cacheResponse","SQUARE_CREDENTIALS_SECRET","AWS_REGION","client","SecretId","response","JSON","parse","SecretString","applicationSecret","webhookSignatureKey","accessToken","token","SQUARE_ACCESS_TOKEN","userAgentDetail","timeout","getRedirectUrl","cachedData","authRetryConfig","numberOfRetries","statusCodesToRetry","useRateLimiter","executeWithRetry","retrieveLocation","location","merchant","id","merchantId","name","country","languageCode","currency","directApiCall","method","Authorization","businessEmail","business_email","language","language_code","code_challenge_method","codeVerifierPreview","requestBody","grant_type","client_secret","tokenRetryConfig","backoffFactor","cost","exchangeToken","enhancedError","error_description","tokenData","expires_at","tokenError","generateRandomString","characters","i","charAt","random","verifyWebhookSignature","signature","signatureKey","getWebhookSignatureKey","hmac","createHmac","calculatedSignature","providedSignatureLength","calculatedSignatureLength","match","providedSignatureStart","calculatedSignatureStart","timingSafeEqual","a","b","bufferA","bufferB","logApiError","detail","stack","executeSquareRequest","requestFn","refreshAccessToken","refreshToken","tokenRefreshConfig","refreshTokenFn","requiresReauthentication","Accept","merchantData","fetchJson","locationResponse","mainLocation","find","loc","address","phoneNumber","phone_number","sdkError","protect","handleApiError","user","squareAccessToken","STSClient","GetCallerIdentityCommand","ListTablesCommand","LambdaClient","ListFunctionsCommand","APIGatewayClient","GetRestApisCommand","runAwsDiagnostic","results","tests","stsClient","identity","account","Account","userId","UserId","arn","Arn","dynamoDb","tables","requiredTables","PRODUCTS_TABLE","CATEGORIES_TABLE","USERS_TABLE","existingTables","TableNames","missingTables","filter","table","dynamodb","totalTables","availableTables","lambda","functions","serviceName","serviceFunctions","Functions","fn","FunctionName","map","runtime","Runtime","memory","MemorySize","Timeout","apiGateway","apis","serviceApis","items","api","createdDate","API_PROD_URL","format","path","join","handleSquareError","CatalogItem","uuid","squareErrorHandler","listCatalogItems","options","stringify","optionsHash","types","limit","cursor","includeRelatedObjects","includeDeletedObjects","typesArray","Array","isArray","split","requestedLimit","parseInt","min","max","agent","defaultHeaders","catalog","listCatalog","objects","getCatalogItem","itemId","retrieveCatalogObject","catalogObject","object","relatedObjects","createOrUpdateCatalogItem","itemData","idempotencyKey","v4","prepareCatalogObject","type","presentAtAllLocations","version","description","abbreviation","productType","categoryId","taxIds","variations","imageIds","isArchived","availableOnline","availableForPickup","availableElectronically","skipModifierScreen","sortName","modifierListInfo","categories","categoryData","taxData","calculationPhase","inclusionType","percentage","appliesToCustomAmounts","enabled","discountData","discountType","amountMoney","pinRequired","labelColor","modifierListData","selectionType","modifiers","modifierData","priceMoney","ordinal","modifierListId","imageData","caption","request","upsertCatalogObject","create","square_catalog_id","metadata","deleteCatalogItem","deleteCatalogObject","localItem","findBySquareCatalogId","remove","deletedObjectId","searchCatalogItems","searchParams","searchRequest","objectTypes","object_types","include_deleted_objects","include_related_objects","beginTime","begin_time","includeCategoryPathToRoot","include_category_path_to_root","Object","keys","searchCatalogObjects","batchRetrieveCatalogObjects","objectIds","batchUpsertCatalogObjects","batches","catalogApi","updatedAt","batchDeleteCatalogObjects","deletedObjectIds","localItemPromises","objectId","validLocalItems","Promise","all","item","batchRemove","itemIds","updateItemModifierLists","modifierListsToEnable","modifierListsToDisable","updateItemTaxes","taxesToEnable","taxesToDisable","getCatalogCategories","range_query","attribute_name","attribute_max_value","attribute_min_value","objects_array_length","objects_present","related_objects_present","related_objects","cursor_present","fallbackRequest","exact_query","attribute_value","fallbackResponse","errors","listCatalogCategories","slice","obj","category_data","healthController","awsDiagnosticController","checkHealth","checkDetailedHealth","renderTestPage","oauthTestPage","oauthDebugTool","DEFAULT_BUCKET_CONFIG","tokensPerInterval","intervalMs","bucketSize","buckets","TokenBucket","constructor","config","this","tokens","lastRefillTimestamp","_refill","elapsedMs","newTokens","tryConsume","getWaitTimeMs","getBucket","acquire","bucket","waitTimeMs","resolve","setTimeout","tryAcquire","rateLimit","args","configureBucket","safeSerialize","_","value","key","prototype","hasOwnProperty","call","defaultMessage","originalError","cause","errorResponse","e","field","squareErrors","retries","retryAfter","createApiResponse","safeData","assign","additionalProps","locationService","listLocations","User","next","authHeader","authorization","hasMerchant","hasMerchantId","countryCode","refreshSquareTokenIfNeeded","square_access_token","square_token_expires_at","tokenExpiresAt","getTime","square_refresh_token","squareAuthRequired","updatedUser","expires_in","DeleteCommand","uuidv4","usersTable","UserService","getById","newUser","updates","updateExpression","expressionAttributeValues","forEach","index","attributeName","ReturnValues","Attributes","cors","allowedOrigins","Boolean","configureCors","origin","callback","some","allowed","methods","allowedHeaders","exposedHeaders","preflightContinue","optionsSuccessStatus","authCors","header","end","ScanCommand","dynamoDB","square","apiBaseUrl","Limit","testOAuthUrl","getAuthorizationUrl","squareOAuthUrl","squareEnvDisplay","cookies","validateRequest","schema","validateSection","section","sectionErrors","fieldSchema","required","typeErrors","validateType","isNaN","Number","isInteger","parsed","enum","minLength","maxLength","minItems","maxItems","pattern","RegExp","validate","customError","bodyErrors","queryErrors","paramsErrors","CATALOG_ITEMS_TABLE","created_at","updated_at","findById","squareCatalogId","FilterExpression","Items","list","startKey","ExclusiveStartKey","lastEvaluatedKey","LastEvaluatedKey","Count","SquareError","rateLimiter","DEFAULT_RETRY_CONFIG","retryInterval","maxRetryWaitTime","webhookSignatureKeyExpiryTime","configureRateLimits","shouldRetryRequest","calculateBackoff","retryCount","waitTime","pow","retryAfterSec","retryAfterMs","enhanceError","sleep","ms","lastError","retryAttempt","getCredentialsFn","fetchWithTimeout","timeoutMs","controller","AbortController","timeoutId","abort","fetchOptions","signal","fetch","clearTimeout","ok","errorData","postJson","getCategories","getCategoryById","createCategory","updateCategory","deleteCategory","catalogService","localData","local_data","validateCatalogItemRequest","properties","amount","text_query","queryText","trim","keywords","validQueryTypes","categoriesController","put","express","serverless","cookieParser","DynamoDBStore","morgan","app","use","urlencoded","extended","sessionConfig","store","AWSConfigJSON","reapInterval","secret","SESSION_SECRET","resave","saveUninitialized","ENABLE_RESPONSE_CACHE","productsRoutes","categoriesRoutes","authRoutes","healthRoutes","catalogRoutes","locationRoutes","merchantRoutes","startTime","on","duration","originalUrl","getDynamoDb","links","health","products","auth","err","handler","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}