service: joylabs-backend-api-v3

plugins:
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  dotenv:
    path: .env.production

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-1
  stage: production
  memorySize: 512
  timeout: 30
  environment:
    NODE_ENV: production
    API_BASE_URL: https://gki8kva7e3.execute-api.us-west-1.amazonaws.com/production
    API_GATEWAY_URL: https://gki8kva7e3.execute-api.us-west-1.amazonaws.com/production
    SQUARE_APPLICATION_ID: sq0idp-WFTYv3An7NPv6ovGFLld1Q
    SQUARE_ENVIRONMENT: production
    SQUARE_AUTH_URL: https://connect.squareup.com/oauth2/authorize
    SQUARE_TOKEN_URL: https://connect.squareup.com/oauth2/token
    SQUARE_CALLBACK_SCHEME: joylabs
    SQUARE_CALLBACK_PATH: square-callback
    DYNAMODB_STATES_TABLE: joylabs-backend-api-v3-oauth-states-production
    SQUARE_CREDENTIALS_SECRET: square-credentials-production
    LOG_LEVEL: debug
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:CreateTable
            - dynamodb:DescribeTable
          Resource:
            - arn:aws:dynamodb:us-west-1:*:table/${self:provider.environment.DYNAMODB_STATES_TABLE}
            - arn:aws:dynamodb:us-west-1:*:table/joylabs-backend-api-v3-users-production
            - arn:aws:dynamodb:us-west-1:*:table/joylabs-backend-api-v3-sessions-production
            - arn:aws:dynamodb:us-west-1:*:table/joylabs-catalog-products-v3-production
            - arn:aws:dynamodb:us-west-1:*:table/joylabs-catalog-categories-v3-production
            - arn:aws:dynamodb:us-west-1:*:table/joylabs-backend-api-merchants-v3-production
            - arn:aws:dynamodb:us-west-1:*:table/joylabs-backend-api-webhooks-v3-production
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource:
            - arn:aws:secretsmanager:us-west-1:*:secret:square-credentials-production
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - arn:aws:logs:us-west-1:*:log-group:/aws/lambda/joylabs-backend-api-v3-production*

package:
  patterns:
    - '!node_modules/**'
    - '!layers/**'
    - '!.git/**'
    - '!.serverless/**'
    - '!test/**'
    - '!scripts/**'
    - '!*.test.js'
    - '!*.md'
    - '!package-lock.json'
    - 'src/**'

functions:
  api:
    handler: src/index.handler
    events:
      - http:
          path: /api/health
          method: GET
          cors: true
      - http:
          path: /api/auth/connect/url
          method: GET
          cors: true
      - http:
          path: /api/auth/register-state
          method: POST
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true
    layers:
      - { Ref: DependenciesLambdaLayer }
      - { Ref: SquareLambdaLayer }
  
  webhooks:
    handler: src/webhookHandlers.squareWebhook
    events:
      - http:
          path: /api/webhooks/square
          method: POST
          cors: true
      - http:
          path: /api/webhooks/health
          method: GET
          cors: true
    layers:
      - { Ref: DependenciesLambdaLayer }
      - { Ref: SquareLambdaLayer }

  oauth:
    handler: src/oauthHandlers.squareCallback
    events:
      - http:
          path: /api/auth/square/callback
          method: GET
          cors: true
    layers:
      - { Ref: DependenciesLambdaLayer }
      - { Ref: SquareLambdaLayer }

layers:
  dependencies:
    path: layers/dependencies
    name: ${self:service}-dependencies-${opt:stage, 'production'}
    description: Common dependencies for ${self:service}
  square:
    path: layers/square
    name: ${self:service}-square-${opt:stage, 'production'}
    description: Square SDK
    compatibleRuntimes:
      - nodejs18.x 

resources:
  Resources:
    OAuthStatesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_STATES_TABLE}
        AttributeDefinitions:
          - AttributeName: state
            AttributeType: S
        KeySchema:
          - AttributeName: state
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        BillingMode: PAY_PER_REQUEST 